

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Mon Nov 30 14:18:40 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    70                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    71                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    72                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    73                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    74  0000                     
    75                           ; Version 2.20
    76                           ; Generated 12/02/2020 GMT
    77                           ; 
    78                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    79                           ; All rights reserved.
    80                           ; 
    81                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    82                           ; 
    83                           ; Redistribution and use in source and binary forms, with or without modification, are
    84                           ; permitted provided that the following conditions are met:
    85                           ; 
    86                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    87                           ;        conditions and the following disclaimer.
    88                           ; 
    89                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    90                           ;        of conditions and the following disclaimer in the documentation and/or other
    91                           ;        materials provided with the distribution.
    92                           ; 
    93                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    94                           ;        software without specific prior written permission.
    95                           ; 
    96                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    97                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    98                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    99                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   100                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   101                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   102                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   103                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   104                           ; 
   105                           ; 
   106                           ; Code-generator required, PIC18F4550 Definitions
   107                           ; 
   108                           ; SFR Addresses
   109  0000                     
   110                           	psect	idataBANK0
   111  004C1C                     __pidataBANK0:
   112                           	callstack 0
   113                           
   114                           ;initializer for _opcion
   115  004C1C  0001               	dw	1
   116                           
   117                           	psect	idataBANK1
   118  004B86                     __pidataBANK1:
   119                           	callstack 0
   120                           
   121                           ;initializer for _aux
   122  004B86  20                 	db	32
   123  004B87  00                 	db	0
   124  004B88  00                 	db	0
   125  004B89  00                 	db	0
   126  004B8A  00                 	db	0
   127  004B8B  00                 	db	0
   128  004B8C  00                 	db	0
   129  004B8D  00                 	db	0
   130  004B8E  00                 	db	0
   131  004B8F  00                 	db	0
   132  004B90  00                 	db	0
   133  004B91  00                 	db	0
   134  004B92  00                 	db	0
   135  004B93  00                 	db	0
   136  004B94  00                 	db	0
   137  004B95  00                 	db	0
   138  004B96  00                 	db	0
   139  004B97  00                 	db	0
   140  004B98  00                 	db	0
   141  004B99  00                 	db	0
   142                           
   143                           ;initializer for _txt
   144  004B9A  20                 	db	32
   145  004B9B  00                 	db	0
   146  004B9C  00                 	db	0
   147  004B9D  00                 	db	0
   148  004B9E  00                 	db	0
   149  004B9F  00                 	db	0
   150  004BA0  00                 	db	0
   151  004BA1  00                 	db	0
   152  004BA2  00                 	db	0
   153  004BA3  00                 	db	0
   154  0000                     _RCREG	set	4014
   155  0000                     _RCSTAbits	set	4011
   156  0000                     _TXREG	set	4013
   157  0000                     _RCSTA	set	4011
   158  0000                     _TXSTA	set	4012
   159  0000                     _SPBRG	set	4015
   160  0000                     _TRISCbits	set	3988
   161  0000                     _LATDbits	set	3980
   162  0000                     _PIE1bits	set	3997
   163  0000                     _INTCONbits	set	4082
   164  0000                     _TRISDbits	set	3989
   165  0000                     _TRISC	set	3988
   166  0000                     _ADCON1	set	4033
   167  0000                     _PIR1bits	set	3998
   168  0000                     _PORTD	set	3971
   169  0000                     _PORTCbits	set	3970
   170  0000                     _ADRESL	set	4035
   171  0000                     _ADRESH	set	4036
   172  0000                     _ADCON0bits	set	4034
   173  0000                     _ADCON2bits	set	4032
   174  0000                     _CREN	set	32092
   175                           
   176                           	psect	smallconst
   177  000800                     __psmallconst:
   178                           	callstack 0
   179  000800  00                 	db	0
   180  000801  20                 	db	32
   181  000802  20                 	db	32
   182  000803  20                 	db	32
   183  000804  20                 	db	32
   184  000805  20                 	db	32
   185  000806  20                 	db	32
   186  000807  20                 	db	32
   187  000808  20                 	db	32
   188  000809  20                 	db	32
   189  00080A  20                 	db	32
   190  00080B  20                 	db	32
   191  00080C  20                 	db	32
   192  00080D  20                 	db	32
   193  00080E  20                 	db	32
   194  00080F  20                 	db	32
   195  000810  20                 	db	32
   196  000811  20                 	db	32
   197  000812  20                 	db	32
   198  000813  20                 	db	32
   199  000814  20                 	db	32
   200  000815  00                 	db	0
   201  000816                     STR_8:
   202  000816  52                 	db	82	;'R'
   203  000817  45                 	db	69	;'E'
   204  000818  47                 	db	71	;'G'
   205  000819  55                 	db	85	;'U'
   206  00081A  4C                 	db	76	;'L'
   207  00081B  41                 	db	65	;'A'
   208  00081C  54                 	db	84	;'T'
   209  00081D  45                 	db	69	;'E'
   210  00081E  20                 	db	32
   211  00081F  54                 	db	84	;'T'
   212  000820  45                 	db	69	;'E'
   213  000821  4D                 	db	77	;'M'
   214  000822  50                 	db	80	;'P'
   215  000823  45                 	db	69	;'E'
   216  000824  52                 	db	82	;'R'
   217  000825  41                 	db	65	;'A'
   218  000826  54                 	db	84	;'T'
   219  000827  55                 	db	85	;'U'
   220  000828  52                 	db	82	;'R'
   221  000829  45                 	db	69	;'E'
   222  00082A  00                 	db	0
   223  00082B                     STR_1:
   224  00082B  20                 	db	32
   225  00082C  20                 	db	32
   226  00082D  20                 	db	32
   227  00082E  55                 	db	85	;'U'
   228  00082F  53                 	db	83	;'S'
   229  000830  45                 	db	69	;'E'
   230  000831  52                 	db	82	;'R'
   231  000832  20                 	db	32
   232  000833  49                 	db	73	;'I'
   233  000834  4E                 	db	78	;'N'
   234  000835  54                 	db	84	;'T'
   235  000836  45                 	db	69	;'E'
   236  000837  52                 	db	82	;'R'
   237  000838  46                 	db	70	;'F'
   238  000839  41                 	db	65	;'A'
   239  00083A  43                 	db	67	;'C'
   240  00083B  45                 	db	69	;'E'
   241  00083C  00                 	db	0
   242  00083D                     STR_2:
   243  00083D  31                 	db	49	;'1'
   244  00083E  2E                 	db	46
   245  00083F  48                 	db	72	;'H'
   246  000840  65                 	db	101	;'e'
   247  000841  61                 	db	97	;'a'
   248  000842  74                 	db	116	;'t'
   249  000843  65                 	db	101	;'e'
   250  000844  72                 	db	114	;'r'
   251  000845  20                 	db	32
   252  000846  61                 	db	97	;'a'
   253  000847  6E                 	db	110	;'n'
   254  000848  64                 	db	100	;'d'
   255  000849  20                 	db	32
   256  00084A  46                 	db	70	;'F'
   257  00084B  61                 	db	97	;'a'
   258  00084C  6E                 	db	110	;'n'
   259  00084D  00                 	db	0
   260  00084E                     STR_12:
   261  00084E  54                 	db	84	;'T'
   262  00084F  45                 	db	69	;'E'
   263  000850  4D                 	db	77	;'M'
   264  000851  50                 	db	80	;'P'
   265  000852  28                 	db	40
   266  000853  49                 	db	73	;'I'
   267  000854  4E                 	db	78	;'N'
   268  000855  43                 	db	67	;'C'
   269  000856  29                 	db	41
   270  000857  3A                 	db	58	;':'
   271  000858  25                 	db	37
   272  000859  33                 	db	51	;'3'
   273  00085A  2E                 	db	46
   274  00085B  31                 	db	49	;'1'
   275  00085C  66                 	db	102	;'f'
   276  00085D  00                 	db	0
   277  00085E                     STR_13:
   278  00085E  54                 	db	84	;'T'
   279  00085F  45                 	db	69	;'E'
   280  000860  4D                 	db	77	;'M'
   281  000861  50                 	db	80	;'P'
   282  000862  28                 	db	40
   283  000863  4E                 	db	78	;'N'
   284  000864  45                 	db	69	;'E'
   285  000865  4F                 	db	79	;'O'
   286  000866  29                 	db	41
   287  000867  3A                 	db	58	;':'
   288  000868  25                 	db	37
   289  000869  33                 	db	51	;'3'
   290  00086A  2E                 	db	46
   291  00086B  31                 	db	49	;'1'
   292  00086C  66                 	db	102	;'f'
   293  00086D  00                 	db	0
   294  00086E                     STR_23:
   295  00086E  70                 	db	112	;'p'
   296  00086F  65                 	db	101	;'e'
   297  000870  73                 	db	115	;'s'
   298  000871  6F                 	db	111	;'o'
   299  000872  28                 	db	40
   300  000873  4B                 	db	75	;'K'
   301  000874  67                 	db	103	;'g'
   302  000875  29                 	db	41
   303  000876  3A                 	db	58	;':'
   304  000877  25                 	db	37
   305  000878  31                 	db	49	;'1'
   306  000879  2E                 	db	46
   307  00087A  32                 	db	50	;'2'
   308  00087B  66                 	db	102	;'f'
   309  00087C  00                 	db	0
   310  00087D                     STR_4:
   311  00087D  33                 	db	51	;'3'
   312  00087E  2E                 	db	46
   313  00087F  4F                 	db	79	;'O'
   314  000880  32                 	db	50	;'2'
   315  000881  20                 	db	32
   316  000882  4C                 	db	76	;'L'
   317  000883  65                 	db	101	;'e'
   318  000884  76                 	db	118	;'v'
   319  000885  65                 	db	101	;'e'
   320  000886  6C                 	db	108	;'l'
   321  000887  00                 	db	0
   322  000888                     STR_3:
   323  000888  32                 	db	50	;'2'
   324  000889  2E                 	db	46
   325  00088A  48                 	db	72	;'H'
   326  00088B  75                 	db	117	;'u'
   327  00088C  6D                 	db	109	;'m'
   328  00088D  69                 	db	105	;'i'
   329  00088E  64                 	db	100	;'d'
   330  00088F  69                 	db	105	;'i'
   331  000890  74                 	db	116	;'t'
   332  000891  79                 	db	121	;'y'
   333  000892  00                 	db	0
   334  000893                     STR_18:
   335  000893  68                 	db	104	;'h'
   336  000894  75                 	db	117	;'u'
   337  000895  6D                 	db	109	;'m'
   338  000896  3A                 	db	58	;':'
   339  000897  25                 	db	37
   340  000898  33                 	db	51	;'3'
   341  000899  2E                 	db	46
   342  00089A  30                 	db	48	;'0'
   343  00089B  66                 	db	102	;'f'
   344  00089C  00                 	db	0
   345  00089D                     STR_5:
   346  00089D  6F                 	db	111	;'o'
   347  00089E  70                 	db	112	;'p'
   348  00089F  63                 	db	99	;'c'
   349  0008A0  69                 	db	105	;'i'
   350  0008A1  6F                 	db	111	;'o'
   351  0008A2  6E                 	db	110	;'n'
   352  0008A3  3A                 	db	58	;':'
   353  0008A4  20                 	db	32
   354  0008A5  00                 	db	0
   355  0008A6                     STR_9:
   356  0008A6  31                 	db	49	;'1'
   357  0008A7  2E                 	db	46
   358  0008A8  56                 	db	86	;'V'
   359  0008A9  4F                 	db	79	;'O'
   360  0008AA  4C                 	db	76	;'L'
   361  0008AB  56                 	db	86	;'V'
   362  0008AC  45                 	db	69	;'E'
   363  0008AD  52                 	db	82	;'R'
   364  0008AE  00                 	db	0
   365  0008AF                     STR_15:
   366  0008AF  32                 	db	50	;'2'
   367  0008B0  2E                 	db	46
   368  0008B1  56                 	db	86	;'V'
   369  0008B2  4F                 	db	79	;'O'
   370  0008B3  4C                 	db	76	;'L'
   371  0008B4  56                 	db	86	;'V'
   372  0008B5  45                 	db	69	;'E'
   373  0008B6  52                 	db	82	;'R'
   374  0008B7  00                 	db	0
   375  0008B8                     STR_20:
   376  0008B8  33                 	db	51	;'3'
   377  0008B9  2E                 	db	46
   378  0008BA  56                 	db	86	;'V'
   379  0008BB  4F                 	db	79	;'O'
   380  0008BC  4C                 	db	76	;'L'
   381  0008BD  56                 	db	86	;'V'
   382  0008BE  45                 	db	69	;'E'
   383  0008BF  52                 	db	82	;'R'
   384  0008C0  00                 	db	0
   385  0008C1                     STR_25:
   386  0008C1  49                 	db	73	;'I'
   387  0008C2  4E                 	db	78	;'N'
   388  0008C3  46                 	db	70	;'F'
   389  0008C4  00                 	db	0
   390  0008C5                     STR_29:
   391  0008C5  4E                 	db	78	;'N'
   392  0008C6  41                 	db	65	;'A'
   393  0008C7  4E                 	db	78	;'N'
   394  0008C8  00                 	db	0
   395  0008C9                     STR_26:
   396  0008C9  69                 	db	105	;'i'
   397  0008CA  6E                 	db	110	;'n'
   398  0008CB  66                 	db	102	;'f'
   399  0008CC  00                 	db	0
   400  0008CD                     STR_30:
   401  0008CD  6E                 	db	110	;'n'
   402  0008CE  61                 	db	97	;'a'
   403  0008CF  6E                 	db	110	;'n'
   404  0008D0  00                 	db	0
   405  0008D1                     STR_33:
   406  0008D1  6C                 	db	108	;'l'
   407  0008D2  66                 	db	102	;'f'
   408  0008D3  00                 	db	0
   409  0008D4                     STR_6:
   410  0008D4  25                 	db	37
   411  0008D5  69                 	db	105	;'i'
   412  0008D6  00                 	db	0
   413  0008D7  00                 	db	0	; dummy byte at the end
   414  0000                     
   415                           ; #config settings
   416                           
   417                           	psect	cinit
   418  004738                     __pcinit:
   419                           	callstack 0
   420  004738                     start_initialization:
   421                           	callstack 0
   422  004738                     __initialization:
   423                           	callstack 0
   424                           
   425                           ; Initialize objects allocated to BANK1 (30 bytes)
   426                           ; load TBLPTR registers with __pidataBANK1
   427  004738  0E86               	movlw	low __pidataBANK1
   428  00473A  6EF6               	movwf	tblptrl,c
   429  00473C  0E4B               	movlw	high __pidataBANK1
   430  00473E  6EF7               	movwf	tblptrh,c
   431  004740  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   432  004742  6EF8               	movwf	tblptru,c
   433  004744  EE01  F058         	lfsr	0,__pdataBANK1
   434  004748  EE10 F01E          	lfsr	1,30
   435  00474C                     copy_data0:
   436  00474C  0009               	tblrd		*+
   437  00474E  CFF5 FFEE          	movff	tablat,postinc0
   438  004752  50E5               	movf	postdec1,w,c
   439  004754  50E1               	movf	fsr1l,w,c
   440  004756  E1FA               	bnz	copy_data0
   441                           
   442                           ; Initialize objects allocated to BANK0 (2 bytes)
   443                           ; load TBLPTR registers with __pidataBANK0
   444  004758  0E1C               	movlw	low __pidataBANK0
   445  00475A  6EF6               	movwf	tblptrl,c
   446  00475C  0E4C               	movlw	high __pidataBANK0
   447  00475E  6EF7               	movwf	tblptrh,c
   448  004760  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   449  004762  6EF8               	movwf	tblptru,c
   450  004764  0009               	tblrd		*+	;fetch initializer
   451  004766  CFF5 F0FE          	movff	tablat,__pdataBANK0
   452  00476A  0009               	tblrd		*+	;fetch initializer
   453  00476C  CFF5 F0FF          	movff	tablat,__pdataBANK0+1
   454                           
   455                           ; Clear objects allocated to BANK1 (88 bytes)
   456  004770  EE01  F000         	lfsr	0,__pbssBANK1
   457  004774  0E58               	movlw	88
   458  004776                     clear_0:
   459  004776  6AEE               	clrf	postinc0,c
   460  004778  06E8               	decf	wreg,f,c
   461  00477A  E1FD               	bnz	clear_0
   462                           
   463                           ; Clear objects allocated to BANK0 (32 bytes)
   464  00477C  EE00  F0DE         	lfsr	0,__pbssBANK0
   465  004780  0E20               	movlw	32
   466  004782                     clear_1:
   467  004782  6AEE               	clrf	postinc0,c
   468  004784  06E8               	decf	wreg,f,c
   469  004786  E1FD               	bnz	clear_1
   470                           
   471                           ; Clear objects allocated to COMRAM (1 bytes)
   472  004788  6A5C               	clrf	__pbssCOMRAM& (0+255),c
   473  00478A                     end_of_initialization:
   474                           	callstack 0
   475  00478A                     __end_of__initialization:
   476                           	callstack 0
   477  00478A  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   478  00478C  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   479  00478E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   480  004790  6EF8               	movwf	tblptru,c
   481  004792  0100               	movlb	0
   482  004794  EF2A  F024         	goto	_main	;jump to C main() function
   483                           
   484                           	psect	bssCOMRAM
   485  00005C                     __pbssCOMRAM:
   486                           	callstack 0
   487  00005C                     _t:
   488                           	callstack 0
   489  00005C                     	ds	1
   490                           
   491                           	psect	bssBANK0
   492  0000DE                     __pbssBANK0:
   493                           	callstack 0
   494  0000DE                     _peso:
   495                           	callstack 0
   496  0000DE                     	ds	4
   497  0000E2                     _tempi:
   498                           	callstack 0
   499  0000E2                     	ds	4
   500  0000E6                     _temp:
   501                           	callstack 0
   502  0000E6                     	ds	4
   503  0000EA                     _hum:
   504                           	callstack 0
   505  0000EA                     	ds	4
   506  0000EE                     _nout:
   507                           	callstack 0
   508  0000EE                     	ds	2
   509  0000F0                     _width:
   510                           	callstack 0
   511  0000F0                     	ds	2
   512  0000F2                     _prec:
   513                           	callstack 0
   514  0000F2                     	ds	2
   515  0000F4                     _flags:
   516                           	callstack 0
   517  0000F4                     	ds	2
   518  0000F6                     _conver3:
   519                           	callstack 0
   520  0000F6                     	ds	2
   521  0000F8                     _conver2:
   522                           	callstack 0
   523  0000F8                     	ds	2
   524  0000FA                     _conver1:
   525                           	callstack 0
   526  0000FA                     	ds	2
   527  0000FC                     _conver:
   528                           	callstack 0
   529  0000FC                     	ds	2
   530                           
   531                           	psect	dataBANK0
   532  0000FE                     __pdataBANK0:
   533                           	callstack 0
   534  0000FE                     _opcion:
   535                           	callstack 0
   536  0000FE                     	ds	2
   537                           
   538                           	psect	bssBANK1
   539  000100                     __pbssBANK1:
   540                           	callstack 0
   541  000100                     floorf@F524:
   542                           	callstack 0
   543  000100                     	ds	4
   544  000104                     ___fpclassifyf@F463:
   545                           	callstack 0
   546  000104                     	ds	4
   547  000108                     _dbuf:
   548                           	callstack 0
   549  000108                     	ds	80
   550                           
   551                           	psect	dataBANK1
   552  000158                     __pdataBANK1:
   553                           	callstack 0
   554  000158                     _aux:
   555                           	callstack 0
   556  000158                     	ds	20
   557  00016C                     _txt:
   558                           	callstack 0
   559  00016C                     	ds	10
   560                           
   561                           	psect	cstackBANK1
   562  000176                     __pcstackBANK1:
   563                           	callstack 0
   564  000176                     ??_MenuP:
   565                           
   566                           ; 1 bytes @ 0x0
   567  000176                     	ds	2
   568                           
   569                           	psect	cstackBANK0
   570  000060                     __pcstackBANK0:
   571                           	callstack 0
   572  000060                     ?_efgtoa:
   573                           	callstack 0
   574  000060                     efgtoa@fp:
   575                           	callstack 0
   576  000060                     UART_Init@BAUDRATE:
   577                           	callstack 0
   578                           
   579                           ; 4 bytes @ 0x0
   580  000060                     	ds	2
   581  000062                     efgtoa@f:
   582                           	callstack 0
   583                           
   584                           ; 4 bytes @ 0x2
   585  000062                     	ds	4
   586  000066                     efgtoa@c:
   587                           	callstack 0
   588                           
   589                           ; 1 bytes @ 0x6
   590  000066                     	ds	1
   591  000067                     ??_efgtoa:
   592                           
   593                           ; 1 bytes @ 0x7
   594  000067                     	ds	5
   595  00006C                     efgtoa@ou:
   596                           	callstack 0
   597                           
   598                           ; 4 bytes @ 0xC
   599  00006C                     	ds	4
   600  000070                     _efgtoa$1315:
   601                           	callstack 0
   602                           
   603                           ; 2 bytes @ 0x10
   604  000070                     	ds	2
   605  000072                     _efgtoa$1316:
   606                           	callstack 0
   607                           
   608                           ; 2 bytes @ 0x12
   609  000072                     	ds	2
   610  000074                     _efgtoa$1320:
   611                           	callstack 0
   612                           
   613                           ; 2 bytes @ 0x14
   614  000074                     	ds	2
   615  000076                     _efgtoa$1324:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0x16
   619  000076                     	ds	2
   620  000078                     _efgtoa$1325:
   621                           	callstack 0
   622                           
   623                           ; 2 bytes @ 0x18
   624  000078                     	ds	2
   625  00007A                     _efgtoa$1326:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x1A
   629  00007A                     	ds	2
   630  00007C                     efgtoa@t:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x1C
   634  00007C                     	ds	2
   635  00007E                     efgtoa@pp:
   636                           	callstack 0
   637                           
   638                           ; 2 bytes @ 0x1E
   639  00007E                     	ds	2
   640  000080                     efgtoa@m:
   641                           	callstack 0
   642                           
   643                           ; 2 bytes @ 0x20
   644  000080                     	ds	2
   645  000082                     efgtoa@ne:
   646                           	callstack 0
   647                           
   648                           ; 2 bytes @ 0x22
   649  000082                     	ds	2
   650  000084                     efgtoa@d:
   651                           	callstack 0
   652                           
   653                           ; 2 bytes @ 0x24
   654  000084                     	ds	2
   655  000086                     efgtoa@sign:
   656                           	callstack 0
   657                           
   658                           ; 2 bytes @ 0x26
   659  000086                     	ds	2
   660  000088                     efgtoa@p:
   661                           	callstack 0
   662                           
   663                           ; 2 bytes @ 0x28
   664  000088                     	ds	2
   665  00008A                     efgtoa@nmode:
   666                           	callstack 0
   667                           
   668                           ; 1 bytes @ 0x2A
   669  00008A                     	ds	1
   670  00008B                     efgtoa@w:
   671                           	callstack 0
   672                           
   673                           ; 2 bytes @ 0x2B
   674  00008B                     	ds	2
   675  00008D                     efgtoa@mode:
   676                           	callstack 0
   677                           
   678                           ; 1 bytes @ 0x2D
   679  00008D                     	ds	1
   680  00008E                     efgtoa@h:
   681                           	callstack 0
   682                           
   683                           ; 4 bytes @ 0x2E
   684  00008E                     	ds	4
   685  000092                     efgtoa@l:
   686                           	callstack 0
   687                           
   688                           ; 4 bytes @ 0x32
   689  000092                     	ds	4
   690  000096                     efgtoa@i:
   691                           	callstack 0
   692                           
   693                           ; 2 bytes @ 0x36
   694  000096                     	ds	2
   695  000098                     efgtoa@g:
   696                           	callstack 0
   697                           
   698                           ; 4 bytes @ 0x38
   699  000098                     	ds	4
   700  00009C                     efgtoa@e:
   701                           	callstack 0
   702                           
   703                           ; 2 bytes @ 0x3C
   704  00009C                     	ds	2
   705  00009E                     efgtoa@n:
   706                           	callstack 0
   707                           
   708                           ; 2 bytes @ 0x3E
   709  00009E                     	ds	2
   710  0000A0                     efgtoa@u:
   711                           	callstack 0
   712                           
   713                           ; 4 bytes @ 0x40
   714  0000A0                     	ds	4
   715  0000A4                     ?_vfpfcnvrt:
   716                           	callstack 0
   717  0000A4                     vfpfcnvrt@fp:
   718                           	callstack 0
   719                           
   720                           ; 2 bytes @ 0x44
   721  0000A4                     	ds	2
   722  0000A6                     vfpfcnvrt@fmt:
   723                           	callstack 0
   724                           
   725                           ; 2 bytes @ 0x46
   726  0000A6                     	ds	2
   727  0000A8                     vfpfcnvrt@ap:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0x48
   731  0000A8                     	ds	2
   732  0000AA                     ??_vfpfcnvrt:
   733                           
   734                           ; 1 bytes @ 0x4A
   735  0000AA                     	ds	4
   736  0000AE                     vfpfcnvrt@ll:
   737                           	callstack 0
   738                           
   739                           ; 8 bytes @ 0x4E
   740  0000AE                     	ds	8
   741  0000B6                     _vfpfcnvrt$1340:
   742                           	callstack 0
   743                           
   744                           ; 2 bytes @ 0x56
   745  0000B6                     	ds	2
   746  0000B8                     _vfpfcnvrt$1341:
   747                           	callstack 0
   748                           
   749                           ; 2 bytes @ 0x58
   750  0000B8                     	ds	2
   751  0000BA                     _vfpfcnvrt$1346:
   752                           	callstack 0
   753                           
   754                           ; 2 bytes @ 0x5A
   755  0000BA                     	ds	2
   756  0000BC                     vfpfcnvrt@f:
   757                           	callstack 0
   758                           
   759                           ; 4 bytes @ 0x5C
   760  0000BC                     	ds	4
   761  0000C0                     vfpfcnvrt@ct:
   762                           	callstack 0
   763                           
   764                           ; 3 bytes @ 0x60
   765  0000C0                     	ds	3
   766  0000C3                     vfpfcnvrt@c:
   767                           	callstack 0
   768                           
   769                           ; 1 bytes @ 0x63
   770  0000C3                     	ds	1
   771  0000C4                     ?_vfprintf:
   772                           	callstack 0
   773  0000C4                     vfprintf@fp:
   774                           	callstack 0
   775                           
   776                           ; 2 bytes @ 0x64
   777  0000C4                     	ds	2
   778  0000C6                     vfprintf@fmt:
   779                           	callstack 0
   780                           
   781                           ; 2 bytes @ 0x66
   782  0000C6                     	ds	2
   783  0000C8                     vfprintf@ap:
   784                           	callstack 0
   785                           
   786                           ; 2 bytes @ 0x68
   787  0000C8                     	ds	2
   788  0000CA                     vfprintf@cfmt:
   789                           	callstack 0
   790                           
   791                           ; 2 bytes @ 0x6A
   792  0000CA                     	ds	2
   793  0000CC                     ?_sprintf:
   794                           	callstack 0
   795  0000CC                     sprintf@s:
   796                           	callstack 0
   797                           
   798                           ; 2 bytes @ 0x6C
   799  0000CC                     	ds	2
   800  0000CE                     sprintf@fmt:
   801                           	callstack 0
   802                           
   803                           ; 2 bytes @ 0x6E
   804  0000CE                     	ds	8
   805  0000D6                     sprintf@ap:
   806                           	callstack 0
   807                           
   808                           ; 2 bytes @ 0x76
   809  0000D6                     	ds	2
   810  0000D8                     sprintf@f:
   811                           	callstack 0
   812                           
   813                           ; 6 bytes @ 0x78
   814  0000D8                     	ds	6
   815                           
   816                           	psect	cstackCOMRAM
   817  000001                     __pcstackCOMRAM:
   818                           	callstack 0
   819  000001                     i2UART_Wrrite_Chr@letra:
   820                           	callstack 0
   821                           
   822                           ; 1 bytes @ 0x0
   823  000001                     	ds	1
   824  000002                     ??_enviar_dato:
   825  000002                     ?_strlen:
   826                           	callstack 0
   827  000002                     ?___fpclassifyf:
   828                           	callstack 0
   829  000002                     ?_isupper:
   830                           	callstack 0
   831  000002                     ?_isdigit:
   832                           	callstack 0
   833  000002                     ?_strncmp:
   834                           	callstack 0
   835  000002                     ?_isspace:
   836                           	callstack 0
   837  000002                     ?_ADC_Read:
   838                           	callstack 0
   839  000002                     ?___wmul:
   840                           	callstack 0
   841  000002                     ?___awdiv:
   842                           	callstack 0
   843  000002                     ?___awmod:
   844                           	callstack 0
   845  000002                     ?___flneg:
   846                           	callstack 0
   847  000002                     ?___xxtofl:
   848                           	callstack 0
   849  000002                     ?___aodiv:
   850                           	callstack 0
   851  000002                     ?___aomod:
   852                           	callstack 0
   853  000002                     UART_Wrrite_Chr@letra:
   854                           	callstack 0
   855  000002                     ADC_Init@kTad:
   856                           	callstack 0
   857  000002                     ___wmul@multiplier:
   858                           	callstack 0
   859  000002                     ___awdiv@dividend:
   860                           	callstack 0
   861  000002                     ___awmod@dividend:
   862                           	callstack 0
   863  000002                     isdigit@c:
   864                           	callstack 0
   865  000002                     isspace@c:
   866                           	callstack 0
   867  000002                     isupper@c:
   868                           	callstack 0
   869  000002                     fputc@c:
   870                           	callstack 0
   871  000002                     strcpy@dest:
   872                           	callstack 0
   873  000002                     strlen@s:
   874                           	callstack 0
   875  000002                     strncmp@_l:
   876                           	callstack 0
   877  000002                     ___fleq@ff1:
   878                           	callstack 0
   879  000002                     ___flneg@f1:
   880                           	callstack 0
   881  000002                     ___xxtofl@val:
   882                           	callstack 0
   883  000002                     ___fpclassifyf@x:
   884                           	callstack 0
   885  000002                     ___aodiv@dividend:
   886                           	callstack 0
   887  000002                     ___aomod@dividend:
   888                           	callstack 0
   889                           
   890                           ; 8 bytes @ 0x1
   891  000002                     	ds	1
   892  000003                     
   893                           ; 1 bytes @ 0x2
   894  000003                     	ds	1
   895  000004                     ??_isupper:
   896  000004                     ??_isdigit:
   897  000004                     ??_isspace:
   898  000004                     ??_ADC_Read:
   899  000004                     enviar_dato@cmd:
   900                           	callstack 0
   901  000004                     ADC_Init@kTosc:
   902                           	callstack 0
   903  000004                     ___wmul@multiplicand:
   904                           	callstack 0
   905  000004                     ___awdiv@divisor:
   906                           	callstack 0
   907  000004                     ___awmod@divisor:
   908                           	callstack 0
   909  000004                     fputc@fp:
   910                           	callstack 0
   911  000004                     strcpy@src:
   912                           	callstack 0
   913  000004                     strlen@a:
   914                           	callstack 0
   915  000004                     strncmp@_r:
   916                           	callstack 0
   917                           
   918                           ; 2 bytes @ 0x3
   919  000004                     	ds	1
   920  000005                     ??_LCD_Init:
   921  000005                     LCD_Chr_Cp@letra:
   922                           	callstack 0
   923  000005                     LCD_Cmd@cmd:
   924                           	callstack 0
   925                           
   926                           ; 1 bytes @ 0x4
   927  000005                     	ds	1
   928  000006                     ??_fputc:
   929  000006                     ??___fpclassifyf:
   930  000006                     ??_strcpy:
   931  000006                     ??_ADC_Init:
   932  000006                     ??___xxtofl:
   933  000006                     LCD_XY@x:
   934                           	callstack 0
   935  000006                     ___awdiv@counter:
   936                           	callstack 0
   937  000006                     ___awmod@counter:
   938                           	callstack 0
   939  000006                     ADC_Read@miConver:
   940                           	callstack 0
   941  000006                     ___wmul@product:
   942                           	callstack 0
   943  000006                     strncmp@n:
   944                           	callstack 0
   945  000006                     ___fleq@ff2:
   946                           	callstack 0
   947                           
   948                           ; 4 bytes @ 0x5
   949  000006                     	ds	1
   950  000007                     ??_LCD_XY:
   951  000007                     ___awdiv@sign:
   952                           	callstack 0
   953  000007                     ___awmod@sign:
   954                           	callstack 0
   955                           
   956                           ; 1 bytes @ 0x6
   957  000007                     	ds	1
   958  000008                     ??_strncmp:
   959  000008                     ?_tolower:
   960                           	callstack 0
   961  000008                     ADC_Read@miCanal:
   962                           	callstack 0
   963  000008                     _isspace$1413:
   964                           	callstack 0
   965  000008                     ___awdiv@quotient:
   966                           	callstack 0
   967  000008                     strcpy@s:
   968                           	callstack 0
   969  000008                     tolower@c:
   970                           	callstack 0
   971                           
   972                           ; 2 bytes @ 0x7
   973  000008                     	ds	1
   974  000009                     ?_atoi:
   975                           	callstack 0
   976  000009                     LCD_XY@y:
   977                           	callstack 0
   978  000009                     atoi@s:
   979                           	callstack 0
   980  000009                     strncmp@l:
   981                           	callstack 0
   982                           
   983                           ; 2 bytes @ 0x8
   984  000009                     	ds	1
   985  00000A                     ??_tolower:
   986  00000A                     ??___fleq:
   987  00000A                     LCD_Chr@x:
   988                           	callstack 0
   989  00000A                     LCD_Out@x:
   990                           	callstack 0
   991  00000A                     ___xxtofl@sign:
   992                           	callstack 0
   993  00000A                     ___fpclassifyf@e:
   994                           	callstack 0
   995  00000A                     strcpy@d:
   996                           	callstack 0
   997  00000A                     ___aodiv@divisor:
   998                           	callstack 0
   999  00000A                     ___aomod@divisor:
  1000                           	callstack 0
  1001                           
  1002                           ; 8 bytes @ 0x9
  1003  00000A                     	ds	1
  1004  00000B                     ??_atoi:
  1005  00000B                     LCD_Chr@letra:
  1006                           	callstack 0
  1007  00000B                     ___xxtofl@exp:
  1008                           	callstack 0
  1009  00000B                     LCD_Out@text:
  1010                           	callstack 0
  1011  00000B                     fputs@s:
  1012                           	callstack 0
  1013  00000B                     strncmp@r:
  1014                           	callstack 0
  1015                           
  1016                           ; 2 bytes @ 0xA
  1017  00000B                     	ds	1
  1018  00000C                     LCD_Chr@y:
  1019                           	callstack 0
  1020  00000C                     ___xxtofl@arg:
  1021                           	callstack 0
  1022  00000C                     ___fpclassifyf@u:
  1023                           	callstack 0
  1024                           
  1025                           ; 4 bytes @ 0xB
  1026  00000C                     	ds	1
  1027  00000D                     LCD_Out@y:
  1028                           	callstack 0
  1029  00000D                     fputs@fp:
  1030                           	callstack 0
  1031                           
  1032                           ; 2 bytes @ 0xC
  1033  00000D                     	ds	1
  1034  00000E                     _tolower$1477:
  1035                           	callstack 0
  1036                           
  1037                           ; 2 bytes @ 0xD
  1038  00000E                     	ds	1
  1039  00000F                     fputs@c:
  1040                           	callstack 0
  1041  00000F                     atoi@neg:
  1042                           	callstack 0
  1043                           
  1044                           ; 2 bytes @ 0xE
  1045  00000F                     	ds	1
  1046  000010                     ?___flmul:
  1047                           	callstack 0
  1048  000010                     fputs@i:
  1049                           	callstack 0
  1050  000010                     ___flmul@b:
  1051                           	callstack 0
  1052                           
  1053                           ; 4 bytes @ 0xF
  1054  000010                     	ds	1
  1055  000011                     _atoi$1382:
  1056                           	callstack 0
  1057                           
  1058                           ; 2 bytes @ 0x10
  1059  000011                     	ds	1
  1060  000012                     ?_pad:
  1061                           	callstack 0
  1062  000012                     ___aodiv@counter:
  1063                           	callstack 0
  1064  000012                     ___aomod@counter:
  1065                           	callstack 0
  1066  000012                     pad@fp:
  1067                           	callstack 0
  1068                           
  1069                           ; 2 bytes @ 0x11
  1070  000012                     	ds	1
  1071  000013                     ___aodiv@sign:
  1072                           	callstack 0
  1073  000013                     ___aomod@sign:
  1074                           	callstack 0
  1075  000013                     _atoi$1384:
  1076                           	callstack 0
  1077                           
  1078                           ; 2 bytes @ 0x12
  1079  000013                     	ds	1
  1080  000014                     ?_abs:
  1081                           	callstack 0
  1082  000014                     pad@buf:
  1083                           	callstack 0
  1084  000014                     abs@a:
  1085                           	callstack 0
  1086  000014                     ___flmul@a:
  1087                           	callstack 0
  1088  000014                     ___aodiv@quotient:
  1089                           	callstack 0
  1090                           
  1091                           ; 8 bytes @ 0x13
  1092  000014                     	ds	1
  1093  000015                     _atoi$1383:
  1094                           	callstack 0
  1095                           
  1096                           ; 1 bytes @ 0x14
  1097  000015                     	ds	1
  1098  000016                     ??_abs:
  1099  000016                     pad@p:
  1100                           	callstack 0
  1101  000016                     atoi@n:
  1102                           	callstack 0
  1103                           
  1104                           ; 2 bytes @ 0x15
  1105  000016                     	ds	2
  1106  000018                     ??___flmul:
  1107  000018                     ??_pad:
  1108                           
  1109                           ; 1 bytes @ 0x17
  1110  000018                     	ds	1
  1111  000019                     pad@i:
  1112                           	callstack 0
  1113                           
  1114                           ; 2 bytes @ 0x18
  1115  000019                     	ds	2
  1116  00001B                     pad@w:
  1117                           	callstack 0
  1118                           
  1119                           ; 2 bytes @ 0x1A
  1120  00001B                     	ds	1
  1121  00001C                     ___flmul@sign:
  1122                           	callstack 0
  1123                           
  1124                           ; 1 bytes @ 0x1B
  1125  00001C                     	ds	1
  1126  00001D                     ?_dtoa:
  1127                           	callstack 0
  1128  00001D                     ___flmul@aexp:
  1129                           	callstack 0
  1130  00001D                     dtoa@fp:
  1131                           	callstack 0
  1132                           
  1133                           ; 2 bytes @ 0x1C
  1134  00001D                     	ds	1
  1135  00001E                     ___flmul@grs:
  1136                           	callstack 0
  1137                           
  1138                           ; 4 bytes @ 0x1D
  1139  00001E                     	ds	1
  1140  00001F                     dtoa@d:
  1141                           	callstack 0
  1142                           
  1143                           ; 8 bytes @ 0x1E
  1144  00001F                     	ds	3
  1145  000022                     ___flmul@bexp:
  1146                           	callstack 0
  1147                           
  1148                           ; 1 bytes @ 0x21
  1149  000022                     	ds	1
  1150  000023                     ___flmul@prod:
  1151                           	callstack 0
  1152                           
  1153                           ; 4 bytes @ 0x22
  1154  000023                     	ds	4
  1155  000027                     ??_dtoa:
  1156  000027                     ___flmul@temp:
  1157                           	callstack 0
  1158                           
  1159                           ; 2 bytes @ 0x26
  1160  000027                     	ds	2
  1161  000029                     ?___fldiv:
  1162                           	callstack 0
  1163  000029                     ___flge@ff1:
  1164                           	callstack 0
  1165  000029                     ___fldiv@b:
  1166                           	callstack 0
  1167                           
  1168                           ; 4 bytes @ 0x28
  1169  000029                     	ds	4
  1170  00002D                     ___flge@ff2:
  1171                           	callstack 0
  1172  00002D                     ___fldiv@a:
  1173                           	callstack 0
  1174                           
  1175                           ; 4 bytes @ 0x2C
  1176  00002D                     	ds	2
  1177  00002F                     _dtoa$1291:
  1178                           	callstack 0
  1179                           
  1180                           ; 2 bytes @ 0x2E
  1181  00002F                     	ds	2
  1182  000031                     ??___fldiv:
  1183  000031                     ??___flge:
  1184  000031                     dtoa@p:
  1185                           	callstack 0
  1186                           
  1187                           ; 2 bytes @ 0x30
  1188  000031                     	ds	2
  1189  000033                     dtoa@w:
  1190                           	callstack 0
  1191                           
  1192                           ; 2 bytes @ 0x32
  1193  000033                     	ds	2
  1194  000035                     dtoa@s:
  1195                           	callstack 0
  1196  000035                     ___fldiv@rem:
  1197                           	callstack 0
  1198                           
  1199                           ; 4 bytes @ 0x34
  1200  000035                     	ds	2
  1201  000037                     dtoa@n:
  1202                           	callstack 0
  1203                           
  1204                           ; 8 bytes @ 0x36
  1205  000037                     	ds	2
  1206  000039                     ___fldiv@sign:
  1207                           	callstack 0
  1208                           
  1209                           ; 1 bytes @ 0x38
  1210  000039                     	ds	1
  1211  00003A                     ___fldiv@new_exp:
  1212                           	callstack 0
  1213                           
  1214                           ; 2 bytes @ 0x39
  1215  00003A                     	ds	2
  1216  00003C                     ___fldiv@grs:
  1217                           	callstack 0
  1218                           
  1219                           ; 4 bytes @ 0x3B
  1220  00003C                     	ds	3
  1221  00003F                     dtoa@i:
  1222                           	callstack 0
  1223                           
  1224                           ; 2 bytes @ 0x3E
  1225  00003F                     	ds	1
  1226  000040                     ___fldiv@bexp:
  1227                           	callstack 0
  1228                           
  1229                           ; 1 bytes @ 0x3F
  1230  000040                     	ds	1
  1231  000041                     ___fldiv@aexp:
  1232                           	callstack 0
  1233                           
  1234                           ; 1 bytes @ 0x40
  1235  000041                     	ds	1
  1236  000042                     ?___fladd:
  1237                           	callstack 0
  1238  000042                     ?_floorf:
  1239                           	callstack 0
  1240  000042                     ___fladd@b:
  1241                           	callstack 0
  1242  000042                     floorf@x:
  1243                           	callstack 0
  1244                           
  1245                           ; 4 bytes @ 0x41
  1246  000042                     	ds	4
  1247  000046                     ??_floorf:
  1248  000046                     ___fladd@a:
  1249                           	callstack 0
  1250                           
  1251                           ; 4 bytes @ 0x45
  1252  000046                     	ds	4
  1253  00004A                     ??___fladd:
  1254                           
  1255                           ; 1 bytes @ 0x49
  1256  00004A                     	ds	2
  1257  00004C                     floorf@m:
  1258                           	callstack 0
  1259                           
  1260                           ; 4 bytes @ 0x4B
  1261  00004C                     	ds	2
  1262  00004E                     ___fladd@signs:
  1263                           	callstack 0
  1264                           
  1265                           ; 1 bytes @ 0x4D
  1266  00004E                     	ds	1
  1267  00004F                     ___fladd@aexp:
  1268                           	callstack 0
  1269                           
  1270                           ; 1 bytes @ 0x4E
  1271  00004F                     	ds	1
  1272  000050                     ___fladd@bexp:
  1273                           	callstack 0
  1274  000050                     floorf@e:
  1275                           	callstack 0
  1276                           
  1277                           ; 2 bytes @ 0x4F
  1278  000050                     	ds	1
  1279  000051                     ___fladd@grs:
  1280                           	callstack 0
  1281                           
  1282                           ; 1 bytes @ 0x50
  1283  000051                     	ds	1
  1284  000052                     ?___flsub:
  1285                           	callstack 0
  1286  000052                     ?___fltol:
  1287                           	callstack 0
  1288  000052                     ___fltol@f1:
  1289                           	callstack 0
  1290  000052                     ___flsub@b:
  1291                           	callstack 0
  1292  000052                     floorf@u:
  1293                           	callstack 0
  1294                           
  1295                           ; 4 bytes @ 0x51
  1296  000052                     	ds	4
  1297  000056                     ??___fltol:
  1298  000056                     ___flsub@a:
  1299                           	callstack 0
  1300                           
  1301                           ; 4 bytes @ 0x55
  1302  000056                     	ds	4
  1303  00005A                     ___fltol@sign1:
  1304                           	callstack 0
  1305                           
  1306                           ; 1 bytes @ 0x59
  1307  00005A                     	ds	1
  1308  00005B                     ___fltol@exp1:
  1309                           	callstack 0
  1310                           
  1311                           ; 1 bytes @ 0x5A
  1312  00005B                     	ds	1
  1313  00005C                     
  1314                           ; 1 bytes @ 0x5B
  1315 ;;
  1316 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1317 ;;
  1318 ;; *************** function _main *****************
  1319 ;; Defined at:
  1320 ;;		line 215 in file "main.c"
  1321 ;; Parameters:    Size  Location     Type
  1322 ;;		None
  1323 ;; Auto vars:     Size  Location     Type
  1324 ;;		None
  1325 ;; Return value:  Size  Location     Type
  1326 ;;                  1    wreg      void 
  1327 ;; Registers used:
  1328 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1329 ;; Tracked objects:
  1330 ;;		On entry : 0/0
  1331 ;;		On exit  : 0/0
  1332 ;;		Unchanged: 0/0
  1333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1334 ;;      Params:         0       0       0       0       0       0       0       0       0
  1335 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1336 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1337 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1338 ;;Total ram usage:        0 bytes
  1339 ;; Hardware stack levels required when called:   11
  1340 ;; This function calls:
  1341 ;;		_ADC_Init
  1342 ;;		_LCD_Cmd
  1343 ;;		_LCD_Init
  1344 ;;		_MenuP
  1345 ;;		_UART_Init
  1346 ;;		_serial
  1347 ;; This function is called by:
  1348 ;;		Startup code after reset
  1349 ;; This function uses a non-reentrant model
  1350 ;;
  1351                           
  1352                           	psect	text0
  1353  004854                     __ptext0:
  1354                           	callstack 0
  1355  004854                     _main:
  1356                           	callstack 20
  1357  004854                     
  1358                           ;main.c: 216:     ADCON1=11;
  1359  004854  0E0B               	movlw	11
  1360  004856  6EC1               	movwf	193,c	;volatile
  1361                           
  1362                           ;main.c: 217:     TRISC=3;
  1363  004858  0E03               	movlw	3
  1364  00485A  6E94               	movwf	148,c	;volatile
  1365  00485C                     
  1366                           ;main.c: 218:     TRISDbits.RD0=0;
  1367  00485C  9095               	bcf	149,0,c	;volatile
  1368  00485E                     
  1369                           ;main.c: 219:     TRISDbits.RD1=0;
  1370  00485E  9295               	bcf	149,1,c	;volatile
  1371  004860                     
  1372                           ;main.c: 221:     LCD_Init();
  1373  004860  ECF5  F021         	call	_LCD_Init	;wreg free
  1374  004864                     
  1375                           ;main.c: 222:     LCD_Cmd(12);
  1376  004864  0E0C               	movlw	12
  1377  004866  EC07  F026         	call	_LCD_Cmd
  1378  00486A                     
  1379                           ;main.c: 223:     ADC_Init(2,4);
  1380  00486A  0E00               	movlw	0
  1381  00486C  6E03               	movwf	(ADC_Init@kTad+1)^0,c
  1382  00486E  0E02               	movlw	2
  1383  004870  6E02               	movwf	ADC_Init@kTad^0,c
  1384  004872  0E00               	movlw	0
  1385  004874  6E05               	movwf	(ADC_Init@kTosc+1)^0,c
  1386  004876  0E04               	movlw	4
  1387  004878  6E04               	movwf	ADC_Init@kTosc^0,c
  1388  00487A  ECB2  F025         	call	_ADC_Init	;wreg free
  1389  00487E                     
  1390                           ;main.c: 225:     INTCONbits.GIE=1;
  1391  00487E  8EF2               	bsf	242,7,c	;volatile
  1392  004880                     
  1393                           ;main.c: 226:     INTCONbits.PEIE=1;
  1394  004880  8CF2               	bsf	242,6,c	;volatile
  1395  004882                     
  1396                           ;main.c: 228:     PIR1bits.RCIF=0;
  1397  004882  9A9E               	bcf	158,5,c	;volatile
  1398  004884                     
  1399                           ;main.c: 229:     PIE1bits.RCIE=1;
  1400  004884  8A9D               	bsf	157,5,c	;volatile
  1401  004886                     
  1402                           ;main.c: 231:     UART_Init(9600);
  1403  004886  0E80               	movlw	128
  1404  004888  0100               	movlb	0	; () banked
  1405  00488A  6F60               	movwf	UART_Init@BAUDRATE& (0+255),b
  1406  00488C  0E25               	movlw	37
  1407  00488E  6F61               	movwf	(UART_Init@BAUDRATE+1)& (0+255),b
  1408  004890  0E00               	movlw	0
  1409  004892  6F62               	movwf	(UART_Init@BAUDRATE+2)& (0+255),b
  1410  004894  0E00               	movlw	0
  1411  004896  6F63               	movwf	(UART_Init@BAUDRATE+3)& (0+255),b
  1412  004898  ECA0  F022         	call	_UART_Init	;wreg free
  1413  00489C                     
  1414                           ;main.c: 233:     serial();
  1415  00489C  EC89  F01D         	call	_serial	;wreg free
  1416  0048A0                     l6710:
  1417                           
  1418                           ;main.c: 237:         MenuP();
  1419  0048A0  EC44  F00A         	call	_MenuP	;wreg free
  1420  0048A4  EF50  F024         	goto	l6710
  1421  0048A8  EF07  F000         	goto	start
  1422  0048AC                     __end_of_main:
  1423                           	callstack 0
  1424                           
  1425 ;; *************** function _serial *****************
  1426 ;; Defined at:
  1427 ;;		line 162 in file "main.c"
  1428 ;; Parameters:    Size  Location     Type
  1429 ;;		None
  1430 ;; Auto vars:     Size  Location     Type
  1431 ;;		None
  1432 ;; Return value:  Size  Location     Type
  1433 ;;                  1    wreg      void 
  1434 ;; Registers used:
  1435 ;;		wreg, cstack
  1436 ;; Tracked objects:
  1437 ;;		On entry : 0/0
  1438 ;;		On exit  : 0/0
  1439 ;;		Unchanged: 0/0
  1440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1441 ;;      Params:         0       0       0       0       0       0       0       0       0
  1442 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1443 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1444 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1445 ;;Total ram usage:        0 bytes
  1446 ;; Hardware stack levels used:    1
  1447 ;; Hardware stack levels required when called:    3
  1448 ;; This function calls:
  1449 ;;		_UART_Wrrite_Chr
  1450 ;; This function is called by:
  1451 ;;		_main
  1452 ;; This function uses a non-reentrant model
  1453 ;;
  1454                           
  1455                           	psect	text1
  1456  003B12                     __ptext1:
  1457                           	callstack 0
  1458  003B12                     _serial:
  1459                           	callstack 27
  1460  003B12                     
  1461                           ;main.c: 164:         UART_Wrrite_Chr('O');
  1462  003B12  0E4F               	movlw	79
  1463  003B14  ECEA  F025         	call	_UART_Wrrite_Chr
  1464                           
  1465                           ;main.c: 165:         UART_Wrrite_Chr('P');
  1466  003B18  0E50               	movlw	80
  1467  003B1A  ECEA  F025         	call	_UART_Wrrite_Chr
  1468                           
  1469                           ;main.c: 166:         UART_Wrrite_Chr('C');
  1470  003B1E  0E43               	movlw	67
  1471  003B20  ECEA  F025         	call	_UART_Wrrite_Chr
  1472                           
  1473                           ;main.c: 167:         UART_Wrrite_Chr('I');
  1474  003B24  0E49               	movlw	73
  1475  003B26  ECEA  F025         	call	_UART_Wrrite_Chr
  1476                           
  1477                           ;main.c: 168:         UART_Wrrite_Chr('O');
  1478  003B2A  0E4F               	movlw	79
  1479  003B2C  ECEA  F025         	call	_UART_Wrrite_Chr
  1480                           
  1481                           ;main.c: 169:         UART_Wrrite_Chr('N');
  1482  003B30  0E4E               	movlw	78
  1483  003B32  ECEA  F025         	call	_UART_Wrrite_Chr
  1484                           
  1485                           ;main.c: 170:         UART_Wrrite_Chr('E');
  1486  003B36  0E45               	movlw	69
  1487  003B38  ECEA  F025         	call	_UART_Wrrite_Chr
  1488                           
  1489                           ;main.c: 171:         UART_Wrrite_Chr('S');
  1490  003B3C  0E53               	movlw	83
  1491  003B3E  ECEA  F025         	call	_UART_Wrrite_Chr
  1492                           
  1493                           ;main.c: 172:         UART_Wrrite_Chr(':');
  1494  003B42  0E3A               	movlw	58
  1495  003B44  ECEA  F025         	call	_UART_Wrrite_Chr
  1496                           
  1497                           ;main.c: 173:         UART_Wrrite_Chr(10);
  1498  003B48  0E0A               	movlw	10
  1499  003B4A  ECEA  F025         	call	_UART_Wrrite_Chr
  1500                           
  1501                           ;main.c: 174:         UART_Wrrite_Chr(13);
  1502  003B4E  0E0D               	movlw	13
  1503  003B50  ECEA  F025         	call	_UART_Wrrite_Chr
  1504                           
  1505                           ;main.c: 175:         UART_Wrrite_Chr('1');
  1506  003B54  0E31               	movlw	49
  1507  003B56  ECEA  F025         	call	_UART_Wrrite_Chr
  1508                           
  1509                           ;main.c: 176:         UART_Wrrite_Chr('.');
  1510  003B5A  0E2E               	movlw	46
  1511  003B5C  ECEA  F025         	call	_UART_Wrrite_Chr
  1512                           
  1513                           ;main.c: 177:         UART_Wrrite_Chr('3');
  1514  003B60  0E33               	movlw	51
  1515  003B62  ECEA  F025         	call	_UART_Wrrite_Chr
  1516                           
  1517                           ;main.c: 178:         UART_Wrrite_Chr('4');
  1518  003B66  0E34               	movlw	52
  1519  003B68  ECEA  F025         	call	_UART_Wrrite_Chr
  1520                           
  1521                           ;main.c: 179:         UART_Wrrite_Chr(10);
  1522  003B6C  0E0A               	movlw	10
  1523  003B6E  ECEA  F025         	call	_UART_Wrrite_Chr
  1524                           
  1525                           ;main.c: 180:         UART_Wrrite_Chr(13);
  1526  003B72  0E0D               	movlw	13
  1527  003B74  ECEA  F025         	call	_UART_Wrrite_Chr
  1528                           
  1529                           ;main.c: 181:         UART_Wrrite_Chr('2');
  1530  003B78  0E32               	movlw	50
  1531  003B7A  ECEA  F025         	call	_UART_Wrrite_Chr
  1532                           
  1533                           ;main.c: 182:         UART_Wrrite_Chr('.');
  1534  003B7E  0E2E               	movlw	46
  1535  003B80  ECEA  F025         	call	_UART_Wrrite_Chr
  1536                           
  1537                           ;main.c: 183:         UART_Wrrite_Chr('3');
  1538  003B84  0E33               	movlw	51
  1539  003B86  ECEA  F025         	call	_UART_Wrrite_Chr
  1540                           
  1541                           ;main.c: 184:         UART_Wrrite_Chr('5');
  1542  003B8A  0E35               	movlw	53
  1543  003B8C  ECEA  F025         	call	_UART_Wrrite_Chr
  1544                           
  1545                           ;main.c: 185:         UART_Wrrite_Chr(10);
  1546  003B90  0E0A               	movlw	10
  1547  003B92  ECEA  F025         	call	_UART_Wrrite_Chr
  1548                           
  1549                           ;main.c: 186:         UART_Wrrite_Chr(13);
  1550  003B96  0E0D               	movlw	13
  1551  003B98  ECEA  F025         	call	_UART_Wrrite_Chr
  1552                           
  1553                           ;main.c: 187:         UART_Wrrite_Chr('3');
  1554  003B9C  0E33               	movlw	51
  1555  003B9E  ECEA  F025         	call	_UART_Wrrite_Chr
  1556                           
  1557                           ;main.c: 188:         UART_Wrrite_Chr('.');
  1558  003BA2  0E2E               	movlw	46
  1559  003BA4  ECEA  F025         	call	_UART_Wrrite_Chr
  1560                           
  1561                           ;main.c: 189:         UART_Wrrite_Chr('3');
  1562  003BA8  0E33               	movlw	51
  1563  003BAA  ECEA  F025         	call	_UART_Wrrite_Chr
  1564                           
  1565                           ;main.c: 190:         UART_Wrrite_Chr('6');
  1566  003BAE  0E36               	movlw	54
  1567  003BB0  ECEA  F025         	call	_UART_Wrrite_Chr
  1568                           
  1569                           ;main.c: 191:         UART_Wrrite_Chr(10);
  1570  003BB4  0E0A               	movlw	10
  1571  003BB6  ECEA  F025         	call	_UART_Wrrite_Chr
  1572                           
  1573                           ;main.c: 192:         UART_Wrrite_Chr(13);
  1574  003BBA  0E0D               	movlw	13
  1575  003BBC  ECEA  F025         	call	_UART_Wrrite_Chr
  1576                           
  1577                           ;main.c: 193:         UART_Wrrite_Chr('4');
  1578  003BC0  0E34               	movlw	52
  1579  003BC2  ECEA  F025         	call	_UART_Wrrite_Chr
  1580                           
  1581                           ;main.c: 194:         UART_Wrrite_Chr('.');
  1582  003BC6  0E2E               	movlw	46
  1583  003BC8  ECEA  F025         	call	_UART_Wrrite_Chr
  1584                           
  1585                           ;main.c: 195:         UART_Wrrite_Chr('3');
  1586  003BCC  0E33               	movlw	51
  1587  003BCE  ECEA  F025         	call	_UART_Wrrite_Chr
  1588                           
  1589                           ;main.c: 196:         UART_Wrrite_Chr('7');
  1590  003BD2  0E37               	movlw	55
  1591  003BD4  ECEA  F025         	call	_UART_Wrrite_Chr
  1592                           
  1593                           ;main.c: 197:         UART_Wrrite_Chr(10);
  1594  003BD8  0E0A               	movlw	10
  1595  003BDA  ECEA  F025         	call	_UART_Wrrite_Chr
  1596                           
  1597                           ;main.c: 198:         UART_Wrrite_Chr(13);
  1598  003BDE  0E0D               	movlw	13
  1599  003BE0  ECEA  F025         	call	_UART_Wrrite_Chr
  1600                           
  1601                           ;main.c: 199:         UART_Wrrite_Chr('5');
  1602  003BE4  0E35               	movlw	53
  1603  003BE6  ECEA  F025         	call	_UART_Wrrite_Chr
  1604                           
  1605                           ;main.c: 200:         UART_Wrrite_Chr('.');
  1606  003BEA  0E2E               	movlw	46
  1607  003BEC  ECEA  F025         	call	_UART_Wrrite_Chr
  1608                           
  1609                           ;main.c: 201:         UART_Wrrite_Chr('3');
  1610  003BF0  0E33               	movlw	51
  1611  003BF2  ECEA  F025         	call	_UART_Wrrite_Chr
  1612                           
  1613                           ;main.c: 202:         UART_Wrrite_Chr('8');
  1614  003BF6  0E38               	movlw	56
  1615  003BF8  ECEA  F025         	call	_UART_Wrrite_Chr
  1616                           
  1617                           ;main.c: 203:         UART_Wrrite_Chr(10);
  1618  003BFC  0E0A               	movlw	10
  1619  003BFE  ECEA  F025         	call	_UART_Wrrite_Chr
  1620                           
  1621                           ;main.c: 204:         UART_Wrrite_Chr(13);
  1622  003C02  0E0D               	movlw	13
  1623  003C04  ECEA  F025         	call	_UART_Wrrite_Chr
  1624                           
  1625                           ;main.c: 205:         UART_Wrrite_Chr('6');
  1626  003C08  0E36               	movlw	54
  1627  003C0A  ECEA  F025         	call	_UART_Wrrite_Chr
  1628                           
  1629                           ;main.c: 206:         UART_Wrrite_Chr('.');
  1630  003C0E  0E2E               	movlw	46
  1631  003C10  ECEA  F025         	call	_UART_Wrrite_Chr
  1632                           
  1633                           ;main.c: 207:         UART_Wrrite_Chr('3');
  1634  003C14  0E33               	movlw	51
  1635  003C16  ECEA  F025         	call	_UART_Wrrite_Chr
  1636                           
  1637                           ;main.c: 208:         UART_Wrrite_Chr('9');
  1638  003C1A  0E39               	movlw	57
  1639  003C1C  ECEA  F025         	call	_UART_Wrrite_Chr
  1640                           
  1641                           ;main.c: 209:         UART_Wrrite_Chr(10);
  1642  003C20  0E0A               	movlw	10
  1643  003C22  ECEA  F025         	call	_UART_Wrrite_Chr
  1644                           
  1645                           ;main.c: 210:         UART_Wrrite_Chr(13);
  1646  003C26  0E0D               	movlw	13
  1647  003C28  ECEA  F025         	call	_UART_Wrrite_Chr
  1648  003C2C  0012               	return		;funcret
  1649  003C2E                     __end_of_serial:
  1650                           	callstack 0
  1651                           
  1652 ;; *************** function _UART_Wrrite_Chr *****************
  1653 ;; Defined at:
  1654 ;;		line 21 in file "UART_LIB.c"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;  letra           1    wreg     unsigned char 
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;  letra           1    1[COMRAM] unsigned char 
  1659 ;; Return value:  Size  Location     Type
  1660 ;;                  1    wreg      void 
  1661 ;; Registers used:
  1662 ;;		wreg
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1668 ;;      Params:         0       0       0       0       0       0       0       0       0
  1669 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1670 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1671 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1672 ;;Total ram usage:        1 bytes
  1673 ;; Hardware stack levels used:    1
  1674 ;; Hardware stack levels required when called:    2
  1675 ;; This function calls:
  1676 ;;		Nothing
  1677 ;; This function is called by:
  1678 ;;		_serial
  1679 ;; This function uses a non-reentrant model
  1680 ;;
  1681                           
  1682                           	psect	text2
  1683  004BD4                     __ptext2:
  1684                           	callstack 0
  1685  004BD4                     _UART_Wrrite_Chr:
  1686                           	callstack 27
  1687                           
  1688                           ;incstack = 0
  1689                           ;UART_Wrrite_Chr@letra stored from wreg
  1690  004BD4  6E02               	movwf	UART_Wrrite_Chr@letra^0,c
  1691  004BD6                     
  1692                           ;UART_LIB.c: 22:     TXREG = letra;
  1693  004BD6  C002  FFAD         	movff	UART_Wrrite_Chr@letra,4013	;volatile
  1694  004BDA                     l198:
  1695  004BDA  A89E               	btfss	158,4,c	;volatile
  1696  004BDC  EFF2  F025         	goto	u2701
  1697  004BE0  EFF4  F025         	goto	u2700
  1698  004BE4                     u2701:
  1699  004BE4  EFED  F025         	goto	l198
  1700  004BE8                     u2700:
  1701  004BE8  0012               	return		;funcret
  1702  004BEA                     __end_of_UART_Wrrite_Chr:
  1703                           	callstack 0
  1704                           
  1705 ;; *************** function _UART_Init *****************
  1706 ;; Defined at:
  1707 ;;		line 6 in file "UART_LIB.c"
  1708 ;; Parameters:    Size  Location     Type
  1709 ;;  BAUDRATE        4    0[BANK0 ] long 
  1710 ;; Auto vars:     Size  Location     Type
  1711 ;;		None
  1712 ;; Return value:  Size  Location     Type
  1713 ;;                  1    wreg      void 
  1714 ;; Registers used:
  1715 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1716 ;; Tracked objects:
  1717 ;;		On entry : 0/0
  1718 ;;		On exit  : 0/0
  1719 ;;		Unchanged: 0/0
  1720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1721 ;;      Params:         0       4       0       0       0       0       0       0       0
  1722 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1723 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1724 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1725 ;;Total ram usage:        4 bytes
  1726 ;; Hardware stack levels used:    1
  1727 ;; Hardware stack levels required when called:    3
  1728 ;; This function calls:
  1729 ;;		___fladd
  1730 ;;		___fldiv
  1731 ;;		___flmul
  1732 ;;		___fltol
  1733 ;;		___xxtofl
  1734 ;; This function is called by:
  1735 ;;		_main
  1736 ;; This function uses a non-reentrant model
  1737 ;;
  1738                           
  1739                           	psect	text3
  1740  004540                     __ptext3:
  1741                           	callstack 0
  1742  004540                     _UART_Init:
  1743                           	callstack 27
  1744  004540                     
  1745                           ;UART_LIB.c: 7:     TRISCbits.TRISC6=0;
  1746  004540  9C94               	bcf	148,6,c	;volatile
  1747                           
  1748                           ;UART_LIB.c: 10:     if(4000000L<=4000000){
  1749  004542  8E94               	bsf	148,7,c	;volatile
  1750  004544                     
  1751                           ;UART_LIB.c: 11:         SPBRG = (unsigned char)((4000000L/(16.0*BAUDRATE))-1);
  1752  004544  0E00               	movlw	0
  1753  004546  6E46               	movwf	___fladd@a^0,c
  1754  004548  0E00               	movlw	0
  1755  00454A  6E47               	movwf	(___fladd@a+1)^0,c
  1756  00454C  0E80               	movlw	128
  1757  00454E  6E48               	movwf	(___fladd@a+2)^0,c
  1758  004550  0EBF               	movlw	191
  1759  004552  6E49               	movwf	(___fladd@a+3)^0,c
  1760  004554  0E00               	movlw	0
  1761  004556  6E14               	movwf	___flmul@a^0,c
  1762  004558  0E00               	movlw	0
  1763  00455A  6E15               	movwf	(___flmul@a+1)^0,c
  1764  00455C  0E80               	movlw	128
  1765  00455E  6E16               	movwf	(___flmul@a+2)^0,c
  1766  004560  0E41               	movlw	65
  1767  004562  6E17               	movwf	(___flmul@a+3)^0,c
  1768  004564  C060  F002         	movff	UART_Init@BAUDRATE,___xxtofl@val
  1769  004568  C061  F003         	movff	UART_Init@BAUDRATE+1,___xxtofl@val+1
  1770  00456C  C062  F004         	movff	UART_Init@BAUDRATE+2,___xxtofl@val+2
  1771  004570  C063  F005         	movff	UART_Init@BAUDRATE+3,___xxtofl@val+3
  1772  004574  0E01               	movlw	1
  1773  004576  ECDB  F019         	call	___xxtofl
  1774  00457A  C002  F010         	movff	?___xxtofl,___flmul@b
  1775  00457E  C003  F011         	movff	?___xxtofl+1,___flmul@b+1
  1776  004582  C004  F012         	movff	?___xxtofl+2,___flmul@b+2
  1777  004586  C005  F013         	movff	?___xxtofl+3,___flmul@b+3
  1778  00458A  EC7E  F013         	call	___flmul	;wreg free
  1779  00458E  C010  F02D         	movff	?___flmul,___fldiv@a
  1780  004592  C011  F02E         	movff	?___flmul+1,___fldiv@a+1
  1781  004596  C012  F02F         	movff	?___flmul+2,___fldiv@a+2
  1782  00459A  C013  F030         	movff	?___flmul+3,___fldiv@a+3
  1783  00459E  0E00               	movlw	0
  1784  0045A0  6E29               	movwf	___fldiv@b^0,c
  1785  0045A2  0E24               	movlw	36
  1786  0045A4  6E2A               	movwf	(___fldiv@b+1)^0,c
  1787  0045A6  0E74               	movlw	116
  1788  0045A8  6E2B               	movwf	(___fldiv@b+2)^0,c
  1789  0045AA  0E4A               	movlw	74
  1790  0045AC  6E2C               	movwf	(___fldiv@b+3)^0,c
  1791  0045AE  EC93  F015         	call	___fldiv	;wreg free
  1792  0045B2  C029  F042         	movff	?___fldiv,___fladd@b
  1793  0045B6  C02A  F043         	movff	?___fldiv+1,___fladd@b+1
  1794  0045BA  C02B  F044         	movff	?___fldiv+2,___fladd@b+2
  1795  0045BE  C02C  F045         	movff	?___fldiv+3,___fladd@b+3
  1796  0045C2  EC1E  F011         	call	___fladd	;wreg free
  1797  0045C6  C042  F052         	movff	?___fladd,___fltol@f1
  1798  0045CA  C043  F053         	movff	?___fladd+1,___fltol@f1+1
  1799  0045CE  C044  F054         	movff	?___fladd+2,___fltol@f1+2
  1800  0045D2  C045  F055         	movff	?___fladd+3,___fltol@f1+3
  1801  0045D6  EC17  F01E         	call	___fltol	;wreg free
  1802  0045DA  5052               	movf	?___fltol^0,w,c
  1803  0045DC  6EAF               	movwf	175,c	;volatile
  1804  0045DE                     
  1805                           ;UART_LIB.c: 12:         TXSTA = 0x24;
  1806  0045DE  0E24               	movlw	36
  1807  0045E0  6EAC               	movwf	172,c	;volatile
  1808  0045E2                     
  1809                           ;UART_LIB.c: 18:     RCSTA = 0x90;
  1810  0045E2  0E90               	movlw	144
  1811  0045E4  6EAB               	movwf	171,c	;volatile
  1812  0045E6  0012               	return		;funcret
  1813  0045E8                     __end_of_UART_Init:
  1814                           	callstack 0
  1815                           
  1816 ;; *************** function _MenuP *****************
  1817 ;; Defined at:
  1818 ;;		line 20 in file "main.c"
  1819 ;; Parameters:    Size  Location     Type
  1820 ;;		None
  1821 ;; Auto vars:     Size  Location     Type
  1822 ;;		None
  1823 ;; Return value:  Size  Location     Type
  1824 ;;                  1    wreg      void 
  1825 ;; Registers used:
  1826 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1827 ;; Tracked objects:
  1828 ;;		On entry : 0/0
  1829 ;;		On exit  : 0/0
  1830 ;;		Unchanged: 0/0
  1831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1832 ;;      Params:         0       0       0       0       0       0       0       0       0
  1833 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1834 ;;      Temps:          0       0       2       0       0       0       0       0       0
  1835 ;;      Totals:         0       0       2       0       0       0       0       0       0
  1836 ;;Total ram usage:        2 bytes
  1837 ;; Hardware stack levels used:    1
  1838 ;; Hardware stack levels required when called:   10
  1839 ;; This function calls:
  1840 ;;		_ADC_Read
  1841 ;;		_LCD_Chr
  1842 ;;		_LCD_Cmd
  1843 ;;		_LCD_Out
  1844 ;;		___flge
  1845 ;;		___flmul
  1846 ;;		___xxtofl
  1847 ;;		_sprintf
  1848 ;; This function is called by:
  1849 ;;		_main
  1850 ;; This function uses a non-reentrant model
  1851 ;;
  1852                           
  1853                           	psect	text4
  1854  001488                     __ptext4:
  1855                           	callstack 0
  1856  001488                     _MenuP:
  1857                           	callstack 20
  1858  001488                     
  1859                           ;main.c: 21:      LCD_Cmd(1);
  1860  001488  0E01               	movlw	1
  1861  00148A  EC07  F026         	call	_LCD_Cmd
  1862  00148E                     
  1863                           ;main.c: 23:      LCD_Out(1,1,"   USER INTERFACE");
  1864  00148E  0E01               	movlw	1
  1865  001490  6E0A               	movwf	LCD_Out@x^0,c
  1866  001492  0E2B               	movlw	low STR_1
  1867  001494  6E0B               	movwf	LCD_Out@text^0,c
  1868  001496  0E08               	movlw	high STR_1
  1869  001498  6E0C               	movwf	(LCD_Out@text+1)^0,c
  1870  00149A  0E01               	movlw	1
  1871  00149C  EC35  F023         	call	_LCD_Out
  1872  0014A0                     
  1873                           ;main.c: 24:      LCD_Out(2,1,"1.Heater and Fan");
  1874  0014A0  0E01               	movlw	1
  1875  0014A2  6E0A               	movwf	LCD_Out@x^0,c
  1876  0014A4  0E3D               	movlw	low STR_2
  1877  0014A6  6E0B               	movwf	LCD_Out@text^0,c
  1878  0014A8  0E08               	movlw	high STR_2
  1879  0014AA  6E0C               	movwf	(LCD_Out@text+1)^0,c
  1880  0014AC  0E02               	movlw	2
  1881  0014AE  EC35  F023         	call	_LCD_Out
  1882  0014B2                     
  1883                           ;main.c: 25:      LCD_Out(3,1,"2.Humidity");
  1884  0014B2  0E01               	movlw	1
  1885  0014B4  6E0A               	movwf	LCD_Out@x^0,c
  1886  0014B6  0E88               	movlw	low STR_3
  1887  0014B8  6E0B               	movwf	LCD_Out@text^0,c
  1888  0014BA  0E08               	movlw	high STR_3
  1889  0014BC  6E0C               	movwf	(LCD_Out@text+1)^0,c
  1890  0014BE  0E03               	movlw	3
  1891  0014C0  EC35  F023         	call	_LCD_Out
  1892  0014C4                     
  1893                           ;main.c: 26:      LCD_Out(4,1,"3.O2 Level");
  1894  0014C4  0E01               	movlw	1
  1895  0014C6  6E0A               	movwf	LCD_Out@x^0,c
  1896  0014C8  0E7D               	movlw	low STR_4
  1897  0014CA  6E0B               	movwf	LCD_Out@text^0,c
  1898  0014CC  0E08               	movlw	high STR_4
  1899  0014CE  6E0C               	movwf	(LCD_Out@text+1)^0,c
  1900  0014D0  0E04               	movlw	4
  1901  0014D2  EC35  F023         	call	_LCD_Out
  1902  0014D6                     
  1903                           ;main.c: 27:      LCD_Out(4,13,"opcion: ");
  1904  0014D6  0E0D               	movlw	13
  1905  0014D8  6E0A               	movwf	LCD_Out@x^0,c
  1906  0014DA  0E9D               	movlw	low STR_5
  1907  0014DC  6E0B               	movwf	LCD_Out@text^0,c
  1908  0014DE  0E08               	movlw	high STR_5
  1909  0014E0  6E0C               	movwf	(LCD_Out@text+1)^0,c
  1910  0014E2  0E04               	movlw	4
  1911  0014E4  EC35  F023         	call	_LCD_Out
  1912  0014E8                     
  1913                           ;main.c: 28:      sprintf(txt,"%i",opcion);
  1914  0014E8  0E6C               	movlw	low _txt
  1915  0014EA  0100               	movlb	0	; () banked
  1916  0014EC  6FCC               	movwf	sprintf@s& (0+255),b
  1917  0014EE  0E01               	movlw	high _txt
  1918  0014F0  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  1919  0014F2  0ED4               	movlw	low STR_6
  1920  0014F4  6FCE               	movwf	sprintf@fmt& (0+255),b
  1921  0014F6  0E08               	movlw	high STR_6
  1922  0014F8  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  1923  0014FA  C0FE  F0D0         	movff	_opcion,?_sprintf+4
  1924  0014FE  C0FF  F0D1         	movff	_opcion+1,?_sprintf+5
  1925  001502  EC56  F024         	call	_sprintf	;wreg free
  1926  001506                     
  1927                           ;main.c: 29:      LCD_Out(4,20,txt);
  1928  001506  0E14               	movlw	20
  1929  001508  6E0A               	movwf	LCD_Out@x^0,c
  1930  00150A  0E6C               	movlw	low _txt
  1931  00150C  6E0B               	movwf	LCD_Out@text^0,c
  1932  00150E  0E01               	movlw	high _txt
  1933  001510  6E0C               	movwf	(LCD_Out@text+1)^0,c
  1934  001512  0E04               	movlw	4
  1935  001514  EC35  F023         	call	_LCD_Out
  1936  001518                     l6530:
  1937                           
  1938                           ;main.c: 33:         if (PORTCbits.RC1==1){
  1939  001518  A282               	btfss	130,1,c	;volatile
  1940  00151A  EF91  F00A         	goto	u8711
  1941  00151E  EF93  F00A         	goto	u8710
  1942  001522                     u8711:
  1943  001522  EFAF  F00A         	goto	l6538
  1944  001526                     u8710:
  1945  001526                     
  1946                           ;main.c: 34:            opcion++;
  1947  001526  0100               	movlb	0	; () banked
  1948  001528  4BFE               	infsnz	_opcion& (0+255),f,b
  1949  00152A  2BFF               	incf	(_opcion+1)& (0+255),f,b
  1950  00152C                     
  1951                           ; BSR set to: 0
  1952                           ;main.c: 35:            if (opcion>3){
  1953  00152C  BFFF               	btfsc	(_opcion+1)& (0+255),7,b
  1954  00152E  EFA2  F00A         	goto	u8721
  1955  001532  51FF               	movf	(_opcion+1)& (0+255),w,b
  1956  001534  E109               	bnz	u8720
  1957  001536  0E04               	movlw	4
  1958  001538  5DFE               	subwf	_opcion& (0+255),w,b
  1959  00153A  A0D8               	btfss	status,0,c
  1960  00153C  EFA2  F00A         	goto	u8721
  1961  001540  EFA4  F00A         	goto	u8720
  1962  001544                     u8721:
  1963  001544  EFA8  F00A         	goto	l81
  1964  001548                     u8720:
  1965  001548                     
  1966                           ; BSR set to: 0
  1967                           ;main.c: 36:               opcion=1;
  1968  001548  0E00               	movlw	0
  1969  00154A  6FFF               	movwf	(_opcion+1)& (0+255),b
  1970  00154C  0E01               	movlw	1
  1971  00154E  6FFE               	movwf	_opcion& (0+255),b
  1972  001550                     l81:
  1973  001550  B282               	btfsc	130,1,c	;volatile
  1974  001552  EFAD  F00A         	goto	u8731
  1975  001556  EFAF  F00A         	goto	u8730
  1976  00155A                     u8731:
  1977  00155A  EFA8  F00A         	goto	l81
  1978  00155E                     u8730:
  1979  00155E                     l6538:
  1980                           
  1981                           ;main.c: 40:         sprintf(txt,"%i",opcion);
  1982  00155E  0E6C               	movlw	low _txt
  1983  001560  0100               	movlb	0	; () banked
  1984  001562  6FCC               	movwf	sprintf@s& (0+255),b
  1985  001564  0E01               	movlw	high _txt
  1986  001566  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  1987  001568  0ED4               	movlw	low STR_6
  1988  00156A  6FCE               	movwf	sprintf@fmt& (0+255),b
  1989  00156C  0E08               	movlw	high STR_6
  1990  00156E  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  1991  001570  C0FE  F0D0         	movff	_opcion,?_sprintf+4
  1992  001574  C0FF  F0D1         	movff	_opcion+1,?_sprintf+5
  1993  001578  EC56  F024         	call	_sprintf	;wreg free
  1994  00157C                     
  1995                           ;main.c: 41:         LCD_Out(4,20,txt);
  1996  00157C  0E14               	movlw	20
  1997  00157E  6E0A               	movwf	LCD_Out@x^0,c
  1998  001580  0E6C               	movlw	low _txt
  1999  001582  6E0B               	movwf	LCD_Out@text^0,c
  2000  001584  0E01               	movlw	high _txt
  2001  001586  6E0C               	movwf	(LCD_Out@text+1)^0,c
  2002  001588  0E04               	movlw	4
  2003  00158A  EC35  F023         	call	_LCD_Out
  2004  00158E                     
  2005                           ;main.c: 42:      }while(PORTCbits.RC0==0);
  2006  00158E  A082               	btfss	130,0,c	;volatile
  2007  001590  EFCC  F00A         	goto	u8741
  2008  001594  EFCE  F00A         	goto	u8740
  2009  001598                     u8741:
  2010  001598  EF8C  F00A         	goto	l6530
  2011  00159C                     u8740:
  2012  00159C  EFE8  F00D         	goto	l6666
  2013  0015A0                     l6544:
  2014                           
  2015                           ; BSR set to: 1
  2016  0015A0  0E01               	movlw	1
  2017  0015A2  EC07  F026         	call	_LCD_Cmd
  2018  0015A6                     
  2019                           ;main.c: 46:                  LCD_Out(1,1,"REGULATE TEMPERATURE");
  2020  0015A6  0E01               	movlw	1
  2021  0015A8  6E0A               	movwf	LCD_Out@x^0,c
  2022  0015AA  0E16               	movlw	low STR_8
  2023  0015AC  6E0B               	movwf	LCD_Out@text^0,c
  2024  0015AE  0E08               	movlw	high STR_8
  2025  0015B0  6E0C               	movwf	(LCD_Out@text+1)^0,c
  2026  0015B2  0E01               	movlw	1
  2027  0015B4  EC35  F023         	call	_LCD_Out
  2028  0015B8                     
  2029                           ;main.c: 47:                  LCD_Out(4,1,"1.VOLVER");
  2030  0015B8  0E01               	movlw	1
  2031  0015BA  6E0A               	movwf	LCD_Out@x^0,c
  2032  0015BC  0EA6               	movlw	low STR_9
  2033  0015BE  6E0B               	movwf	LCD_Out@text^0,c
  2034  0015C0  0E08               	movlw	high STR_9
  2035  0015C2  6E0C               	movwf	(LCD_Out@text+1)^0,c
  2036  0015C4  0E04               	movlw	4
  2037  0015C6  EC35  F023         	call	_LCD_Out
  2038  0015CA                     
  2039                           ;main.c: 48:                  LCD_Out(4,13,"opcion: ");
  2040  0015CA  0E0D               	movlw	13
  2041  0015CC  6E0A               	movwf	LCD_Out@x^0,c
  2042  0015CE  0E9D               	movlw	low STR_5
  2043  0015D0  6E0B               	movwf	LCD_Out@text^0,c
  2044  0015D2  0E08               	movlw	high STR_5
  2045  0015D4  6E0C               	movwf	(LCD_Out@text+1)^0,c
  2046  0015D6  0E04               	movlw	4
  2047  0015D8  EC35  F023         	call	_LCD_Out
  2048  0015DC                     
  2049                           ;main.c: 49:                  sprintf(txt,"%i",opcion);
  2050  0015DC  0E6C               	movlw	low _txt
  2051  0015DE  0100               	movlb	0	; () banked
  2052  0015E0  6FCC               	movwf	sprintf@s& (0+255),b
  2053  0015E2  0E01               	movlw	high _txt
  2054  0015E4  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  2055  0015E6  0ED4               	movlw	low STR_6
  2056  0015E8  6FCE               	movwf	sprintf@fmt& (0+255),b
  2057  0015EA  0E08               	movlw	high STR_6
  2058  0015EC  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  2059  0015EE  C0FE  F0D0         	movff	_opcion,?_sprintf+4
  2060  0015F2  C0FF  F0D1         	movff	_opcion+1,?_sprintf+5
  2061  0015F6  EC56  F024         	call	_sprintf	;wreg free
  2062  0015FA                     
  2063                           ;main.c: 50:                  LCD_Out(4,20,txt);
  2064  0015FA  0E14               	movlw	20
  2065  0015FC  6E0A               	movwf	LCD_Out@x^0,c
  2066  0015FE  0E6C               	movlw	low _txt
  2067  001600  6E0B               	movwf	LCD_Out@text^0,c
  2068  001602  0E01               	movlw	high _txt
  2069  001604  6E0C               	movwf	(LCD_Out@text+1)^0,c
  2070  001606  0E04               	movlw	4
  2071  001608  EC35  F023         	call	_LCD_Out
  2072  00160C                     l6556:
  2073                           
  2074                           ;main.c: 53:                      conver1 = ADC_Read(0);
  2075  00160C  0E00               	movlw	0
  2076  00160E  ECCB  F024         	call	_ADC_Read
  2077  001612  C002  F0FA         	movff	?_ADC_Read,_conver1
  2078  001616  C003  F0FB         	movff	?_ADC_Read+1,_conver1+1
  2079  00161A                     
  2080                           ;main.c: 54:                      temp = conver1*0.4887;
  2081  00161A  C0FA  F002         	movff	_conver1,___xxtofl@val
  2082  00161E  C0FB  F003         	movff	_conver1+1,___xxtofl@val+1
  2083  001622  0E00               	movlw	0
  2084  001624  BE03               	btfsc	(___xxtofl@val+1)^0,7,c
  2085  001626  0EFF               	movlw	-1
  2086  001628  6E04               	movwf	(___xxtofl@val+2)^0,c
  2087  00162A  6E05               	movwf	(___xxtofl@val+3)^0,c
  2088  00162C  0E01               	movlw	1
  2089  00162E  ECDB  F019         	call	___xxtofl
  2090  001632  C002  F010         	movff	?___xxtofl,___flmul@b
  2091  001636  C003  F011         	movff	?___xxtofl+1,___flmul@b+1
  2092  00163A  C004  F012         	movff	?___xxtofl+2,___flmul@b+2
  2093  00163E  C005  F013         	movff	?___xxtofl+3,___flmul@b+3
  2094  001642  0EE3               	movlw	227
  2095  001644  6E14               	movwf	___flmul@a^0,c
  2096  001646  0E36               	movlw	54
  2097  001648  6E15               	movwf	(___flmul@a+1)^0,c
  2098  00164A  0EFA               	movlw	250
  2099  00164C  6E16               	movwf	(___flmul@a+2)^0,c
  2100  00164E  0E3E               	movlw	62
  2101  001650  6E17               	movwf	(___flmul@a+3)^0,c
  2102  001652  EC7E  F013         	call	___flmul	;wreg free
  2103  001656  C010  F0E6         	movff	?___flmul,_temp
  2104  00165A  C011  F0E7         	movff	?___flmul+1,_temp+1
  2105  00165E  C012  F0E8         	movff	?___flmul+2,_temp+2
  2106  001662  C013  F0E9         	movff	?___flmul+3,_temp+3
  2107  001666                     
  2108                           ;main.c: 55:                      sprintf (aux,"TEMP(INC):%3.1f",temp) ;
  2109  001666  0E58               	movlw	low _aux
  2110  001668  0100               	movlb	0	; () banked
  2111  00166A  6FCC               	movwf	sprintf@s& (0+255),b
  2112  00166C  0E01               	movlw	high _aux
  2113  00166E  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  2114  001670  0E4E               	movlw	low STR_12
  2115  001672  6FCE               	movwf	sprintf@fmt& (0+255),b
  2116  001674  0E08               	movlw	high STR_12
  2117  001676  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  2118  001678  C0E6  F0D0         	movff	_temp,?_sprintf+4
  2119  00167C  C0E7  F0D1         	movff	_temp+1,?_sprintf+5
  2120  001680  C0E8  F0D2         	movff	_temp+2,?_sprintf+6
  2121  001684  C0E9  F0D3         	movff	_temp+3,?_sprintf+7
  2122  001688  EC56  F024         	call	_sprintf	;wreg free
  2123  00168C                     
  2124                           ;main.c: 56:                      LCD_Out(2,1,aux);
  2125  00168C  0E01               	movlw	1
  2126  00168E  6E0A               	movwf	LCD_Out@x^0,c
  2127  001690  0E58               	movlw	low _aux
  2128  001692  6E0B               	movwf	LCD_Out@text^0,c
  2129  001694  0E01               	movlw	high _aux
  2130  001696  6E0C               	movwf	(LCD_Out@text+1)^0,c
  2131  001698  0E02               	movlw	2
  2132  00169A  EC35  F023         	call	_LCD_Out
  2133  00169E                     
  2134                           ;main.c: 58:                      conver2 = ADC_Read(1);
  2135  00169E  0E01               	movlw	1
  2136  0016A0  ECCB  F024         	call	_ADC_Read
  2137  0016A4  C002  F0F8         	movff	?_ADC_Read,_conver2
  2138  0016A8  C003  F0F9         	movff	?_ADC_Read+1,_conver2+1
  2139  0016AC                     
  2140                           ;main.c: 59:                      tempi = conver2*0.0391;
  2141  0016AC  C0F8  F002         	movff	_conver2,___xxtofl@val
  2142  0016B0  C0F9  F003         	movff	_conver2+1,___xxtofl@val+1
  2143  0016B4  0E00               	movlw	0
  2144  0016B6  BE03               	btfsc	(___xxtofl@val+1)^0,7,c
  2145  0016B8  0EFF               	movlw	-1
  2146  0016BA  6E04               	movwf	(___xxtofl@val+2)^0,c
  2147  0016BC  6E05               	movwf	(___xxtofl@val+3)^0,c
  2148  0016BE  0E01               	movlw	1
  2149  0016C0  ECDB  F019         	call	___xxtofl
  2150  0016C4  C002  F010         	movff	?___xxtofl,___flmul@b
  2151  0016C8  C003  F011         	movff	?___xxtofl+1,___flmul@b+1
  2152  0016CC  C004  F012         	movff	?___xxtofl+2,___flmul@b+2
  2153  0016D0  C005  F013         	movff	?___xxtofl+3,___flmul@b+3
  2154  0016D4  0E52               	movlw	82
  2155  0016D6  6E14               	movwf	___flmul@a^0,c
  2156  0016D8  0E27               	movlw	39
  2157  0016DA  6E15               	movwf	(___flmul@a+1)^0,c
  2158  0016DC  0E20               	movlw	32
  2159  0016DE  6E16               	movwf	(___flmul@a+2)^0,c
  2160  0016E0  0E3D               	movlw	61
  2161  0016E2  6E17               	movwf	(___flmul@a+3)^0,c
  2162  0016E4  EC7E  F013         	call	___flmul	;wreg free
  2163  0016E8  C010  F0E2         	movff	?___flmul,_tempi
  2164  0016EC  C011  F0E3         	movff	?___flmul+1,_tempi+1
  2165  0016F0  C012  F0E4         	movff	?___flmul+2,_tempi+2
  2166  0016F4  C013  F0E5         	movff	?___flmul+3,_tempi+3
  2167  0016F8                     
  2168                           ;main.c: 60:                      sprintf (aux,"TEMP(NEO):%3.1f",tempi) ;
  2169  0016F8  0E58               	movlw	low _aux
  2170  0016FA  0100               	movlb	0	; () banked
  2171  0016FC  6FCC               	movwf	sprintf@s& (0+255),b
  2172  0016FE  0E01               	movlw	high _aux
  2173  001700  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  2174  001702  0E5E               	movlw	low STR_13
  2175  001704  6FCE               	movwf	sprintf@fmt& (0+255),b
  2176  001706  0E08               	movlw	high STR_13
  2177  001708  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  2178  00170A  C0E2  F0D0         	movff	_tempi,?_sprintf+4
  2179  00170E  C0E3  F0D1         	movff	_tempi+1,?_sprintf+5
  2180  001712  C0E4  F0D2         	movff	_tempi+2,?_sprintf+6
  2181  001716  C0E5  F0D3         	movff	_tempi+3,?_sprintf+7
  2182  00171A  EC56  F024         	call	_sprintf	;wreg free
  2183  00171E                     
  2184                           ;main.c: 61:                      LCD_Out(3,1,aux);
  2185  00171E  0E01               	movlw	1
  2186  001720  6E0A               	movwf	LCD_Out@x^0,c
  2187  001722  0E58               	movlw	low _aux
  2188  001724  6E0B               	movwf	LCD_Out@text^0,c
  2189  001726  0E01               	movlw	high _aux
  2190  001728  6E0C               	movwf	(LCD_Out@text+1)^0,c
  2191  00172A  0E03               	movlw	3
  2192  00172C  EC35  F023         	call	_LCD_Out
  2193  001730                     
  2194                           ;main.c: 63:                      if(temp<29){
  2195  001730  C0E6  F029         	movff	_temp,___flge@ff1
  2196  001734  C0E7  F02A         	movff	_temp+1,___flge@ff1+1
  2197  001738  C0E8  F02B         	movff	_temp+2,___flge@ff1+2
  2198  00173C  C0E9  F02C         	movff	_temp+3,___flge@ff1+3
  2199  001740  0E00               	movlw	0
  2200  001742  6E2D               	movwf	___flge@ff2^0,c
  2201  001744  0E00               	movlw	0
  2202  001746  6E2E               	movwf	(___flge@ff2+1)^0,c
  2203  001748  0EE8               	movlw	232
  2204  00174A  6E2F               	movwf	(___flge@ff2+2)^0,c
  2205  00174C  0E41               	movlw	65
  2206  00174E  6E30               	movwf	(___flge@ff2+3)^0,c
  2207  001750  EC9A  F01E         	call	___flge	;wreg free
  2208  001754  B0D8               	btfsc	status,0,c
  2209  001756  EFAF  F00B         	goto	u8751
  2210  00175A  EFB1  F00B         	goto	u8750
  2211  00175E                     u8751:
  2212  00175E  EFCB  F00B         	goto	l6580
  2213  001762                     u8750:
  2214  001762                     
  2215                           ;main.c: 64:                       PORTD=1;
  2216  001762  0E01               	movlw	1
  2217  001764  6E83               	movwf	131,c	;volatile
  2218  001766                     
  2219                           ;main.c: 65:                       _delay((unsigned long)((10)*(4000000L/4000.0)));
  2220  001766  0E0D               	movlw	13
  2221  001768  0101               	movlb	1	; () banked
  2222  00176A  6F76               	movwf	??_MenuP& (0+255),b
  2223  00176C  0EFB               	movlw	251
  2224  00176E                     u8867:
  2225  00176E  2EE8               	decfsz	wreg,f,c
  2226  001770  D7FE               	bra	u8867
  2227  001772  2F76               	decfsz	??_MenuP& (0+255),f,b
  2228  001774  D7FC               	bra	u8867
  2229  001776  D000               	nop2	
  2230  001778                     
  2231                           ;main.c: 66:                       PORTD=0;
  2232  001778  0E00               	movlw	0
  2233  00177A  6E83               	movwf	131,c	;volatile
  2234                           
  2235                           ;main.c: 67:                       _delay((unsigned long)((350)*(4000000L/4000.0)));
  2236  00177C  0E02               	movlw	2
  2237  00177E  0101               	movlb	1	; () banked
  2238  001780  6F77               	movwf	(??_MenuP+1)& (0+255),b
  2239  001782  0EC7               	movlw	199
  2240  001784  6F76               	movwf	??_MenuP& (0+255),b
  2241  001786  0E88               	movlw	136
  2242  001788                     u8877:
  2243  001788  2EE8               	decfsz	wreg,f,c
  2244  00178A  D7FE               	bra	u8877
  2245  00178C  2F76               	decfsz	??_MenuP& (0+255),f,b
  2246  00178E  D7FC               	bra	u8877
  2247  001790  2F77               	decfsz	(??_MenuP+1)& (0+255),f,b
  2248  001792  D7FA               	bra	u8877
  2249  001794  F000               	nop	
  2250  001796                     l6580:
  2251                           
  2252                           ;main.c: 69:                       if(temp>29&&temp<31){
  2253  001796  0E00               	movlw	0
  2254  001798  6E29               	movwf	___flge@ff1^0,c
  2255  00179A  0E00               	movlw	0
  2256  00179C  6E2A               	movwf	(___flge@ff1+1)^0,c
  2257  00179E  0EE8               	movlw	232
  2258  0017A0  6E2B               	movwf	(___flge@ff1+2)^0,c
  2259  0017A2  0E41               	movlw	65
  2260  0017A4  6E2C               	movwf	(___flge@ff1+3)^0,c
  2261  0017A6  C0E6  F02D         	movff	_temp,___flge@ff2
  2262  0017AA  C0E7  F02E         	movff	_temp+1,___flge@ff2+1
  2263  0017AE  C0E8  F02F         	movff	_temp+2,___flge@ff2+2
  2264  0017B2  C0E9  F030         	movff	_temp+3,___flge@ff2+3
  2265  0017B6  EC9A  F01E         	call	___flge	;wreg free
  2266  0017BA  B0D8               	btfsc	status,0,c
  2267  0017BC  EFE2  F00B         	goto	u8761
  2268  0017C0  EFE4  F00B         	goto	u8760
  2269  0017C4                     u8761:
  2270  0017C4  EF16  F00C         	goto	l6590
  2271  0017C8                     u8760:
  2272  0017C8  C0E6  F029         	movff	_temp,___flge@ff1
  2273  0017CC  C0E7  F02A         	movff	_temp+1,___flge@ff1+1
  2274  0017D0  C0E8  F02B         	movff	_temp+2,___flge@ff1+2
  2275  0017D4  C0E9  F02C         	movff	_temp+3,___flge@ff1+3
  2276  0017D8  0E00               	movlw	0
  2277  0017DA  6E2D               	movwf	___flge@ff2^0,c
  2278  0017DC  0E00               	movlw	0
  2279  0017DE  6E2E               	movwf	(___flge@ff2+1)^0,c
  2280  0017E0  0EF8               	movlw	248
  2281  0017E2  6E2F               	movwf	(___flge@ff2+2)^0,c
  2282  0017E4  0E41               	movlw	65
  2283  0017E6  6E30               	movwf	(___flge@ff2+3)^0,c
  2284  0017E8  EC9A  F01E         	call	___flge	;wreg free
  2285  0017EC  B0D8               	btfsc	status,0,c
  2286  0017EE  EFFB  F00B         	goto	u8771
  2287  0017F2  EFFD  F00B         	goto	u8770
  2288  0017F6                     u8771:
  2289  0017F6  EF16  F00C         	goto	l6590
  2290  0017FA                     u8770:
  2291  0017FA                     
  2292                           ;main.c: 70:                       PORTD=1;
  2293  0017FA  0E01               	movlw	1
  2294  0017FC  6E83               	movwf	131,c	;volatile
  2295  0017FE                     
  2296                           ;main.c: 71:                       _delay((unsigned long)((5)*(4000000L/4000.0)));
  2297  0017FE  0E07               	movlw	7
  2298  001800  0101               	movlb	1	; () banked
  2299  001802  6F76               	movwf	??_MenuP& (0+255),b
  2300  001804  0E7D               	movlw	125
  2301  001806                     u8887:
  2302  001806  2EE8               	decfsz	wreg,f,c
  2303  001808  D7FE               	bra	u8887
  2304  00180A  2F76               	decfsz	??_MenuP& (0+255),f,b
  2305  00180C  D7FC               	bra	u8887
  2306  00180E                     
  2307                           ;main.c: 72:                       PORTD=0;
  2308  00180E  0E00               	movlw	0
  2309  001810  6E83               	movwf	131,c	;volatile
  2310                           
  2311                           ;main.c: 73:                       _delay((unsigned long)((350)*(4000000L/4000.0)));
  2312  001812  0E02               	movlw	2
  2313  001814  0101               	movlb	1	; () banked
  2314  001816  6F77               	movwf	(??_MenuP+1)& (0+255),b
  2315  001818  0EC7               	movlw	199
  2316  00181A  6F76               	movwf	??_MenuP& (0+255),b
  2317  00181C  0E88               	movlw	136
  2318  00181E                     u8897:
  2319  00181E  2EE8               	decfsz	wreg,f,c
  2320  001820  D7FE               	bra	u8897
  2321  001822  2F76               	decfsz	??_MenuP& (0+255),f,b
  2322  001824  D7FC               	bra	u8897
  2323  001826  2F77               	decfsz	(??_MenuP+1)& (0+255),f,b
  2324  001828  D7FA               	bra	u8897
  2325  00182A  F000               	nop	
  2326  00182C                     l6590:
  2327                           
  2328                           ;main.c: 75:                       if(temp>31&&temp<33){
  2329  00182C  0E00               	movlw	0
  2330  00182E  6E29               	movwf	___flge@ff1^0,c
  2331  001830  0E00               	movlw	0
  2332  001832  6E2A               	movwf	(___flge@ff1+1)^0,c
  2333  001834  0EF8               	movlw	248
  2334  001836  6E2B               	movwf	(___flge@ff1+2)^0,c
  2335  001838  0E41               	movlw	65
  2336  00183A  6E2C               	movwf	(___flge@ff1+3)^0,c
  2337  00183C  C0E6  F02D         	movff	_temp,___flge@ff2
  2338  001840  C0E7  F02E         	movff	_temp+1,___flge@ff2+1
  2339  001844  C0E8  F02F         	movff	_temp+2,___flge@ff2+2
  2340  001848  C0E9  F030         	movff	_temp+3,___flge@ff2+3
  2341  00184C  EC9A  F01E         	call	___flge	;wreg free
  2342  001850  B0D8               	btfsc	status,0,c
  2343  001852  EF2D  F00C         	goto	u8781
  2344  001856  EF2F  F00C         	goto	u8780
  2345  00185A                     u8781:
  2346  00185A  EF62  F00C         	goto	l6600
  2347  00185E                     u8780:
  2348  00185E  C0E6  F029         	movff	_temp,___flge@ff1
  2349  001862  C0E7  F02A         	movff	_temp+1,___flge@ff1+1
  2350  001866  C0E8  F02B         	movff	_temp+2,___flge@ff1+2
  2351  00186A  C0E9  F02C         	movff	_temp+3,___flge@ff1+3
  2352  00186E  0E00               	movlw	0
  2353  001870  6E2D               	movwf	___flge@ff2^0,c
  2354  001872  0E00               	movlw	0
  2355  001874  6E2E               	movwf	(___flge@ff2+1)^0,c
  2356  001876  0E04               	movlw	4
  2357  001878  6E2F               	movwf	(___flge@ff2+2)^0,c
  2358  00187A  0E42               	movlw	66
  2359  00187C  6E30               	movwf	(___flge@ff2+3)^0,c
  2360  00187E  EC9A  F01E         	call	___flge	;wreg free
  2361  001882  B0D8               	btfsc	status,0,c
  2362  001884  EF46  F00C         	goto	u8791
  2363  001888  EF48  F00C         	goto	u8790
  2364  00188C                     u8791:
  2365  00188C  EF62  F00C         	goto	l6600
  2366  001890                     u8790:
  2367  001890                     
  2368                           ;main.c: 76:                       PORTD=1;
  2369  001890  0E01               	movlw	1
  2370  001892  6E83               	movwf	131,c	;volatile
  2371  001894                     
  2372                           ;main.c: 77:                       _delay((unsigned long)((3)*(4000000L/4000.0)));
  2373  001894  0E04               	movlw	4
  2374  001896  0101               	movlb	1	; () banked
  2375  001898  6F76               	movwf	??_MenuP& (0+255),b
  2376  00189A  0EE4               	movlw	228
  2377  00189C                     u8907:
  2378  00189C  2EE8               	decfsz	wreg,f,c
  2379  00189E  D7FE               	bra	u8907
  2380  0018A0  2F76               	decfsz	??_MenuP& (0+255),f,b
  2381  0018A2  D7FC               	bra	u8907
  2382  0018A4  F000               	nop	
  2383  0018A6                     
  2384                           ;main.c: 78:                       PORTD=0;
  2385  0018A6  0E00               	movlw	0
  2386  0018A8  6E83               	movwf	131,c	;volatile
  2387                           
  2388                           ;main.c: 79:                       _delay((unsigned long)((350)*(4000000L/4000.0)));
  2389  0018AA  0E02               	movlw	2
  2390  0018AC  0101               	movlb	1	; () banked
  2391  0018AE  6F77               	movwf	(??_MenuP+1)& (0+255),b
  2392  0018B0  0EC7               	movlw	199
  2393  0018B2  6F76               	movwf	??_MenuP& (0+255),b
  2394  0018B4  0E88               	movlw	136
  2395  0018B6                     u8917:
  2396  0018B6  2EE8               	decfsz	wreg,f,c
  2397  0018B8  D7FE               	bra	u8917
  2398  0018BA  2F76               	decfsz	??_MenuP& (0+255),f,b
  2399  0018BC  D7FC               	bra	u8917
  2400  0018BE  2F77               	decfsz	(??_MenuP+1)& (0+255),f,b
  2401  0018C0  D7FA               	bra	u8917
  2402  0018C2  F000               	nop	
  2403  0018C4                     l6600:
  2404                           
  2405                           ;main.c: 81:                       if(temp>33&&temp<37){
  2406  0018C4  0E00               	movlw	0
  2407  0018C6  6E29               	movwf	___flge@ff1^0,c
  2408  0018C8  0E00               	movlw	0
  2409  0018CA  6E2A               	movwf	(___flge@ff1+1)^0,c
  2410  0018CC  0E04               	movlw	4
  2411  0018CE  6E2B               	movwf	(___flge@ff1+2)^0,c
  2412  0018D0  0E42               	movlw	66
  2413  0018D2  6E2C               	movwf	(___flge@ff1+3)^0,c
  2414  0018D4  C0E6  F02D         	movff	_temp,___flge@ff2
  2415  0018D8  C0E7  F02E         	movff	_temp+1,___flge@ff2+1
  2416  0018DC  C0E8  F02F         	movff	_temp+2,___flge@ff2+2
  2417  0018E0  C0E9  F030         	movff	_temp+3,___flge@ff2+3
  2418  0018E4  EC9A  F01E         	call	___flge	;wreg free
  2419  0018E8  B0D8               	btfsc	status,0,c
  2420  0018EA  EF79  F00C         	goto	u8801
  2421  0018EE  EF7B  F00C         	goto	u8800
  2422  0018F2                     u8801:
  2423  0018F2  EFA9  F00C         	goto	l6610
  2424  0018F6                     u8800:
  2425  0018F6  C0E6  F029         	movff	_temp,___flge@ff1
  2426  0018FA  C0E7  F02A         	movff	_temp+1,___flge@ff1+1
  2427  0018FE  C0E8  F02B         	movff	_temp+2,___flge@ff1+2
  2428  001902  C0E9  F02C         	movff	_temp+3,___flge@ff1+3
  2429  001906  0E00               	movlw	0
  2430  001908  6E2D               	movwf	___flge@ff2^0,c
  2431  00190A  0E00               	movlw	0
  2432  00190C  6E2E               	movwf	(___flge@ff2+1)^0,c
  2433  00190E  0E14               	movlw	20
  2434  001910  6E2F               	movwf	(___flge@ff2+2)^0,c
  2435  001912  0E42               	movlw	66
  2436  001914  6E30               	movwf	(___flge@ff2+3)^0,c
  2437  001916  EC9A  F01E         	call	___flge	;wreg free
  2438  00191A  B0D8               	btfsc	status,0,c
  2439  00191C  EF92  F00C         	goto	u8811
  2440  001920  EF94  F00C         	goto	u8810
  2441  001924                     u8811:
  2442  001924  EFA9  F00C         	goto	l6610
  2443  001928                     u8810:
  2444  001928                     
  2445                           ;main.c: 82:                       PORTD=1;
  2446  001928  0E01               	movlw	1
  2447  00192A  6E83               	movwf	131,c	;volatile
  2448  00192C                     
  2449                           ;main.c: 83:                       _delay((unsigned long)((1)*(4000000L/4000.0)));
  2450  00192C  0EC8               	movlw	200
  2451  00192E                     u8927:
  2452  00192E  D000               	nop2	
  2453  001930  2EE8               	decfsz	wreg,f,c
  2454  001932  D7FD               	bra	u8927
  2455  001934                     
  2456                           ;main.c: 84:                       PORTD=0;
  2457  001934  0E00               	movlw	0
  2458  001936  6E83               	movwf	131,c	;volatile
  2459                           
  2460                           ;main.c: 85:                       _delay((unsigned long)((350)*(4000000L/4000.0)));
  2461  001938  0E02               	movlw	2
  2462  00193A  0101               	movlb	1	; () banked
  2463  00193C  6F77               	movwf	(??_MenuP+1)& (0+255),b
  2464  00193E  0EC7               	movlw	199
  2465  001940  6F76               	movwf	??_MenuP& (0+255),b
  2466  001942  0E88               	movlw	136
  2467  001944                     u8937:
  2468  001944  2EE8               	decfsz	wreg,f,c
  2469  001946  D7FE               	bra	u8937
  2470  001948  2F76               	decfsz	??_MenuP& (0+255),f,b
  2471  00194A  D7FC               	bra	u8937
  2472  00194C  2F77               	decfsz	(??_MenuP+1)& (0+255),f,b
  2473  00194E  D7FA               	bra	u8937
  2474  001950  F000               	nop	
  2475  001952                     l6610:
  2476                           
  2477                           ;main.c: 88:                      if(temp>39){
  2478  001952  0E00               	movlw	0
  2479  001954  6E29               	movwf	___flge@ff1^0,c
  2480  001956  0E00               	movlw	0
  2481  001958  6E2A               	movwf	(___flge@ff1+1)^0,c
  2482  00195A  0E1C               	movlw	28
  2483  00195C  6E2B               	movwf	(___flge@ff1+2)^0,c
  2484  00195E  0E42               	movlw	66
  2485  001960  6E2C               	movwf	(___flge@ff1+3)^0,c
  2486  001962  C0E6  F02D         	movff	_temp,___flge@ff2
  2487  001966  C0E7  F02E         	movff	_temp+1,___flge@ff2+1
  2488  00196A  C0E8  F02F         	movff	_temp+2,___flge@ff2+2
  2489  00196E  C0E9  F030         	movff	_temp+3,___flge@ff2+3
  2490  001972  EC9A  F01E         	call	___flge	;wreg free
  2491  001976  B0D8               	btfsc	status,0,c
  2492  001978  EFC0  F00C         	goto	u8821
  2493  00197C  EFC2  F00C         	goto	u8820
  2494  001980                     u8821:
  2495  001980  EFC6  F00C         	goto	l6614
  2496  001984                     u8820:
  2497  001984                     
  2498                           ;main.c: 89:                          PORTD=2;
  2499  001984  0E02               	movlw	2
  2500  001986  6E83               	movwf	131,c	;volatile
  2501                           
  2502                           ;main.c: 90:                      }else{PORTD=0;
  2503  001988  EFC8  F00C         	goto	l6616
  2504  00198C                     l6614:
  2505  00198C  0E00               	movlw	0
  2506  00198E  6E83               	movwf	131,c	;volatile
  2507  001990                     l6616:
  2508                           
  2509                           ;main.c: 94:                  }while(PORTCbits.RC0==0);
  2510  001990  A082               	btfss	130,0,c	;volatile
  2511  001992  EFCD  F00C         	goto	u8831
  2512  001996  EFCF  F00C         	goto	u8830
  2513  00199A                     u8831:
  2514  00199A  EF06  F00B         	goto	l6556
  2515  00199E                     u8830:
  2516  00199E  EF03  F00E         	goto	l102
  2517  0019A2                     l6618:
  2518                           
  2519                           ; BSR set to: 1
  2520  0019A2  0E01               	movlw	1
  2521  0019A4  EC07  F026         	call	_LCD_Cmd
  2522  0019A8                     
  2523                           ;main.c: 98:                  LCD_Out(1,1,"   USER INTERFACE");
  2524  0019A8  0E01               	movlw	1
  2525  0019AA  6E0A               	movwf	LCD_Out@x^0,c
  2526  0019AC  0E2B               	movlw	low STR_1
  2527  0019AE  6E0B               	movwf	LCD_Out@text^0,c
  2528  0019B0  0E08               	movlw	high STR_1
  2529  0019B2  6E0C               	movwf	(LCD_Out@text+1)^0,c
  2530  0019B4  0E01               	movlw	1
  2531  0019B6  EC35  F023         	call	_LCD_Out
  2532  0019BA                     
  2533                           ;main.c: 99:                  LCD_Out(4,1,"2.VOLVER");
  2534  0019BA  0E01               	movlw	1
  2535  0019BC  6E0A               	movwf	LCD_Out@x^0,c
  2536  0019BE  0EAF               	movlw	low STR_15
  2537  0019C0  6E0B               	movwf	LCD_Out@text^0,c
  2538  0019C2  0E08               	movlw	high STR_15
  2539  0019C4  6E0C               	movwf	(LCD_Out@text+1)^0,c
  2540  0019C6  0E04               	movlw	4
  2541  0019C8  EC35  F023         	call	_LCD_Out
  2542  0019CC                     
  2543                           ;main.c: 100:                  LCD_Out(4,13,"opcion: ");
  2544  0019CC  0E0D               	movlw	13
  2545  0019CE  6E0A               	movwf	LCD_Out@x^0,c
  2546  0019D0  0E9D               	movlw	low STR_5
  2547  0019D2  6E0B               	movwf	LCD_Out@text^0,c
  2548  0019D4  0E08               	movlw	high STR_5
  2549  0019D6  6E0C               	movwf	(LCD_Out@text+1)^0,c
  2550  0019D8  0E04               	movlw	4
  2551  0019DA  EC35  F023         	call	_LCD_Out
  2552  0019DE                     
  2553                           ;main.c: 101:                  sprintf(txt,"%i",opcion);
  2554  0019DE  0E6C               	movlw	low _txt
  2555  0019E0  0100               	movlb	0	; () banked
  2556  0019E2  6FCC               	movwf	sprintf@s& (0+255),b
  2557  0019E4  0E01               	movlw	high _txt
  2558  0019E6  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  2559  0019E8  0ED4               	movlw	low STR_6
  2560  0019EA  6FCE               	movwf	sprintf@fmt& (0+255),b
  2561  0019EC  0E08               	movlw	high STR_6
  2562  0019EE  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  2563  0019F0  C0FE  F0D0         	movff	_opcion,?_sprintf+4
  2564  0019F4  C0FF  F0D1         	movff	_opcion+1,?_sprintf+5
  2565  0019F8  EC56  F024         	call	_sprintf	;wreg free
  2566  0019FC                     
  2567                           ;main.c: 102:                  LCD_Out(4,20,txt);
  2568  0019FC  0E14               	movlw	20
  2569  0019FE  6E0A               	movwf	LCD_Out@x^0,c
  2570  001A00  0E6C               	movlw	low _txt
  2571  001A02  6E0B               	movwf	LCD_Out@text^0,c
  2572  001A04  0E01               	movlw	high _txt
  2573  001A06  6E0C               	movwf	(LCD_Out@text+1)^0,c
  2574  001A08  0E04               	movlw	4
  2575  001A0A  EC35  F023         	call	_LCD_Out
  2576  001A0E                     l6630:
  2577                           
  2578                           ;main.c: 104:                      conver = ADC_Read(2);
  2579  001A0E  0E02               	movlw	2
  2580  001A10  ECCB  F024         	call	_ADC_Read
  2581  001A14  C002  F0FC         	movff	?_ADC_Read,_conver
  2582  001A18  C003  F0FD         	movff	?_ADC_Read+1,_conver+1
  2583  001A1C                     
  2584                           ;main.c: 105:                      hum = conver*0.097;
  2585  001A1C  C0FC  F002         	movff	_conver,___xxtofl@val
  2586  001A20  C0FD  F003         	movff	_conver+1,___xxtofl@val+1
  2587  001A24  0E00               	movlw	0
  2588  001A26  BE03               	btfsc	(___xxtofl@val+1)^0,7,c
  2589  001A28  0EFF               	movlw	-1
  2590  001A2A  6E04               	movwf	(___xxtofl@val+2)^0,c
  2591  001A2C  6E05               	movwf	(___xxtofl@val+3)^0,c
  2592  001A2E  0E01               	movlw	1
  2593  001A30  ECDB  F019         	call	___xxtofl
  2594  001A34  C002  F010         	movff	?___xxtofl,___flmul@b
  2595  001A38  C003  F011         	movff	?___xxtofl+1,___flmul@b+1
  2596  001A3C  C004  F012         	movff	?___xxtofl+2,___flmul@b+2
  2597  001A40  C005  F013         	movff	?___xxtofl+3,___flmul@b+3
  2598  001A44  0EF0               	movlw	240
  2599  001A46  6E14               	movwf	___flmul@a^0,c
  2600  001A48  0EA7               	movlw	167
  2601  001A4A  6E15               	movwf	(___flmul@a+1)^0,c
  2602  001A4C  0EC6               	movlw	198
  2603  001A4E  6E16               	movwf	(___flmul@a+2)^0,c
  2604  001A50  0E3D               	movlw	61
  2605  001A52  6E17               	movwf	(___flmul@a+3)^0,c
  2606  001A54  EC7E  F013         	call	___flmul	;wreg free
  2607  001A58  C010  F0EA         	movff	?___flmul,_hum
  2608  001A5C  C011  F0EB         	movff	?___flmul+1,_hum+1
  2609  001A60  C012  F0EC         	movff	?___flmul+2,_hum+2
  2610  001A64  C013  F0ED         	movff	?___flmul+3,_hum+3
  2611  001A68                     
  2612                           ;main.c: 106:                      sprintf (aux,"hum:%3.0f",hum) ;
  2613  001A68  0E58               	movlw	low _aux
  2614  001A6A  0100               	movlb	0	; () banked
  2615  001A6C  6FCC               	movwf	sprintf@s& (0+255),b
  2616  001A6E  0E01               	movlw	high _aux
  2617  001A70  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  2618  001A72  0E93               	movlw	low STR_18
  2619  001A74  6FCE               	movwf	sprintf@fmt& (0+255),b
  2620  001A76  0E08               	movlw	high STR_18
  2621  001A78  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  2622  001A7A  C0EA  F0D0         	movff	_hum,?_sprintf+4
  2623  001A7E  C0EB  F0D1         	movff	_hum+1,?_sprintf+5
  2624  001A82  C0EC  F0D2         	movff	_hum+2,?_sprintf+6
  2625  001A86  C0ED  F0D3         	movff	_hum+3,?_sprintf+7
  2626  001A8A  EC56  F024         	call	_sprintf	;wreg free
  2627  001A8E                     
  2628                           ;main.c: 107:                      LCD_Out(2,1,aux);
  2629  001A8E  0E01               	movlw	1
  2630  001A90  6E0A               	movwf	LCD_Out@x^0,c
  2631  001A92  0E58               	movlw	low _aux
  2632  001A94  6E0B               	movwf	LCD_Out@text^0,c
  2633  001A96  0E01               	movlw	high _aux
  2634  001A98  6E0C               	movwf	(LCD_Out@text+1)^0,c
  2635  001A9A  0E02               	movlw	2
  2636  001A9C  EC35  F023         	call	_LCD_Out
  2637  001AA0                     
  2638                           ;main.c: 108:                      LCD_Chr(2,10,'%');
  2639  001AA0  0E0A               	movlw	10
  2640  001AA2  6E0A               	movwf	LCD_Chr@x^0,c
  2641  001AA4  0E25               	movlw	37
  2642  001AA6  6E0B               	movwf	LCD_Chr@letra^0,c
  2643  001AA8  0E02               	movlw	2
  2644  001AAA  ECD2  F025         	call	_LCD_Chr
  2645  001AAE                     
  2646                           ;main.c: 110:                  }while(PORTCbits.RC0==0);
  2647  001AAE  A082               	btfss	130,0,c	;volatile
  2648  001AB0  EF5C  F00D         	goto	u8841
  2649  001AB4  EF5E  F00D         	goto	u8840
  2650  001AB8                     u8841:
  2651  001AB8  EF07  F00D         	goto	l6630
  2652  001ABC                     u8840:
  2653  001ABC  EF03  F00E         	goto	l102
  2654  001AC0                     l6642:
  2655                           
  2656                           ; BSR set to: 1
  2657  001AC0  0E01               	movlw	1
  2658  001AC2  EC07  F026         	call	_LCD_Cmd
  2659  001AC6                     
  2660                           ;main.c: 114:                  LCD_Out(1,1,"   USER INTERFACE");
  2661  001AC6  0E01               	movlw	1
  2662  001AC8  6E0A               	movwf	LCD_Out@x^0,c
  2663  001ACA  0E2B               	movlw	low STR_1
  2664  001ACC  6E0B               	movwf	LCD_Out@text^0,c
  2665  001ACE  0E08               	movlw	high STR_1
  2666  001AD0  6E0C               	movwf	(LCD_Out@text+1)^0,c
  2667  001AD2  0E01               	movlw	1
  2668  001AD4  EC35  F023         	call	_LCD_Out
  2669  001AD8                     
  2670                           ;main.c: 115:                  LCD_Out(4,1,"3.VOLVER");
  2671  001AD8  0E01               	movlw	1
  2672  001ADA  6E0A               	movwf	LCD_Out@x^0,c
  2673  001ADC  0EB8               	movlw	low STR_20
  2674  001ADE  6E0B               	movwf	LCD_Out@text^0,c
  2675  001AE0  0E08               	movlw	high STR_20
  2676  001AE2  6E0C               	movwf	(LCD_Out@text+1)^0,c
  2677  001AE4  0E04               	movlw	4
  2678  001AE6  EC35  F023         	call	_LCD_Out
  2679  001AEA                     
  2680                           ;main.c: 116:                  LCD_Out(4,13,"opcion: ");
  2681  001AEA  0E0D               	movlw	13
  2682  001AEC  6E0A               	movwf	LCD_Out@x^0,c
  2683  001AEE  0E9D               	movlw	low STR_5
  2684  001AF0  6E0B               	movwf	LCD_Out@text^0,c
  2685  001AF2  0E08               	movlw	high STR_5
  2686  001AF4  6E0C               	movwf	(LCD_Out@text+1)^0,c
  2687  001AF6  0E04               	movlw	4
  2688  001AF8  EC35  F023         	call	_LCD_Out
  2689  001AFC                     
  2690                           ;main.c: 117:                  sprintf(txt,"%i",opcion);
  2691  001AFC  0E6C               	movlw	low _txt
  2692  001AFE  0100               	movlb	0	; () banked
  2693  001B00  6FCC               	movwf	sprintf@s& (0+255),b
  2694  001B02  0E01               	movlw	high _txt
  2695  001B04  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  2696  001B06  0ED4               	movlw	low STR_6
  2697  001B08  6FCE               	movwf	sprintf@fmt& (0+255),b
  2698  001B0A  0E08               	movlw	high STR_6
  2699  001B0C  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  2700  001B0E  C0FE  F0D0         	movff	_opcion,?_sprintf+4
  2701  001B12  C0FF  F0D1         	movff	_opcion+1,?_sprintf+5
  2702  001B16  EC56  F024         	call	_sprintf	;wreg free
  2703  001B1A                     
  2704                           ;main.c: 118:                  LCD_Out(4,20,txt);
  2705  001B1A  0E14               	movlw	20
  2706  001B1C  6E0A               	movwf	LCD_Out@x^0,c
  2707  001B1E  0E6C               	movlw	low _txt
  2708  001B20  6E0B               	movwf	LCD_Out@text^0,c
  2709  001B22  0E01               	movlw	high _txt
  2710  001B24  6E0C               	movwf	(LCD_Out@text+1)^0,c
  2711  001B26  0E04               	movlw	4
  2712  001B28  EC35  F023         	call	_LCD_Out
  2713  001B2C                     l6654:
  2714                           
  2715                           ;main.c: 120:                      conver3 = ADC_Read(3);
  2716  001B2C  0E03               	movlw	3
  2717  001B2E  ECCB  F024         	call	_ADC_Read
  2718  001B32  C002  F0F6         	movff	?_ADC_Read,_conver3
  2719  001B36  C003  F0F7         	movff	?_ADC_Read+1,_conver3+1
  2720  001B3A                     
  2721                           ;main.c: 121:                      peso = conver3*0.00488;
  2722  001B3A  C0F6  F002         	movff	_conver3,___xxtofl@val
  2723  001B3E  C0F7  F003         	movff	_conver3+1,___xxtofl@val+1
  2724  001B42  0E00               	movlw	0
  2725  001B44  BE03               	btfsc	(___xxtofl@val+1)^0,7,c
  2726  001B46  0EFF               	movlw	-1
  2727  001B48  6E04               	movwf	(___xxtofl@val+2)^0,c
  2728  001B4A  6E05               	movwf	(___xxtofl@val+3)^0,c
  2729  001B4C  0E01               	movlw	1
  2730  001B4E  ECDB  F019         	call	___xxtofl
  2731  001B52  C002  F010         	movff	?___xxtofl,___flmul@b
  2732  001B56  C003  F011         	movff	?___xxtofl+1,___flmul@b+1
  2733  001B5A  C004  F012         	movff	?___xxtofl+2,___flmul@b+2
  2734  001B5E  C005  F013         	movff	?___xxtofl+3,___flmul@b+3
  2735  001B62  0E68               	movlw	104
  2736  001B64  6E14               	movwf	___flmul@a^0,c
  2737  001B66  0EE8               	movlw	232
  2738  001B68  6E15               	movwf	(___flmul@a+1)^0,c
  2739  001B6A  0E9F               	movlw	159
  2740  001B6C  6E16               	movwf	(___flmul@a+2)^0,c
  2741  001B6E  0E3B               	movlw	59
  2742  001B70  6E17               	movwf	(___flmul@a+3)^0,c
  2743  001B72  EC7E  F013         	call	___flmul	;wreg free
  2744  001B76  C010  F0DE         	movff	?___flmul,_peso
  2745  001B7A  C011  F0DF         	movff	?___flmul+1,_peso+1
  2746  001B7E  C012  F0E0         	movff	?___flmul+2,_peso+2
  2747  001B82  C013  F0E1         	movff	?___flmul+3,_peso+3
  2748  001B86                     
  2749                           ;main.c: 122:                      sprintf (aux,"peso(Kg):%1.2f",peso);
  2750  001B86  0E58               	movlw	low _aux
  2751  001B88  0100               	movlb	0	; () banked
  2752  001B8A  6FCC               	movwf	sprintf@s& (0+255),b
  2753  001B8C  0E01               	movlw	high _aux
  2754  001B8E  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  2755  001B90  0E6E               	movlw	low STR_23
  2756  001B92  6FCE               	movwf	sprintf@fmt& (0+255),b
  2757  001B94  0E08               	movlw	high STR_23
  2758  001B96  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  2759  001B98  C0DE  F0D0         	movff	_peso,?_sprintf+4
  2760  001B9C  C0DF  F0D1         	movff	_peso+1,?_sprintf+5
  2761  001BA0  C0E0  F0D2         	movff	_peso+2,?_sprintf+6
  2762  001BA4  C0E1  F0D3         	movff	_peso+3,?_sprintf+7
  2763  001BA8  EC56  F024         	call	_sprintf	;wreg free
  2764  001BAC                     
  2765                           ;main.c: 123:                      LCD_Out(2,1,aux);
  2766  001BAC  0E01               	movlw	1
  2767  001BAE  6E0A               	movwf	LCD_Out@x^0,c
  2768  001BB0  0E58               	movlw	low _aux
  2769  001BB2  6E0B               	movwf	LCD_Out@text^0,c
  2770  001BB4  0E01               	movlw	high _aux
  2771  001BB6  6E0C               	movwf	(LCD_Out@text+1)^0,c
  2772  001BB8  0E02               	movlw	2
  2773  001BBA  EC35  F023         	call	_LCD_Out
  2774  001BBE                     
  2775                           ;main.c: 125:                  }while(PORTCbits.RC0==0);
  2776  001BBE  A082               	btfss	130,0,c	;volatile
  2777  001BC0  EFE4  F00D         	goto	u8851
  2778  001BC4  EFE6  F00D         	goto	u8850
  2779  001BC8                     u8851:
  2780  001BC8  EF96  F00D         	goto	l6654
  2781  001BCC                     u8850:
  2782  001BCC  EF03  F00E         	goto	l102
  2783  001BD0                     l6666:
  2784  001BD0  C0FE  F176         	movff	_opcion,??_MenuP
  2785  001BD4  C0FF  F177         	movff	_opcion+1,??_MenuP+1
  2786                           
  2787                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2788                           ; Switch size 1, requested type "simple"
  2789                           ; Number of cases is 1, Range of values is 0 to 0
  2790                           ; switch strategies available:
  2791                           ; Name         Instructions Cycles
  2792                           ; simple_byte            4     3 (average)
  2793                           ;	Chosen strategy is simple_byte
  2794  001BD8  0101               	movlb	1	; () banked
  2795  001BDA  5177               	movf	(??_MenuP+1)& (0+255),w,b
  2796  001BDC  0A00               	xorlw	0	; case 0
  2797  001BDE  B4D8               	btfsc	status,2,c
  2798  001BE0  EFF4  F00D         	goto	l6782
  2799  001BE4  EF03  F00E         	goto	l102
  2800  001BE8                     l6782:
  2801                           
  2802                           ; BSR set to: 1
  2803                           ; Switch size 1, requested type "simple"
  2804                           ; Number of cases is 3, Range of values is 1 to 3
  2805                           ; switch strategies available:
  2806                           ; Name         Instructions Cycles
  2807                           ; simple_byte           10     6 (average)
  2808                           ;	Chosen strategy is simple_byte
  2809  001BE8  5176               	movf	??_MenuP& (0+255),w,b
  2810  001BEA  0A01               	xorlw	1	; case 1
  2811  001BEC  B4D8               	btfsc	status,2,c
  2812  001BEE  EFD0  F00A         	goto	l6544
  2813  001BF2  0A03               	xorlw	3	; case 2
  2814  001BF4  B4D8               	btfsc	status,2,c
  2815  001BF6  EFD1  F00C         	goto	l6618
  2816  001BFA  0A01               	xorlw	1	; case 3
  2817  001BFC  B4D8               	btfsc	status,2,c
  2818  001BFE  EF60  F00D         	goto	l6642
  2819  001C02  EF03  F00E         	goto	l102
  2820  001C06                     l102:
  2821  001C06  0012               	return		;funcret
  2822  001C08                     __end_of_MenuP:
  2823                           	callstack 0
  2824                           
  2825 ;; *************** function _sprintf *****************
  2826 ;; Defined at:
  2827 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_sprintf.c"
  2828 ;; Parameters:    Size  Location     Type
  2829 ;;  s               2  108[BANK0 ] PTR unsigned char 
  2830 ;;		 -> aux(20), txt(10), 
  2831 ;;  fmt             2  110[BANK0 ] PTR const unsigned char 
  2832 ;;		 -> STR_23(15), STR_22(3), STR_18(10), STR_17(3), 
  2833 ;;		 -> STR_13(16), STR_12(16), STR_11(3), STR_7(3), 
  2834 ;;		 -> STR_6(3), 
  2835 ;; Auto vars:     Size  Location     Type
  2836 ;;  f               6  120[BANK0 ] struct _IO_FILE
  2837 ;;  ap              2  118[BANK0 ] PTR void [1]
  2838 ;;		 -> ?_sprintf(2), 
  2839 ;;  ret             2    0        int 
  2840 ;; Return value:  Size  Location     Type
  2841 ;;                  2  108[BANK0 ] int 
  2842 ;; Registers used:
  2843 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2844 ;; Tracked objects:
  2845 ;;		On entry : 0/0
  2846 ;;		On exit  : 0/0
  2847 ;;		Unchanged: 0/0
  2848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2849 ;;      Params:         0       8       0       0       0       0       0       0       0
  2850 ;;      Locals:         0      10       0       0       0       0       0       0       0
  2851 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2852 ;;      Totals:         0      18       0       0       0       0       0       0       0
  2853 ;;Total ram usage:       18 bytes
  2854 ;; Hardware stack levels used:    1
  2855 ;; Hardware stack levels required when called:    9
  2856 ;; This function calls:
  2857 ;;		_vfprintf
  2858 ;; This function is called by:
  2859 ;;		_MenuP
  2860 ;; This function uses a non-reentrant model
  2861 ;;
  2862                           
  2863                           	psect	text5
  2864  0048AC                     __ptext5:
  2865                           	callstack 0
  2866  0048AC                     _sprintf:
  2867                           	callstack 20
  2868  0048AC  0ED0               	movlw	low (?_sprintf+4)
  2869  0048AE  0100               	movlb	0	; () banked
  2870  0048B0  6FD6               	movwf	sprintf@ap& (0+255),b
  2871  0048B2  0E00               	movlw	high (?_sprintf+4)
  2872  0048B4  6FD7               	movwf	(sprintf@ap+1)& (0+255),b
  2873  0048B6  C0CC  F0D8         	movff	sprintf@s,sprintf@f
  2874  0048BA  C0CD  F0D9         	movff	sprintf@s+1,sprintf@f+1
  2875  0048BE                     
  2876                           ; BSR set to: 0
  2877  0048BE  0E00               	movlw	0
  2878  0048C0  6FDB               	movwf	(sprintf@f+3)& (0+255),b
  2879  0048C2  0E00               	movlw	0
  2880  0048C4  6FDA               	movwf	(sprintf@f+2)& (0+255),b
  2881  0048C6                     
  2882                           ; BSR set to: 0
  2883  0048C6  0E00               	movlw	0
  2884  0048C8  6FDD               	movwf	(sprintf@f+5)& (0+255),b
  2885  0048CA  0E00               	movlw	0
  2886  0048CC  6FDC               	movwf	(sprintf@f+4)& (0+255),b
  2887  0048CE                     
  2888                           ; BSR set to: 0
  2889  0048CE  0ED8               	movlw	low sprintf@f
  2890  0048D0  6FC4               	movwf	vfprintf@fp& (0+255),b
  2891  0048D2  0E00               	movlw	high sprintf@f
  2892  0048D4  6FC5               	movwf	(vfprintf@fp+1)& (0+255),b
  2893  0048D6  C0CE  F0C6         	movff	sprintf@fmt,vfprintf@fmt
  2894  0048DA  C0CF  F0C7         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2895  0048DE  0ED6               	movlw	low sprintf@ap
  2896  0048E0  6FC8               	movwf	vfprintf@ap& (0+255),b
  2897  0048E2  0E00               	movlw	high sprintf@ap
  2898  0048E4  6FC9               	movwf	(vfprintf@ap+1)& (0+255),b
  2899  0048E6  EC6B  F023         	call	_vfprintf	;wreg free
  2900  0048EA  0100               	movlb	0	; () banked
  2901  0048EC  51DA               	movf	(sprintf@f+2)& (0+255),w,b
  2902  0048EE  25CC               	addwf	sprintf@s& (0+255),w,b
  2903  0048F0  6ED9               	movwf	fsr2l,c
  2904  0048F2  51DB               	movf	(sprintf@f+3)& (0+255),w,b
  2905  0048F4  21CD               	addwfc	(sprintf@s+1)& (0+255),w,b
  2906  0048F6  6EDA               	movwf	fsr2h,c
  2907  0048F8  0E00               	movlw	0
  2908  0048FA  6EDF               	movwf	indf2,c
  2909  0048FC                     
  2910                           ; BSR set to: 0
  2911  0048FC  0012               	return		;funcret
  2912  0048FE                     __end_of_sprintf:
  2913                           	callstack 0
  2914                           
  2915 ;; *************** function _vfprintf *****************
  2916 ;; Defined at:
  2917 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  2918 ;; Parameters:    Size  Location     Type
  2919 ;;  fp              2  100[BANK0 ] PTR struct _IO_FILE
  2920 ;;		 -> sprintf@f(6), 
  2921 ;;  fmt             2  102[BANK0 ] PTR const unsigned char 
  2922 ;;		 -> STR_23(15), STR_22(3), STR_18(10), STR_17(3), 
  2923 ;;		 -> STR_13(16), STR_12(16), STR_11(3), STR_7(3), 
  2924 ;;		 -> STR_6(3), 
  2925 ;;  ap              2  104[BANK0 ] PTR PTR void 
  2926 ;;		 -> sprintf@ap(2), 
  2927 ;; Auto vars:     Size  Location     Type
  2928 ;;  cfmt            2  106[BANK0 ] PTR unsigned char 
  2929 ;;		 -> STR_23(15), STR_22(3), STR_18(10), STR_17(3), 
  2930 ;;		 -> STR_13(16), STR_12(16), STR_11(3), STR_7(3), 
  2931 ;;		 -> STR_6(3), 
  2932 ;; Return value:  Size  Location     Type
  2933 ;;                  2  100[BANK0 ] int 
  2934 ;; Registers used:
  2935 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2936 ;; Tracked objects:
  2937 ;;		On entry : 0/0
  2938 ;;		On exit  : 0/0
  2939 ;;		Unchanged: 0/0
  2940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2941 ;;      Params:         0       6       0       0       0       0       0       0       0
  2942 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2943 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2944 ;;      Totals:         0       8       0       0       0       0       0       0       0
  2945 ;;Total ram usage:        8 bytes
  2946 ;; Hardware stack levels used:    1
  2947 ;; Hardware stack levels required when called:    8
  2948 ;; This function calls:
  2949 ;;		_vfpfcnvrt
  2950 ;; This function is called by:
  2951 ;;		_sprintf
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955                           	psect	text6
  2956  0046D6                     __ptext6:
  2957                           	callstack 0
  2958  0046D6                     _vfprintf:
  2959                           	callstack 20
  2960  0046D6                     
  2961                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  2962  0046D6  C0C6  F0CA         	movff	vfprintf@fmt,vfprintf@cfmt
  2963  0046DA  C0C7  F0CB         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2964  0046DE                     
  2965                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  2966  0046DE  0E00               	movlw	0
  2967  0046E0  0100               	movlb	0	; () banked
  2968  0046E2  6FEF               	movwf	(_nout+1)& (0+255),b
  2969  0046E4  0E00               	movlw	0
  2970  0046E6  6FEE               	movwf	_nout& (0+255),b
  2971                           
  2972                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  2973  0046E8  EF89  F023         	goto	l6500
  2974  0046EC                     l6498:
  2975                           
  2976                           ; BSR set to: 0
  2977                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2978  0046EC  C0C4  F0A4         	movff	vfprintf@fp,vfpfcnvrt@fp
  2979  0046F0  C0C5  F0A5         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2980  0046F4  0ECA               	movlw	low vfprintf@cfmt
  2981  0046F6  6FA6               	movwf	vfpfcnvrt@fmt& (0+255),b
  2982  0046F8  0E00               	movlw	high vfprintf@cfmt
  2983  0046FA  6FA7               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2984  0046FC  C0C8  F0A8         	movff	vfprintf@ap,vfpfcnvrt@ap
  2985  004700  C0C9  F0A9         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2986  004704  EC04  F00E         	call	_vfpfcnvrt	;wreg free
  2987  004708  0100               	movlb	0	; () banked
  2988  00470A  51A4               	movf	?_vfpfcnvrt& (0+255),w,b
  2989  00470C  27EE               	addwf	_nout& (0+255),f,b
  2990  00470E  51A5               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2991  004710  23EF               	addwfc	(_nout+1)& (0+255),f,b
  2992  004712                     l6500:
  2993                           
  2994                           ; BSR set to: 0
  2995                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  2996  004712  C0CA  FFF6         	movff	vfprintf@cfmt,tblptrl
  2997  004716  C0CB  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2998  00471A                     	if	0	;tblptru may be non-zero
  2999  00471A                     	endif
  3000  00471A                     	if	0	;tblptru may be non-zero
  3001  00471A                     	endif
  3002  00471A  0008               	tblrd		*
  3003  00471C  50F5               	movf	tablat,w,c
  3004  00471E  0900               	iorlw	0
  3005  004720  A4D8               	btfss	status,2,c
  3006  004722  EF95  F023         	goto	u8701
  3007  004726  EF97  F023         	goto	u8700
  3008  00472A                     u8701:
  3009  00472A  EF76  F023         	goto	l6498
  3010  00472E                     u8700:
  3011  00472E                     
  3012                           ; BSR set to: 0
  3013                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  3014  00472E  C0EE  F0C4         	movff	_nout,?_vfprintf
  3015  004732  C0EF  F0C5         	movff	_nout+1,?_vfprintf+1
  3016  004736                     
  3017                           ; BSR set to: 0
  3018  004736  0012               	return		;funcret
  3019  004738                     __end_of_vfprintf:
  3020                           	callstack 0
  3021                           
  3022 ;; *************** function _vfpfcnvrt *****************
  3023 ;; Defined at:
  3024 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  3025 ;; Parameters:    Size  Location     Type
  3026 ;;  fp              2   68[BANK0 ] PTR struct _IO_FILE
  3027 ;;		 -> sprintf@f(6), 
  3028 ;;  fmt             2   70[BANK0 ] PTR PTR unsigned char 
  3029 ;;		 -> vfprintf@cfmt(2), 
  3030 ;;  ap              2   72[BANK0 ] PTR PTR void 
  3031 ;;		 -> sprintf@ap(2), 
  3032 ;; Auto vars:     Size  Location     Type
  3033 ;;  ll              8   78[BANK0 ] long long 
  3034 ;;  llu             8    0        unsigned long long 
  3035 ;;  f               4   92[BANK0 ] unsigned long long 
  3036 ;;  ct              3   96[BANK0 ] unsigned char [3]
  3037 ;;  vp              3    0        PTR void 
  3038 ;;  cp              3    0        PTR unsigned char 
  3039 ;;  i               2    0        int 
  3040 ;;  done            2    0        int 
  3041 ;;  c               1   99[BANK0 ] unsigned char 
  3042 ;; Return value:  Size  Location     Type
  3043 ;;                  2   68[BANK0 ] int 
  3044 ;; Registers used:
  3045 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3046 ;; Tracked objects:
  3047 ;;		On entry : 0/0
  3048 ;;		On exit  : 0/0
  3049 ;;		Unchanged: 0/0
  3050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3051 ;;      Params:         0       6       0       0       0       0       0       0       0
  3052 ;;      Locals:         0      22       0       0       0       0       0       0       0
  3053 ;;      Temps:          0       4       0       0       0       0       0       0       0
  3054 ;;      Totals:         0      32       0       0       0       0       0       0       0
  3055 ;;Total ram usage:       32 bytes
  3056 ;; Hardware stack levels used:    1
  3057 ;; Hardware stack levels required when called:    7
  3058 ;; This function calls:
  3059 ;;		_atoi
  3060 ;;		_dtoa
  3061 ;;		_efgtoa
  3062 ;;		_fputc
  3063 ;;		_isdigit
  3064 ;;		_isupper
  3065 ;;		_strncmp
  3066 ;;		_tolower
  3067 ;; This function is called by:
  3068 ;;		_vfprintf
  3069 ;; This function uses a non-reentrant model
  3070 ;;
  3071                           
  3072                           	psect	text7
  3073  001C08                     __ptext7:
  3074                           	callstack 0
  3075  001C08                     _vfpfcnvrt:
  3076                           	callstack 20
  3077  001C08                     
  3078                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  3079  001C08  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3080  001C0C  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3081  001C10  CFDE FFF6          	movff	postinc2,tblptrl
  3082  001C14  CFDD FFF7          	movff	postdec2,tblptrh
  3083  001C18                     	if	0	;tblptru may be non-zero
  3084  001C18                     	endif
  3085  001C18                     	if	0	;tblptru may be non-zero
  3086  001C18                     	endif
  3087  001C18  0008               	tblrd		*
  3088  001C1A  50F5               	movf	tablat,w,c
  3089  001C1C  0A25               	xorlw	37
  3090  001C1E  A4D8               	btfss	status,2,c
  3091  001C20  EF14  F00E         	goto	u8491
  3092  001C24  EF16  F00E         	goto	u8490
  3093  001C28                     u8491:
  3094  001C28  EF02  F011         	goto	l6486
  3095  001C2C                     u8490:
  3096  001C2C                     
  3097                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  3098  001C2C  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3099  001C30  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3100  001C34  2ADE               	incf	postinc2,f,c
  3101  001C36  0E00               	movlw	0
  3102  001C38  22DD               	addwfc	postdec2,f,c
  3103  001C3A                     
  3104                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  3105  001C3A  0E00               	movlw	0
  3106  001C3C  0100               	movlb	0	; () banked
  3107  001C3E  6FF1               	movwf	(_width+1)& (0+255),b
  3108  001C40  0E00               	movlw	0
  3109  001C42  6FF0               	movwf	_width& (0+255),b
  3110  001C44  C0F0  F0F4         	movff	_width,_flags
  3111  001C48  C0F1  F0F5         	movff	_width+1,_flags+1
  3112  001C4C                     
  3113                           ; BSR set to: 0
  3114                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  3115  001C4C  69F2               	setf	_prec& (0+255),b
  3116  001C4E  69F3               	setf	(_prec+1)& (0+255),b
  3117  001C50                     
  3118                           ; BSR set to: 0
  3119                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 723:         if (
      +                          (*fmt)[0] == '*') {
  3120  001C50  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3121  001C54  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3122  001C58  CFDE FFF6          	movff	postinc2,tblptrl
  3123  001C5C  CFDD FFF7          	movff	postdec2,tblptrh
  3124  001C60                     	if	0	;tblptru may be non-zero
  3125  001C60                     	endif
  3126  001C60                     	if	0	;tblptru may be non-zero
  3127  001C60                     	endif
  3128  001C60  0008               	tblrd		*
  3129  001C62  50F5               	movf	tablat,w,c
  3130  001C64  0A2A               	xorlw	42
  3131  001C66  A4D8               	btfss	status,2,c
  3132  001C68  EF38  F00E         	goto	u8501
  3133  001C6C  EF3A  F00E         	goto	u8500
  3134  001C70                     u8501:
  3135  001C70  EF63  F00E         	goto	l6392
  3136  001C74                     u8500:
  3137  001C74                     
  3138                           ; BSR set to: 0
  3139                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 724:             
      +                          ++*fmt;
  3140  001C74  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3141  001C78  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3142  001C7C  2ADE               	incf	postinc2,f,c
  3143  001C7E  0E00               	movlw	0
  3144  001C80  22DD               	addwfc	postdec2,f,c
  3145                           
  3146                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 725:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  3147  001C82  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3148  001C86  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3149  001C8A  CFDF F0AA          	movff	indf2,??_vfpfcnvrt
  3150  001C8E  0E02               	movlw	2
  3151  001C90  26DE               	addwf	postinc2,f,c
  3152  001C92  CFDF F0AB          	movff	indf2,??_vfpfcnvrt+1
  3153  001C96  0E00               	movlw	0
  3154  001C98  22DD               	addwfc	postdec2,f,c
  3155  001C9A  C0AA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3156  001C9E  C0AB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3157  001CA2  CFDE F0F0          	movff	postinc2,_width
  3158  001CA6  CFDD F0F1          	movff	postdec2,_width+1
  3159  001CAA                     
  3160                           ; BSR set to: 0
  3161                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 726:             
      +                          if (width < 0) {
  3162  001CAA  BFF1               	btfsc	(_width+1)& (0+255),7,b
  3163  001CAC  EF5C  F00E         	goto	u8510
  3164  001CB0  EF5A  F00E         	goto	u8511
  3165  001CB4                     u8511:
  3166  001CB4  EFA7  F00E         	goto	l6402
  3167  001CB8                     u8510:
  3168  001CB8                     
  3169                           ; BSR set to: 0
  3170                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 727:             
      +                              flags |= (1 << 0);
  3171  001CB8  81F4               	bsf	_flags& (0+255),0,b
  3172                           
  3173                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 728:             
      +                              width = -width;
  3174  001CBA  6DF0               	negf	_width& (0+255),b
  3175  001CBC  1FF1               	comf	(_width+1)& (0+255),f,b
  3176  001CBE  B0D8               	btfsc	status,0,c
  3177  001CC0  2BF1               	incf	(_width+1)& (0+255),f,b
  3178  001CC2  EFA7  F00E         	goto	l6402
  3179  001CC6                     l6392:
  3180                           
  3181                           ; BSR set to: 0
  3182                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 731:             
      +                          width = atoi(*fmt);
  3183  001CC6  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3184  001CCA  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3185  001CCE  CFDE F009          	movff	postinc2,atoi@s
  3186  001CD2  CFDD F00A          	movff	postdec2,atoi@s+1
  3187  001CD6  ECB5  F01A         	call	_atoi	;wreg free
  3188  001CDA  C009  F0F0         	movff	?_atoi,_width
  3189  001CDE  C00A  F0F1         	movff	?_atoi+1,_width+1
  3190                           
  3191                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 732:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3192  001CE2  EF7A  F00E         	goto	l6396
  3193  001CE6                     l6394:
  3194                           
  3195                           ; BSR set to: 0
  3196                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 733:             
      +                              ++*fmt;
  3197  001CE6  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3198  001CEA  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3199  001CEE  2ADE               	incf	postinc2,f,c
  3200  001CF0  0E00               	movlw	0
  3201  001CF2  22DD               	addwfc	postdec2,f,c
  3202  001CF4                     l6396:
  3203  001CF4  0ED0               	movlw	208
  3204  001CF6  0100               	movlb	0	; () banked
  3205  001CF8  6FAA               	movwf	??_vfpfcnvrt& (0+255),b
  3206  001CFA  0EFF               	movlw	255
  3207  001CFC  6FAB               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3208  001CFE  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3209  001D02  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3210  001D06  CFDE FFF6          	movff	postinc2,tblptrl
  3211  001D0A  CFDD FFF7          	movff	postdec2,tblptrh
  3212  001D0E                     	if	0	;tblptru may be non-zero
  3213  001D0E                     	endif
  3214  001D0E                     	if	0	;tblptru may be non-zero
  3215  001D0E                     	endif
  3216  001D0E  0008               	tblrd		*
  3217  001D10  50F5               	movf	tablat,w,c
  3218  001D12  6FAC               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3219  001D14  6BAD               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3220  001D16  51AA               	movf	??_vfpfcnvrt& (0+255),w,b
  3221  001D18  27AC               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3222  001D1A  51AB               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3223  001D1C  23AD               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3224  001D1E  51AD               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3225  001D20  E10A               	bnz	u8520
  3226  001D22  0E0A               	movlw	10
  3227  001D24  5DAC               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3228  001D26  A0D8               	btfss	status,0,c
  3229  001D28  EF98  F00E         	goto	u8521
  3230  001D2C  EF9B  F00E         	goto	u8520
  3231  001D30                     u8521:
  3232  001D30  0E01               	movlw	1
  3233  001D32  EF9C  F00E         	goto	u8530
  3234  001D36                     u8520:
  3235  001D36  0E00               	movlw	0
  3236  001D38                     u8530:
  3237  001D38  6FB6               	movwf	_vfpfcnvrt$1340& (0+255),b
  3238  001D3A  6BB7               	clrf	(_vfpfcnvrt$1340+1)& (0+255),b
  3239  001D3C                     
  3240                           ; BSR set to: 0
  3241  001D3C  51B6               	movf	_vfpfcnvrt$1340& (0+255),w,b
  3242  001D3E  11B7               	iorwf	(_vfpfcnvrt$1340+1)& (0+255),w,b
  3243  001D40  A4D8               	btfss	status,2,c
  3244  001D42  EFA5  F00E         	goto	u8541
  3245  001D46  EFA7  F00E         	goto	u8540
  3246  001D4A                     u8541:
  3247  001D4A  EF73  F00E         	goto	l6394
  3248  001D4E                     u8540:
  3249  001D4E                     l6402:
  3250                           
  3251                           ; BSR set to: 0
  3252                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if (
      +                          (*fmt)[0] == '.') {
  3253  001D4E  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3254  001D52  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3255  001D56  CFDE FFF6          	movff	postinc2,tblptrl
  3256  001D5A  CFDD FFF7          	movff	postdec2,tblptrh
  3257  001D5E                     	if	0	;tblptru may be non-zero
  3258  001D5E                     	endif
  3259  001D5E                     	if	0	;tblptru may be non-zero
  3260  001D5E                     	endif
  3261  001D5E  0008               	tblrd		*
  3262  001D60  50F5               	movf	tablat,w,c
  3263  001D62  0A2E               	xorlw	46
  3264  001D64  A4D8               	btfss	status,2,c
  3265  001D66  EFB7  F00E         	goto	u8551
  3266  001D6A  EFB9  F00E         	goto	u8550
  3267  001D6E                     u8551:
  3268  001D6E  EF37  F00F         	goto	l6422
  3269  001D72                     u8550:
  3270  001D72                     
  3271                           ; BSR set to: 0
  3272                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             
      +                          prec = 0;
  3273  001D72  0E00               	movlw	0
  3274  001D74  6FF3               	movwf	(_prec+1)& (0+255),b
  3275  001D76  0E00               	movlw	0
  3276  001D78  6FF2               	movwf	_prec& (0+255),b
  3277  001D7A                     
  3278                           ; BSR set to: 0
  3279                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             
      +                          ++*fmt;
  3280  001D7A  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3281  001D7E  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3282  001D82  2ADE               	incf	postinc2,f,c
  3283  001D84  0E00               	movlw	0
  3284  001D86  22DD               	addwfc	postdec2,f,c
  3285  001D88                     
  3286                           ; BSR set to: 0
  3287                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             
      +                          if ((*fmt)[0] == '*') {
  3288  001D88  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3289  001D8C  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3290  001D90  CFDE FFF6          	movff	postinc2,tblptrl
  3291  001D94  CFDD FFF7          	movff	postdec2,tblptrh
  3292  001D98                     	if	0	;tblptru may be non-zero
  3293  001D98                     	endif
  3294  001D98                     	if	0	;tblptru may be non-zero
  3295  001D98                     	endif
  3296  001D98  0008               	tblrd		*
  3297  001D9A  50F5               	movf	tablat,w,c
  3298  001D9C  0A2A               	xorlw	42
  3299  001D9E  A4D8               	btfss	status,2,c
  3300  001DA0  EFD4  F00E         	goto	u8561
  3301  001DA4  EFD6  F00E         	goto	u8560
  3302  001DA8                     u8561:
  3303  001DA8  EFF3  F00E         	goto	l6412
  3304  001DAC                     u8560:
  3305  001DAC                     
  3306                           ; BSR set to: 0
  3307                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:             
      +                              ++*fmt;
  3308  001DAC  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3309  001DB0  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3310  001DB4  2ADE               	incf	postinc2,f,c
  3311  001DB6  0E00               	movlw	0
  3312  001DB8  22DD               	addwfc	postdec2,f,c
  3313                           
  3314                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  3315  001DBA  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3316  001DBE  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3317  001DC2  CFDF F0AA          	movff	indf2,??_vfpfcnvrt
  3318  001DC6  0E02               	movlw	2
  3319  001DC8  26DE               	addwf	postinc2,f,c
  3320  001DCA  CFDF F0AB          	movff	indf2,??_vfpfcnvrt+1
  3321  001DCE  0E00               	movlw	0
  3322  001DD0  22DD               	addwfc	postdec2,f,c
  3323  001DD2  C0AA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3324  001DD6  C0AB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3325  001DDA  CFDE F0F2          	movff	postinc2,_prec
  3326  001DDE  CFDD F0F3          	movff	postdec2,_prec+1
  3327                           
  3328                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             
      +                          } else {
  3329  001DE2  EF37  F00F         	goto	l6422
  3330  001DE6                     l6412:
  3331                           
  3332                           ; BSR set to: 0
  3333                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:             
      +                              prec = atoi(*fmt);
  3334  001DE6  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3335  001DEA  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3336  001DEE  CFDE F009          	movff	postinc2,atoi@s
  3337  001DF2  CFDD F00A          	movff	postdec2,atoi@s+1
  3338  001DF6  ECB5  F01A         	call	_atoi	;wreg free
  3339  001DFA  C009  F0F2         	movff	?_atoi,_prec
  3340  001DFE  C00A  F0F3         	movff	?_atoi+1,_prec+1
  3341                           
  3342                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3343  001E02  EF0A  F00F         	goto	l6416
  3344  001E06                     l6414:
  3345                           
  3346                           ; BSR set to: 0
  3347                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:             
      +                                  ++*fmt;
  3348  001E06  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3349  001E0A  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3350  001E0E  2ADE               	incf	postinc2,f,c
  3351  001E10  0E00               	movlw	0
  3352  001E12  22DD               	addwfc	postdec2,f,c
  3353  001E14                     l6416:
  3354  001E14  0ED0               	movlw	208
  3355  001E16  0100               	movlb	0	; () banked
  3356  001E18  6FAA               	movwf	??_vfpfcnvrt& (0+255),b
  3357  001E1A  0EFF               	movlw	255
  3358  001E1C  6FAB               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3359  001E1E  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3360  001E22  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3361  001E26  CFDE FFF6          	movff	postinc2,tblptrl
  3362  001E2A  CFDD FFF7          	movff	postdec2,tblptrh
  3363  001E2E                     	if	0	;tblptru may be non-zero
  3364  001E2E                     	endif
  3365  001E2E                     	if	0	;tblptru may be non-zero
  3366  001E2E                     	endif
  3367  001E2E  0008               	tblrd		*
  3368  001E30  50F5               	movf	tablat,w,c
  3369  001E32  6FAC               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3370  001E34  6BAD               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3371  001E36  51AA               	movf	??_vfpfcnvrt& (0+255),w,b
  3372  001E38  27AC               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3373  001E3A  51AB               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3374  001E3C  23AD               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3375  001E3E  51AD               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3376  001E40  E10A               	bnz	u8570
  3377  001E42  0E0A               	movlw	10
  3378  001E44  5DAC               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3379  001E46  A0D8               	btfss	status,0,c
  3380  001E48  EF28  F00F         	goto	u8571
  3381  001E4C  EF2B  F00F         	goto	u8570
  3382  001E50                     u8571:
  3383  001E50  0E01               	movlw	1
  3384  001E52  EF2C  F00F         	goto	u8580
  3385  001E56                     u8570:
  3386  001E56  0E00               	movlw	0
  3387  001E58                     u8580:
  3388  001E58  6FB8               	movwf	_vfpfcnvrt$1341& (0+255),b
  3389  001E5A  6BB9               	clrf	(_vfpfcnvrt$1341+1)& (0+255),b
  3390  001E5C                     
  3391                           ; BSR set to: 0
  3392  001E5C  51B8               	movf	_vfpfcnvrt$1341& (0+255),w,b
  3393  001E5E  11B9               	iorwf	(_vfpfcnvrt$1341+1)& (0+255),w,b
  3394  001E60  A4D8               	btfss	status,2,c
  3395  001E62  EF35  F00F         	goto	u8591
  3396  001E66  EF37  F00F         	goto	u8590
  3397  001E6A                     u8591:
  3398  001E6A  EF03  F00F         	goto	l6414
  3399  001E6E                     u8590:
  3400  001E6E                     l6422:
  3401                           
  3402                           ; BSR set to: 0
  3403                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 757:         ct[0
      +                          ] = tolower((int)(*fmt)[0]);
  3404  001E6E  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3405  001E72  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3406  001E76  CFDE FFF6          	movff	postinc2,tblptrl
  3407  001E7A  CFDD FFF7          	movff	postdec2,tblptrh
  3408  001E7E                     	if	0	;tblptru may be non-zero
  3409  001E7E                     	endif
  3410  001E7E                     	if	0	;tblptru may be non-zero
  3411  001E7E                     	endif
  3412  001E7E  0008               	tblrd		*
  3413  001E80  50F5               	movf	tablat,w,c
  3414  001E82  6E08               	movwf	tolower@c^0,c
  3415  001E84  6A09               	clrf	(tolower@c+1)^0,c
  3416  001E86  ECCC  F023         	call	_tolower	;wreg free
  3417  001E8A  5008               	movf	?_tolower^0,w,c
  3418  001E8C  0100               	movlb	0	; () banked
  3419  001E8E  6FC0               	movwf	vfpfcnvrt@ct& (0+255),b
  3420  001E90                     
  3421                           ; BSR set to: 0
  3422                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 758:         if (
      +                          ct[0]) {
  3423  001E90  51C0               	movf	vfpfcnvrt@ct& (0+255),w,b
  3424  001E92  B4D8               	btfsc	status,2,c
  3425  001E94  EF4E  F00F         	goto	u8601
  3426  001E98  EF50  F00F         	goto	u8600
  3427  001E9C                     u8601:
  3428  001E9C  EF8A  F00F         	goto	l6432
  3429  001EA0                     u8600:
  3430  001EA0                     
  3431                           ; BSR set to: 0
  3432                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 759:             
      +                          ct[1] = tolower((int)(*fmt)[1]);
  3433  001EA0  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3434  001EA4  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3435  001EA8  CFDE F0AA          	movff	postinc2,??_vfpfcnvrt
  3436  001EAC  CFDD F0AB          	movff	postdec2,??_vfpfcnvrt+1
  3437  001EB0  0E01               	movlw	1
  3438  001EB2  27AA               	addwf	??_vfpfcnvrt& (0+255),f,b
  3439  001EB4  0E00               	movlw	0
  3440  001EB6  23AB               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3441  001EB8  C0AA  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3442  001EBC  C0AB  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3443  001EC0                     	if	0	;tblptru may be non-zero
  3444  001EC0                     	endif
  3445  001EC0                     	if	0	;tblptru may be non-zero
  3446  001EC0                     	endif
  3447  001EC0  0008               	tblrd		*
  3448  001EC2  50F5               	movf	tablat,w,c
  3449  001EC4  6E08               	movwf	tolower@c^0,c
  3450  001EC6  6A09               	clrf	(tolower@c+1)^0,c
  3451  001EC8  ECCC  F023         	call	_tolower	;wreg free
  3452  001ECC  5008               	movf	?_tolower^0,w,c
  3453  001ECE  0100               	movlb	0	; () banked
  3454  001ED0  6FC1               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  3455  001ED2                     
  3456                           ; BSR set to: 0
  3457                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 760:             
      +                          if (ct[1]) {
  3458  001ED2  51C1               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  3459  001ED4  B4D8               	btfsc	status,2,c
  3460  001ED6  EF6F  F00F         	goto	u8611
  3461  001EDA  EF71  F00F         	goto	u8610
  3462  001EDE                     u8611:
  3463  001EDE  EF8A  F00F         	goto	l6432
  3464  001EE2                     u8610:
  3465  001EE2                     
  3466                           ; BSR set to: 0
  3467                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 761:             
      +                              ct[2] = tolower((int)(*fmt)[2]);
  3468  001EE2  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3469  001EE6  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3470  001EEA  CFDE F0AA          	movff	postinc2,??_vfpfcnvrt
  3471  001EEE  CFDD F0AB          	movff	postdec2,??_vfpfcnvrt+1
  3472  001EF2  0E02               	movlw	2
  3473  001EF4  27AA               	addwf	??_vfpfcnvrt& (0+255),f,b
  3474  001EF6  0E00               	movlw	0
  3475  001EF8  23AB               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3476  001EFA  C0AA  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3477  001EFE  C0AB  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3478  001F02                     	if	0	;tblptru may be non-zero
  3479  001F02                     	endif
  3480  001F02                     	if	0	;tblptru may be non-zero
  3481  001F02                     	endif
  3482  001F02  0008               	tblrd		*
  3483  001F04  50F5               	movf	tablat,w,c
  3484  001F06  6E08               	movwf	tolower@c^0,c
  3485  001F08  6A09               	clrf	(tolower@c+1)^0,c
  3486  001F0A  ECCC  F023         	call	_tolower	;wreg free
  3487  001F0E  5008               	movf	?_tolower^0,w,c
  3488  001F10  0100               	movlb	0	; () banked
  3489  001F12  6FC2               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  3490  001F14                     l6432:
  3491                           
  3492                           ; BSR set to: 0
  3493                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3494  001F14  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3495  001F18  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3496  001F1C  CFDE FFF6          	movff	postinc2,tblptrl
  3497  001F20  CFDD FFF7          	movff	postdec2,tblptrh
  3498  001F24                     	if	0	;tblptru may be non-zero
  3499  001F24                     	endif
  3500  001F24                     	if	0	;tblptru may be non-zero
  3501  001F24                     	endif
  3502  001F24  0008               	tblrd		*
  3503  001F26  50F5               	movf	tablat,w,c
  3504  001F28  0A64               	xorlw	100
  3505  001F2A  B4D8               	btfsc	status,2,c
  3506  001F2C  EF9A  F00F         	goto	u8621
  3507  001F30  EF9C  F00F         	goto	u8620
  3508  001F34                     u8621:
  3509  001F34  EFAE  F00F         	goto	l6436
  3510  001F38                     u8620:
  3511  001F38                     
  3512                           ; BSR set to: 0
  3513  001F38  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3514  001F3C  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3515  001F40  CFDE FFF6          	movff	postinc2,tblptrl
  3516  001F44  CFDD FFF7          	movff	postdec2,tblptrh
  3517  001F48                     	if	0	;tblptru may be non-zero
  3518  001F48                     	endif
  3519  001F48                     	if	0	;tblptru may be non-zero
  3520  001F48                     	endif
  3521  001F48  0008               	tblrd		*
  3522  001F4A  50F5               	movf	tablat,w,c
  3523  001F4C  0A69               	xorlw	105
  3524  001F4E  A4D8               	btfss	status,2,c
  3525  001F50  EFAC  F00F         	goto	u8631
  3526  001F54  EFAE  F00F         	goto	u8630
  3527  001F58                     u8631:
  3528  001F58  EFEE  F00F         	goto	l6442
  3529  001F5C                     u8630:
  3530  001F5C                     l6436:
  3531                           
  3532                           ; BSR set to: 0
  3533                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
  3534  001F5C  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3535  001F60  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3536  001F64  2ADE               	incf	postinc2,f,c
  3537  001F66  0E00               	movlw	0
  3538  001F68  22DD               	addwfc	postdec2,f,c
  3539                           
  3540                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3541  001F6A  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3542  001F6E  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3543  001F72  CFDF F0AA          	movff	indf2,??_vfpfcnvrt
  3544  001F76  0E02               	movlw	2
  3545  001F78  26DE               	addwf	postinc2,f,c
  3546  001F7A  CFDF F0AB          	movff	indf2,??_vfpfcnvrt+1
  3547  001F7E  0E00               	movlw	0
  3548  001F80  22DD               	addwfc	postdec2,f,c
  3549  001F82  C0AA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3550  001F86  C0AB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3551  001F8A  CFDE F0AE          	movff	postinc2,vfpfcnvrt@ll
  3552  001F8E  CFDD F0AF          	movff	postdec2,vfpfcnvrt@ll+1
  3553  001F92  0E00               	movlw	0
  3554  001F94  BFAF               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  3555  001F96  0EFF               	movlw	-1
  3556  001F98  6FB0               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  3557  001F9A  6FB1               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  3558  001F9C  6FB2               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  3559  001F9E  6FB3               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  3560  001FA0  6FB4               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  3561  001FA2  6FB5               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  3562  001FA4                     
  3563                           ; BSR set to: 0
  3564                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 830:             
      +                          return dtoa(fp, ll);
  3565  001FA4  C0A4  F01D         	movff	vfpfcnvrt@fp,dtoa@fp
  3566  001FA8  C0A5  F01E         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3567  001FAC  C0AE  F01F         	movff	vfpfcnvrt@ll,dtoa@d
  3568  001FB0  C0AF  F020         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3569  001FB4  C0B0  F021         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3570  001FB8  C0B1  F022         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3571  001FBC  C0B2  F023         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3572  001FC0  C0B3  F024         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3573  001FC4  C0B4  F025         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3574  001FC8  C0B5  F026         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3575  001FCC  EC60  F017         	call	_dtoa	;wreg free
  3576  001FD0  C01D  F0A4         	movff	?_dtoa,?_vfpfcnvrt
  3577  001FD4  C01E  F0A5         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3578  001FD8  EF1D  F011         	goto	l1080
  3579  001FDC                     l6442:
  3580                           
  3581                           ; BSR set to: 0
  3582                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 920:         if (
      +                          ct[0] == 'f') {
  3583  001FDC  0E66               	movlw	102
  3584  001FDE  19C0               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  3585  001FE0  A4D8               	btfss	status,2,c
  3586  001FE2  EFF5  F00F         	goto	u8641
  3587  001FE6  EFF7  F00F         	goto	u8640
  3588  001FEA                     u8641:
  3589  001FEA  EF37  F010         	goto	l6454
  3590  001FEE                     u8640:
  3591  001FEE                     
  3592                           ; BSR set to: 0
  3593                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 922:             
      +                          c = (*fmt)[0];
  3594  001FEE  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3595  001FF2  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3596  001FF6  CFDE FFF6          	movff	postinc2,tblptrl
  3597  001FFA  CFDD FFF7          	movff	postdec2,tblptrh
  3598  001FFE                     	if	0	;tblptru may be non-zero
  3599  001FFE                     	endif
  3600  001FFE                     	if	0	;tblptru may be non-zero
  3601  001FFE                     	endif
  3602  001FFE  0008               	tblrd		*
  3603  002000  CFF5 F0C3          	movff	tablat,vfpfcnvrt@c
  3604  002004                     
  3605                           ; BSR set to: 0
  3606                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 923:             
      +                          ++*fmt;
  3607  002004  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3608  002008  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3609  00200C  2ADE               	incf	postinc2,f,c
  3610  00200E  0E00               	movlw	0
  3611  002010  22DD               	addwfc	postdec2,f,c
  3612  002012                     
  3613                           ; BSR set to: 0
  3614                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 924:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3615  002012  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3616  002016  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3617  00201A  CFDF F0AA          	movff	indf2,??_vfpfcnvrt
  3618  00201E  0E04               	movlw	4
  3619  002020  26DE               	addwf	postinc2,f,c
  3620  002022  CFDF F0AB          	movff	indf2,??_vfpfcnvrt+1
  3621  002026  0E00               	movlw	0
  3622  002028  22DD               	addwfc	postdec2,f,c
  3623  00202A  C0AA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3624  00202E  C0AB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3625  002032  CFDE F0BC          	movff	postinc2,vfpfcnvrt@f
  3626  002036  CFDE F0BD          	movff	postinc2,vfpfcnvrt@f+1
  3627  00203A  CFDE F0BE          	movff	postinc2,vfpfcnvrt@f+2
  3628  00203E  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f+3
  3629  002042                     l6450:
  3630                           
  3631                           ; BSR set to: 0
  3632                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 926:             
      +                          return efgtoa(fp, f, c);
  3633  002042  C0A4  F060         	movff	vfpfcnvrt@fp,efgtoa@fp
  3634  002046  C0A5  F061         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3635  00204A  C0BC  F062         	movff	vfpfcnvrt@f,efgtoa@f
  3636  00204E  C0BD  F063         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3637  002052  C0BE  F064         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3638  002056  C0BF  F065         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3639  00205A  C0C3  F066         	movff	vfpfcnvrt@c,efgtoa@c
  3640  00205E  EC6C  F004         	call	_efgtoa	;wreg free
  3641  002062  C060  F0A4         	movff	?_efgtoa,?_vfpfcnvrt
  3642  002066  C061  F0A5         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3643  00206A  EF1D  F011         	goto	l1080
  3644  00206E                     l6454:
  3645                           
  3646                           ; BSR set to: 0
  3647                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 928:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3648  00206E  0EC0               	movlw	low vfpfcnvrt@ct
  3649  002070  6E02               	movwf	strncmp@_l^0,c
  3650  002072  0E00               	movlw	high vfpfcnvrt@ct
  3651  002074  6E03               	movwf	(strncmp@_l+1)^0,c
  3652  002076  0ED1               	movlw	low STR_33
  3653  002078  6E04               	movwf	strncmp@_r^0,c
  3654  00207A  0E08               	movlw	high STR_33
  3655  00207C  6E05               	movwf	(strncmp@_r+1)^0,c
  3656  00207E  0E00               	movlw	0
  3657  002080  6E07               	movwf	(strncmp@n+1)^0,c
  3658  002082  0E02               	movlw	2
  3659  002084  6E06               	movwf	strncmp@n^0,c
  3660  002086  EC08  F020         	call	_strncmp	;wreg free
  3661  00208A  5002               	movf	?_strncmp^0,w,c
  3662  00208C  1003               	iorwf	(?_strncmp+1)^0,w,c
  3663  00208E  A4D8               	btfss	status,2,c
  3664  002090  EF4C  F010         	goto	u8651
  3665  002094  EF4E  F010         	goto	u8650
  3666  002098                     u8651:
  3667  002098  EFCA  F010         	goto	l6470
  3668  00209C                     u8650:
  3669  00209C                     
  3670                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 931:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3671  00209C  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3672  0020A0  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3673  0020A4  CFDE F0AA          	movff	postinc2,??_vfpfcnvrt
  3674  0020A8  CFDD F0AB          	movff	postdec2,??_vfpfcnvrt+1
  3675  0020AC  0E01               	movlw	1
  3676  0020AE  0100               	movlb	0	; () banked
  3677  0020B0  27AA               	addwf	??_vfpfcnvrt& (0+255),f,b
  3678  0020B2  0E00               	movlw	0
  3679  0020B4  23AB               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3680  0020B6  C0AA  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3681  0020BA  C0AB  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3682  0020BE                     	if	0	;tblptru may be non-zero
  3683  0020BE                     	endif
  3684  0020BE                     	if	0	;tblptru may be non-zero
  3685  0020BE                     	endif
  3686  0020BE  0008               	tblrd		*
  3687  0020C0  CFF5 F0C3          	movff	tablat,vfpfcnvrt@c
  3688  0020C4  0EBF               	movlw	191
  3689  0020C6  6FAA               	movwf	??_vfpfcnvrt& (0+255),b
  3690  0020C8  0EFF               	movlw	255
  3691  0020CA  6FAB               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3692  0020CC  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3693  0020D0  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3694  0020D4  CFDE FFF6          	movff	postinc2,tblptrl
  3695  0020D8  CFDD FFF7          	movff	postdec2,tblptrh
  3696  0020DC                     	if	0	;tblptru may be non-zero
  3697  0020DC                     	endif
  3698  0020DC                     	if	0	;tblptru may be non-zero
  3699  0020DC                     	endif
  3700  0020DC  0008               	tblrd		*
  3701  0020DE  50F5               	movf	tablat,w,c
  3702  0020E0  6FAC               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3703  0020E2  6BAD               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3704  0020E4  51AA               	movf	??_vfpfcnvrt& (0+255),w,b
  3705  0020E6  27AC               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3706  0020E8  51AB               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3707  0020EA  23AD               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3708  0020EC  51AD               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3709  0020EE  E10A               	bnz	u8660
  3710  0020F0  0E1A               	movlw	26
  3711  0020F2  5DAC               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3712  0020F4  A0D8               	btfss	status,0,c
  3713  0020F6  EF7F  F010         	goto	u8661
  3714  0020FA  EF82  F010         	goto	u8660
  3715  0020FE                     u8661:
  3716  0020FE  0E01               	movlw	1
  3717  002100  EF83  F010         	goto	u8670
  3718  002104                     u8660:
  3719  002104  0E00               	movlw	0
  3720  002106                     u8670:
  3721  002106  6FBA               	movwf	_vfpfcnvrt$1346& (0+255),b
  3722  002108  6BBB               	clrf	(_vfpfcnvrt$1346+1)& (0+255),b
  3723  00210A                     
  3724                           ; BSR set to: 0
  3725  00210A  51BA               	movf	_vfpfcnvrt$1346& (0+255),w,b
  3726  00210C  11BB               	iorwf	(_vfpfcnvrt$1346+1)& (0+255),w,b
  3727  00210E  B4D8               	btfsc	status,2,c
  3728  002110  EF8C  F010         	goto	u8681
  3729  002114  EF8E  F010         	goto	u8680
  3730  002118                     u8681:
  3731  002118  EFA8  F010         	goto	l6464
  3732  00211C                     u8680:
  3733  00211C                     
  3734                           ; BSR set to: 0
  3735                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 932:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3736  00211C  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3737  002120  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3738  002124  CFDF F0AA          	movff	indf2,??_vfpfcnvrt
  3739  002128  0E04               	movlw	4
  3740  00212A  26DE               	addwf	postinc2,f,c
  3741  00212C  CFDF F0AB          	movff	indf2,??_vfpfcnvrt+1
  3742  002130  0E00               	movlw	0
  3743  002132  22DD               	addwfc	postdec2,f,c
  3744  002134  C0AA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3745  002138  C0AB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3746  00213C  CFDE F0BC          	movff	postinc2,vfpfcnvrt@f
  3747  002140  CFDE F0BD          	movff	postinc2,vfpfcnvrt@f+1
  3748  002144  CFDE F0BE          	movff	postinc2,vfpfcnvrt@f+2
  3749  002148  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f+3
  3750                           
  3751                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 933:             
      +                          } else {
  3752  00214C  EFC0  F010         	goto	l1088
  3753  002150                     l6464:
  3754                           
  3755                           ; BSR set to: 0
  3756                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 934:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3757  002150  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3758  002154  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3759  002158  CFDF F0AA          	movff	indf2,??_vfpfcnvrt
  3760  00215C  0E04               	movlw	4
  3761  00215E  26DE               	addwf	postinc2,f,c
  3762  002160  CFDF F0AB          	movff	indf2,??_vfpfcnvrt+1
  3763  002164  0E00               	movlw	0
  3764  002166  22DD               	addwfc	postdec2,f,c
  3765  002168  C0AA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3766  00216C  C0AB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3767  002170  CFDE F0BC          	movff	postinc2,vfpfcnvrt@f
  3768  002174  CFDE F0BD          	movff	postinc2,vfpfcnvrt@f+1
  3769  002178  CFDE F0BE          	movff	postinc2,vfpfcnvrt@f+2
  3770  00217C  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f+3
  3771  002180                     l1088:
  3772                           
  3773                           ; BSR set to: 0
  3774                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 936:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3775  002180  0E02               	movlw	2
  3776  002182  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3777  002186  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3778  00218A  26DE               	addwf	postinc2,f,c
  3779  00218C  0E00               	movlw	0
  3780  00218E  22DD               	addwfc	postdec2,f,c
  3781  002190  EF21  F010         	goto	l6450
  3782  002194                     l6470:
  3783                           
  3784                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  3785  002194  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3786  002198  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3787  00219C  CFDE FFF6          	movff	postinc2,tblptrl
  3788  0021A0  CFDD FFF7          	movff	postdec2,tblptrh
  3789  0021A4                     	if	0	;tblptru may be non-zero
  3790  0021A4                     	endif
  3791  0021A4                     	if	0	;tblptru may be non-zero
  3792  0021A4                     	endif
  3793  0021A4  0008               	tblrd		*
  3794  0021A6  50F5               	movf	tablat,w,c
  3795  0021A8  0A25               	xorlw	37
  3796  0021AA  A4D8               	btfss	status,2,c
  3797  0021AC  EFDA  F010         	goto	u8691
  3798  0021B0  EFDC  F010         	goto	u8690
  3799  0021B4                     u8691:
  3800  0021B4  EFF4  F010         	goto	l6480
  3801  0021B8                     u8690:
  3802  0021B8                     
  3803                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  3804  0021B8  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3805  0021BC  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3806  0021C0  2ADE               	incf	postinc2,f,c
  3807  0021C2  0E00               	movlw	0
  3808  0021C4  22DD               	addwfc	postdec2,f,c
  3809  0021C6                     
  3810                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  3811  0021C6  0E00               	movlw	0
  3812  0021C8  6E03               	movwf	(fputc@c+1)^0,c
  3813  0021CA  0E25               	movlw	37
  3814  0021CC  6E02               	movwf	fputc@c^0,c
  3815  0021CE  C0A4  F004         	movff	vfpfcnvrt@fp,fputc@fp
  3816  0021D2  C0A5  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3817  0021D6  EC73  F020         	call	_fputc	;wreg free
  3818  0021DA                     l6476:
  3819                           
  3820                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  3821  0021DA  0E00               	movlw	0
  3822  0021DC  0100               	movlb	0	; () banked
  3823  0021DE  6FA5               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3824  0021E0  0E01               	movlw	1
  3825  0021E2  6FA4               	movwf	?_vfpfcnvrt& (0+255),b
  3826  0021E4  EF1D  F011         	goto	l1080
  3827  0021E8                     l6480:
  3828                           
  3829                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  3830  0021E8  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3831  0021EC  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3832  0021F0  2ADE               	incf	postinc2,f,c
  3833  0021F2  0E00               	movlw	0
  3834  0021F4  22DD               	addwfc	postdec2,f,c
  3835  0021F6                     
  3836                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  3837  0021F6  0E00               	movlw	0
  3838  0021F8  0100               	movlb	0	; () banked
  3839  0021FA  6FA5               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3840  0021FC  0E00               	movlw	0
  3841  0021FE  6FA4               	movwf	?_vfpfcnvrt& (0+255),b
  3842  002200  EF1D  F011         	goto	l1080
  3843  002204                     l6486:
  3844                           
  3845                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  3846  002204  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3847  002208  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3848  00220C  CFDE FFF6          	movff	postinc2,tblptrl
  3849  002210  CFDD FFF7          	movff	postdec2,tblptrh
  3850  002214                     	if	0	;tblptru may be non-zero
  3851  002214                     	endif
  3852  002214                     	if	0	;tblptru may be non-zero
  3853  002214                     	endif
  3854  002214  0008               	tblrd		*
  3855  002216  50F5               	movf	tablat,w,c
  3856  002218  6E02               	movwf	fputc@c^0,c
  3857  00221A  6A03               	clrf	(fputc@c+1)^0,c
  3858  00221C  C0A4  F004         	movff	vfpfcnvrt@fp,fputc@fp
  3859  002220  C0A5  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3860  002224  EC73  F020         	call	_fputc	;wreg free
  3861  002228                     
  3862                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  3863  002228  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3864  00222C  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3865  002230  2ADE               	incf	postinc2,f,c
  3866  002232  0E00               	movlw	0
  3867  002234  22DD               	addwfc	postdec2,f,c
  3868  002236  EFED  F010         	goto	l6476
  3869  00223A                     l1080:
  3870  00223A  0012               	return		;funcret
  3871  00223C                     __end_of_vfpfcnvrt:
  3872                           	callstack 0
  3873                           
  3874 ;; *************** function _strncmp *****************
  3875 ;; Defined at:
  3876 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  3877 ;; Parameters:    Size  Location     Type
  3878 ;;  _l              2    1[COMRAM] PTR const unsigned char 
  3879 ;;		 -> vfpfcnvrt@ct(3), 
  3880 ;;  _r              2    3[COMRAM] PTR const unsigned char 
  3881 ;;		 -> STR_35(3), 
  3882 ;;  n               2    5[COMRAM] unsigned int 
  3883 ;; Auto vars:     Size  Location     Type
  3884 ;;  r               2   10[COMRAM] PTR const unsigned char 
  3885 ;;		 -> STR_35(3), 
  3886 ;;  l               2    8[COMRAM] PTR const unsigned char 
  3887 ;;		 -> vfpfcnvrt@ct(3), 
  3888 ;; Return value:  Size  Location     Type
  3889 ;;                  2    1[COMRAM] int 
  3890 ;; Registers used:
  3891 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3892 ;; Tracked objects:
  3893 ;;		On entry : 0/0
  3894 ;;		On exit  : 0/0
  3895 ;;		Unchanged: 0/0
  3896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3897 ;;      Params:         6       0       0       0       0       0       0       0       0
  3898 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3899 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3900 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3901 ;;Total ram usage:       11 bytes
  3902 ;; Hardware stack levels used:    1
  3903 ;; Hardware stack levels required when called:    2
  3904 ;; This function calls:
  3905 ;;		Nothing
  3906 ;; This function is called by:
  3907 ;;		_vfpfcnvrt
  3908 ;; This function uses a non-reentrant model
  3909 ;;
  3910                           
  3911                           	psect	text8
  3912  004010                     __ptext8:
  3913                           	callstack 0
  3914  004010                     _strncmp:
  3915                           	callstack 24
  3916  004010  C002  F009         	movff	strncmp@_l,strncmp@l
  3917  004014  C003  F00A         	movff	strncmp@_l+1,strncmp@l+1
  3918  004018  C004  F00B         	movff	strncmp@_r,strncmp@r
  3919  00401C  C005  F00C         	movff	strncmp@_r+1,strncmp@r+1
  3920  004020  0606               	decf	strncmp@n^0,f,c
  3921  004022  A0D8               	btfss	status,0,c
  3922  004024  0607               	decf	(strncmp@n+1)^0,f,c
  3923  004026  2806               	incf	strncmp@n^0,w,c
  3924  004028  E106               	bnz	u8441
  3925  00402A  2807               	incf	(strncmp@n+1)^0,w,c
  3926  00402C  A4D8               	btfss	status,2,c
  3927  00402E  EF1B  F020         	goto	u8441
  3928  004032  EF1D  F020         	goto	u8440
  3929  004036                     u8441:
  3930  004036  EF2A  F020         	goto	l6364
  3931  00403A                     u8440:
  3932  00403A  0E00               	movlw	0
  3933  00403C  6E03               	movwf	(?_strncmp+1)^0,c
  3934  00403E  0E00               	movlw	0
  3935  004040  6E02               	movwf	?_strncmp^0,c
  3936  004042  EF72  F020         	goto	l1216
  3937  004046                     l6362:
  3938  004046  4A09               	infsnz	strncmp@l^0,f,c
  3939  004048  2A0A               	incf	(strncmp@l+1)^0,f,c
  3940  00404A  4A0B               	infsnz	strncmp@r^0,f,c
  3941  00404C  2A0C               	incf	(strncmp@r+1)^0,f,c
  3942  00404E  0606               	decf	strncmp@n^0,f,c
  3943  004050  A0D8               	btfss	status,0,c
  3944  004052  0607               	decf	(strncmp@n+1)^0,f,c
  3945  004054                     l6364:
  3946  004054  C009  FFD9         	movff	strncmp@l,fsr2l
  3947  004058  C00A  FFDA         	movff	strncmp@l+1,fsr2h
  3948  00405C  50DF               	movf	indf2,w,c
  3949  00405E  B4D8               	btfsc	status,2,c
  3950  004060  EF34  F020         	goto	u8451
  3951  004064  EF36  F020         	goto	u8450
  3952  004068                     u8451:
  3953  004068  EF61  F020         	goto	l6372
  3954  00406C                     u8450:
  3955  00406C  C00B  FFF6         	movff	strncmp@r,tblptrl
  3956  004070  C00C  FFF7         	movff	strncmp@r+1,tblptrh
  3957  004074                     	if	0	;tblptru may be non-zero
  3958  004074                     	endif
  3959  004074                     	if	0	;tblptru may be non-zero
  3960  004074                     	endif
  3961  004074  0008               	tblrd		*
  3962  004076  50F5               	movf	tablat,w,c
  3963  004078  0900               	iorlw	0
  3964  00407A  B4D8               	btfsc	status,2,c
  3965  00407C  EF42  F020         	goto	u8461
  3966  004080  EF44  F020         	goto	u8460
  3967  004084                     u8461:
  3968  004084  EF61  F020         	goto	l6372
  3969  004088                     u8460:
  3970  004088  5006               	movf	strncmp@n^0,w,c
  3971  00408A  1007               	iorwf	(strncmp@n+1)^0,w,c
  3972  00408C  B4D8               	btfsc	status,2,c
  3973  00408E  EF4B  F020         	goto	u8471
  3974  004092  EF4D  F020         	goto	u8470
  3975  004096                     u8471:
  3976  004096  EF61  F020         	goto	l6372
  3977  00409A                     u8470:
  3978  00409A  C009  FFD9         	movff	strncmp@l,fsr2l
  3979  00409E  C00A  FFDA         	movff	strncmp@l+1,fsr2h
  3980  0040A2  50DF               	movf	indf2,w,c
  3981  0040A4  6E08               	movwf	??_strncmp^0,c
  3982  0040A6  C00B  FFF6         	movff	strncmp@r,tblptrl
  3983  0040AA  C00C  FFF7         	movff	strncmp@r+1,tblptrh
  3984  0040AE                     	if	0	;tblptru may be non-zero
  3985  0040AE                     	endif
  3986  0040AE                     	if	0	;tblptru may be non-zero
  3987  0040AE                     	endif
  3988  0040AE  0008               	tblrd		*
  3989  0040B0  50F5               	movf	tablat,w,c
  3990  0040B2  1808               	xorwf	??_strncmp^0,w,c
  3991  0040B4  B4D8               	btfsc	status,2,c
  3992  0040B6  EF5F  F020         	goto	u8481
  3993  0040BA  EF61  F020         	goto	u8480
  3994  0040BE                     u8481:
  3995  0040BE  EF23  F020         	goto	l6362
  3996  0040C2                     u8480:
  3997  0040C2                     l6372:
  3998  0040C2  C009  FFD9         	movff	strncmp@l,fsr2l
  3999  0040C6  C00A  FFDA         	movff	strncmp@l+1,fsr2h
  4000  0040CA  50DF               	movf	indf2,w,c
  4001  0040CC  6E08               	movwf	??_strncmp^0,c
  4002  0040CE  C00B  FFF6         	movff	strncmp@r,tblptrl
  4003  0040D2  C00C  FFF7         	movff	strncmp@r+1,tblptrh
  4004  0040D6                     	if	0	;tblptru may be non-zero
  4005  0040D6                     	endif
  4006  0040D6                     	if	0	;tblptru may be non-zero
  4007  0040D6                     	endif
  4008  0040D6  0008               	tblrd		*
  4009  0040D8  50F5               	movf	tablat,w,c
  4010  0040DA  5C08               	subwf	??_strncmp^0,w,c
  4011  0040DC  6E02               	movwf	?_strncmp^0,c
  4012  0040DE  6A03               	clrf	(?_strncmp+1)^0,c
  4013  0040E0  A0D8               	btfss	status,0,c
  4014  0040E2  0603               	decf	(?_strncmp+1)^0,f,c
  4015  0040E4                     l1216:
  4016  0040E4  0012               	return		;funcret
  4017  0040E6                     __end_of_strncmp:
  4018                           	callstack 0
  4019                           
  4020 ;; *************** function _efgtoa *****************
  4021 ;; Defined at:
  4022 ;;		line 319 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  4023 ;; Parameters:    Size  Location     Type
  4024 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  4025 ;;		 -> sprintf@f(6), 
  4026 ;;  f               4    2[BANK0 ] PTR struct _IO_FILE
  4027 ;;  c               1    6[BANK0 ] unsigned char 
  4028 ;; Auto vars:     Size  Location     Type
  4029 ;;  u               4   64[BANK0 ] unsigned char 
  4030 ;;  g               4   56[BANK0 ] unsigned char 
  4031 ;;  l               4   50[BANK0 ] unsigned char 
  4032 ;;  h               4   46[BANK0 ] unsigned char 
  4033 ;;  ou              4   12[BANK0 ] unsigned char 
  4034 ;;  n               2   62[BANK0 ] int 
  4035 ;;  e               2   60[BANK0 ] int 
  4036 ;;  i               2   54[BANK0 ] int 
  4037 ;;  w               2   43[BANK0 ] int 
  4038 ;;  p               2   40[BANK0 ] int 
  4039 ;;  sign            2   38[BANK0 ] int 
  4040 ;;  d               2   36[BANK0 ] int 
  4041 ;;  ne              2   34[BANK0 ] int 
  4042 ;;  m               2   32[BANK0 ] int 
  4043 ;;  pp              2   30[BANK0 ] int 
  4044 ;;  t               2   28[BANK0 ] int 
  4045 ;;  mode            1   45[BANK0 ] unsigned char 
  4046 ;;  nmode           1   42[BANK0 ] unsigned char 
  4047 ;; Return value:  Size  Location     Type
  4048 ;;                  2    0[BANK0 ] int 
  4049 ;; Registers used:
  4050 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4051 ;; Tracked objects:
  4052 ;;		On entry : 0/0
  4053 ;;		On exit  : 0/0
  4054 ;;		Unchanged: 0/0
  4055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4056 ;;      Params:         0       7       0       0       0       0       0       0       0
  4057 ;;      Locals:         0      56       0       0       0       0       0       0       0
  4058 ;;      Temps:          0       5       0       0       0       0       0       0       0
  4059 ;;      Totals:         0      68       0       0       0       0       0       0       0
  4060 ;;Total ram usage:       68 bytes
  4061 ;; Hardware stack levels used:    1
  4062 ;; Hardware stack levels required when called:    6
  4063 ;; This function calls:
  4064 ;;		___awdiv
  4065 ;;		___awmod
  4066 ;;		___fladd
  4067 ;;		___fldiv
  4068 ;;		___fleq
  4069 ;;		___flge
  4070 ;;		___flmul
  4071 ;;		___flneg
  4072 ;;		___flsub
  4073 ;;		___fltol
  4074 ;;		___fpclassifyf
  4075 ;;		_floorf
  4076 ;;		_isupper
  4077 ;;		_pad
  4078 ;;		_strcpy
  4079 ;;		_tolower
  4080 ;; This function is called by:
  4081 ;;		_vfpfcnvrt
  4082 ;; This function uses a non-reentrant model
  4083 ;;
  4084                           
  4085                           	psect	text9
  4086  0008D8                     __ptext9:
  4087                           	callstack 0
  4088  0008D8                     _efgtoa:
  4089                           	callstack 20
  4090  0008D8                     
  4091                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 319: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\
      +                          c99\common\doprnt.c: 320: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\
      +                          doprnt.c: 321:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c9
      +                          9\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 323:     long double g, h, l, ou, u;
  4092  0008D8  0E00               	movlw	0
  4093  0008DA  0100               	movlb	0	; () banked
  4094  0008DC  6F87               	movwf	(efgtoa@sign+1)& (0+255),b
  4095  0008DE  0E00               	movlw	0
  4096  0008E0  6F86               	movwf	efgtoa@sign& (0+255),b
  4097  0008E2                     
  4098                           ; BSR set to: 0
  4099                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 327:     g = f;
  4100  0008E2  C062  F098         	movff	efgtoa@f,efgtoa@g
  4101  0008E6  C063  F099         	movff	efgtoa@f+1,efgtoa@g+1
  4102  0008EA  C064  F09A         	movff	efgtoa@f+2,efgtoa@g+2
  4103  0008EE  C065  F09B         	movff	efgtoa@f+3,efgtoa@g+3
  4104  0008F2                     
  4105                           ; BSR set to: 0
  4106                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 328:     if (g < 
      +                          0.0) {
  4107  0008F2  BF9B               	btfsc	(efgtoa@g+3)& (0+255),7,b
  4108  0008F4  EF80  F004         	goto	u7850
  4109  0008F8  EF7E  F004         	goto	u7851
  4110  0008FC                     u7851:
  4111  0008FC  EF96  F004         	goto	l6026
  4112  000900                     u7850:
  4113  000900                     
  4114                           ; BSR set to: 0
  4115                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 329:         sign
      +                           = 1;
  4116  000900  0E00               	movlw	0
  4117  000902  6F87               	movwf	(efgtoa@sign+1)& (0+255),b
  4118  000904  0E01               	movlw	1
  4119  000906  6F86               	movwf	efgtoa@sign& (0+255),b
  4120  000908                     
  4121                           ; BSR set to: 0
  4122                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 330:         g = 
      +                          -g;
  4123  000908  C098  F002         	movff	efgtoa@g,___flneg@f1
  4124  00090C  C099  F003         	movff	efgtoa@g+1,___flneg@f1+1
  4125  000910  C09A  F004         	movff	efgtoa@g+2,___flneg@f1+2
  4126  000914  C09B  F005         	movff	efgtoa@g+3,___flneg@f1+3
  4127  000918  EC4C  F025         	call	___flneg	;wreg free
  4128  00091C  C002  F098         	movff	?___flneg,efgtoa@g
  4129  000920  C003  F099         	movff	?___flneg+1,efgtoa@g+1
  4130  000924  C004  F09A         	movff	?___flneg+2,efgtoa@g+2
  4131  000928  C005  F09B         	movff	?___flneg+3,efgtoa@g+3
  4132  00092C                     l6026:
  4133                           
  4134                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 334:     n = 0;
  4135  00092C  0E00               	movlw	0
  4136  00092E  0100               	movlb	0	; () banked
  4137  000930  6F9F               	movwf	(efgtoa@n+1)& (0+255),b
  4138  000932  0E00               	movlw	0
  4139  000934  6F9E               	movwf	efgtoa@n& (0+255),b
  4140  000936                     
  4141                           ; BSR set to: 0
  4142                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 335:     w = widt
      +                          h;
  4143  000936  C0F0  F08B         	movff	_width,efgtoa@w
  4144  00093A  C0F1  F08C         	movff	_width+1,efgtoa@w+1
  4145  00093E                     
  4146                           ; BSR set to: 0
  4147                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 336:     if (sign
      +                           || (flags & (1 << 2))) {
  4148  00093E  5186               	movf	efgtoa@sign& (0+255),w,b
  4149  000940  1187               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4150  000942  A4D8               	btfss	status,2,c
  4151  000944  EFA6  F004         	goto	u7861
  4152  000948  EFA8  F004         	goto	u7860
  4153  00094C                     u7861:
  4154  00094C  EFAF  F004         	goto	l6034
  4155  000950                     u7860:
  4156  000950                     
  4157                           ; BSR set to: 0
  4158  000950  A5F4               	btfss	_flags& (0+255),2,b
  4159  000952  EFAD  F004         	goto	u7871
  4160  000956  EFAF  F004         	goto	u7870
  4161  00095A                     u7871:
  4162  00095A  EFC9  F004         	goto	l6046
  4163  00095E                     u7870:
  4164  00095E                     l6034:
  4165                           
  4166                           ; BSR set to: 0
  4167                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 337:         dbuf
      +                          [n] = sign ? '-' : '+';
  4168  00095E  5186               	movf	efgtoa@sign& (0+255),w,b
  4169  000960  1187               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4170  000962  A4D8               	btfss	status,2,c
  4171  000964  EFB6  F004         	goto	u7881
  4172  000968  EFB8  F004         	goto	u7880
  4173  00096C                     u7881:
  4174  00096C  EFBE  F004         	goto	l6038
  4175  000970                     u7880:
  4176  000970                     
  4177                           ; BSR set to: 0
  4178  000970  0E00               	movlw	0
  4179  000972  6F71               	movwf	(_efgtoa$1315+1)& (0+255),b
  4180  000974  0E2B               	movlw	43
  4181  000976  6F70               	movwf	_efgtoa$1315& (0+255),b
  4182  000978  EFC2  F004         	goto	l6040
  4183  00097C                     l6038:
  4184                           
  4185                           ; BSR set to: 0
  4186  00097C  0E00               	movlw	0
  4187  00097E  6F71               	movwf	(_efgtoa$1315+1)& (0+255),b
  4188  000980  0E2D               	movlw	45
  4189  000982  6F70               	movwf	_efgtoa$1315& (0+255),b
  4190  000984                     l6040:
  4191                           
  4192                           ; BSR set to: 0
  4193  000984  C070  F108         	movff	_efgtoa$1315,_dbuf
  4194  000988                     
  4195                           ; BSR set to: 0
  4196                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 338:         ++n;
  4197  000988  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  4198  00098A  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  4199  00098C                     
  4200                           ; BSR set to: 0
  4201                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 339:         --w;
  4202  00098C  078B               	decf	efgtoa@w& (0+255),f,b
  4203  00098E  A0D8               	btfss	status,0,c
  4204  000990  078C               	decf	(efgtoa@w+1)& (0+255),f,b
  4205  000992                     l6046:
  4206                           
  4207                           ; BSR set to: 0
  4208                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 344:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4209  000992  C098  F002         	movff	efgtoa@g,___fpclassifyf@x
  4210  000996  C099  F003         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4211  00099A  C09A  F004         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4212  00099E  C09B  F005         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4213  0009A2  EC1C  F01F         	call	___fpclassifyf	;wreg free
  4214  0009A6  0402               	decf	?___fpclassifyf^0,w,c
  4215  0009A8  1003               	iorwf	(?___fpclassifyf+1)^0,w,c
  4216  0009AA  A4D8               	btfss	status,2,c
  4217  0009AC  EFDA  F004         	goto	u7891
  4218  0009B0  EFDC  F004         	goto	u7890
  4219  0009B4                     u7891:
  4220  0009B4  EF33  F005         	goto	l6064
  4221  0009B8                     u7890:
  4222  0009B8  0EBF               	movlw	191
  4223  0009BA  0100               	movlb	0	; () banked
  4224  0009BC  6F67               	movwf	??_efgtoa& (0+255),b
  4225  0009BE  0EFF               	movlw	255
  4226  0009C0  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  4227  0009C2  5166               	movf	efgtoa@c& (0+255),w,b
  4228  0009C4  6F69               	movwf	(??_efgtoa+2)& (0+255),b
  4229  0009C6  6B6A               	clrf	(??_efgtoa+3)& (0+255),b
  4230  0009C8  5167               	movf	??_efgtoa& (0+255),w,b
  4231  0009CA  2769               	addwf	(??_efgtoa+2)& (0+255),f,b
  4232  0009CC  5168               	movf	(??_efgtoa+1)& (0+255),w,b
  4233  0009CE  236A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4234  0009D0  516A               	movf	(??_efgtoa+3)& (0+255),w,b
  4235  0009D2  E10A               	bnz	u7900
  4236  0009D4  0E1A               	movlw	26
  4237  0009D6  5D69               	subwf	(??_efgtoa+2)& (0+255),w,b
  4238  0009D8  A0D8               	btfss	status,0,c
  4239  0009DA  EFF1  F004         	goto	u7901
  4240  0009DE  EFF4  F004         	goto	u7900
  4241  0009E2                     u7901:
  4242  0009E2  0E01               	movlw	1
  4243  0009E4  EFF5  F004         	goto	u7910
  4244  0009E8                     u7900:
  4245  0009E8  0E00               	movlw	0
  4246  0009EA                     u7910:
  4247  0009EA  6F72               	movwf	_efgtoa$1316& (0+255),b
  4248  0009EC  6B73               	clrf	(_efgtoa$1316+1)& (0+255),b
  4249  0009EE                     
  4250                           ; BSR set to: 0
  4251  0009EE  5172               	movf	_efgtoa$1316& (0+255),w,b
  4252  0009F0  1173               	iorwf	(_efgtoa$1316+1)& (0+255),w,b
  4253  0009F2  B4D8               	btfsc	status,2,c
  4254  0009F4  EFFE  F004         	goto	u7921
  4255  0009F8  EF00  F005         	goto	u7920
  4256  0009FC                     u7921:
  4257  0009FC  EF0E  F005         	goto	l6056
  4258  000A00                     u7920:
  4259  000A00                     
  4260                           ; BSR set to: 0
  4261                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 345:             
      +                          strcpy(&dbuf[n], "INF");
  4262  000A00  0E08               	movlw	low _dbuf
  4263  000A02  259E               	addwf	efgtoa@n& (0+255),w,b
  4264  000A04  6E02               	movwf	strcpy@dest^0,c
  4265  000A06  0E01               	movlw	high _dbuf
  4266  000A08  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4267  000A0A  6E03               	movwf	(strcpy@dest+1)^0,c
  4268  000A0C  0EC1               	movlw	low STR_25
  4269  000A0E  6E04               	movwf	strcpy@src^0,c
  4270  000A10  0E08               	movlw	high STR_25
  4271  000A12  6E05               	movwf	(strcpy@src+1)^0,c
  4272  000A14  ECFC  F023         	call	_strcpy	;wreg free
  4273                           
  4274                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 346:         } el
      +                          se {
  4275  000A18  EF1A  F005         	goto	l6058
  4276  000A1C                     l6056:
  4277                           
  4278                           ; BSR set to: 0
  4279                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 347:             
      +                          strcpy(&dbuf[n], "inf");
  4280  000A1C  0E08               	movlw	low _dbuf
  4281  000A1E  259E               	addwf	efgtoa@n& (0+255),w,b
  4282  000A20  6E02               	movwf	strcpy@dest^0,c
  4283  000A22  0E01               	movlw	high _dbuf
  4284  000A24  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4285  000A26  6E03               	movwf	(strcpy@dest+1)^0,c
  4286  000A28  0EC9               	movlw	low STR_26
  4287  000A2A  6E04               	movwf	strcpy@src^0,c
  4288  000A2C  0E08               	movlw	high STR_26
  4289  000A2E  6E05               	movwf	(strcpy@src+1)^0,c
  4290  000A30  ECFC  F023         	call	_strcpy	;wreg free
  4291  000A34                     l6058:
  4292                           
  4293                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 349:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  4294  000A34  0100               	movlb	0	; () banked
  4295  000A36  0EFD               	movlw	253
  4296  000A38  278B               	addwf	efgtoa@w& (0+255),f,b
  4297  000A3A  0EFF               	movlw	255
  4298  000A3C  238C               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4299  000A3E                     l6060:
  4300                           
  4301                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 350:         retu
      +                          rn pad(fp, &dbuf[0], w);
  4302  000A3E  C060  F012         	movff	efgtoa@fp,pad@fp
  4303  000A42  C061  F013         	movff	efgtoa@fp+1,pad@fp+1
  4304  000A46  0E08               	movlw	low _dbuf
  4305  000A48  6E14               	movwf	pad@buf^0,c
  4306  000A4A  0E01               	movlw	high _dbuf
  4307  000A4C  6E15               	movwf	(pad@buf+1)^0,c
  4308  000A4E  C08B  F016         	movff	efgtoa@w,pad@p
  4309  000A52  C08C  F017         	movff	efgtoa@w+1,pad@p+1
  4310  000A56  ECD8  F020         	call	_pad	;wreg free
  4311  000A5A  C012  F060         	movff	?_pad,?_efgtoa
  4312  000A5E  C013  F061         	movff	?_pad+1,?_efgtoa+1
  4313  000A62  EF43  F00A         	goto	l978
  4314  000A66                     l6064:
  4315                           
  4316                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 353:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4317  000A66  C098  F002         	movff	efgtoa@g,___fpclassifyf@x
  4318  000A6A  C099  F003         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4319  000A6E  C09A  F004         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4320  000A72  C09B  F005         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4321  000A76  EC1C  F01F         	call	___fpclassifyf	;wreg free
  4322  000A7A  5002               	movf	?___fpclassifyf^0,w,c
  4323  000A7C  1003               	iorwf	(?___fpclassifyf+1)^0,w,c
  4324  000A7E  A4D8               	btfss	status,2,c
  4325  000A80  EF44  F005         	goto	u7931
  4326  000A84  EF46  F005         	goto	u7930
  4327  000A88                     u7931:
  4328  000A88  EF86  F005         	goto	l6082
  4329  000A8C                     u7930:
  4330  000A8C  0EBF               	movlw	191
  4331  000A8E  0100               	movlb	0	; () banked
  4332  000A90  6F67               	movwf	??_efgtoa& (0+255),b
  4333  000A92  0EFF               	movlw	255
  4334  000A94  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  4335  000A96  5166               	movf	efgtoa@c& (0+255),w,b
  4336  000A98  6F69               	movwf	(??_efgtoa+2)& (0+255),b
  4337  000A9A  6B6A               	clrf	(??_efgtoa+3)& (0+255),b
  4338  000A9C  5167               	movf	??_efgtoa& (0+255),w,b
  4339  000A9E  2769               	addwf	(??_efgtoa+2)& (0+255),f,b
  4340  000AA0  5168               	movf	(??_efgtoa+1)& (0+255),w,b
  4341  000AA2  236A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4342  000AA4  516A               	movf	(??_efgtoa+3)& (0+255),w,b
  4343  000AA6  E10A               	bnz	u7940
  4344  000AA8  0E1A               	movlw	26
  4345  000AAA  5D69               	subwf	(??_efgtoa+2)& (0+255),w,b
  4346  000AAC  A0D8               	btfss	status,0,c
  4347  000AAE  EF5B  F005         	goto	u7941
  4348  000AB2  EF5E  F005         	goto	u7940
  4349  000AB6                     u7941:
  4350  000AB6  0E01               	movlw	1
  4351  000AB8  EF5F  F005         	goto	u7950
  4352  000ABC                     u7940:
  4353  000ABC  0E00               	movlw	0
  4354  000ABE                     u7950:
  4355  000ABE  6F74               	movwf	_efgtoa$1320& (0+255),b
  4356  000AC0  6B75               	clrf	(_efgtoa$1320+1)& (0+255),b
  4357  000AC2                     
  4358                           ; BSR set to: 0
  4359  000AC2  5174               	movf	_efgtoa$1320& (0+255),w,b
  4360  000AC4  1175               	iorwf	(_efgtoa$1320+1)& (0+255),w,b
  4361  000AC6  B4D8               	btfsc	status,2,c
  4362  000AC8  EF68  F005         	goto	u7961
  4363  000ACC  EF6A  F005         	goto	u7960
  4364  000AD0                     u7961:
  4365  000AD0  EF78  F005         	goto	l6074
  4366  000AD4                     u7960:
  4367  000AD4                     
  4368                           ; BSR set to: 0
  4369                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 354:             
      +                          strcpy(&dbuf[n], "NAN");
  4370  000AD4  0E08               	movlw	low _dbuf
  4371  000AD6  259E               	addwf	efgtoa@n& (0+255),w,b
  4372  000AD8  6E02               	movwf	strcpy@dest^0,c
  4373  000ADA  0E01               	movlw	high _dbuf
  4374  000ADC  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4375  000ADE  6E03               	movwf	(strcpy@dest+1)^0,c
  4376  000AE0  0EC5               	movlw	low STR_29
  4377  000AE2  6E04               	movwf	strcpy@src^0,c
  4378  000AE4  0E08               	movlw	high STR_29
  4379  000AE6  6E05               	movwf	(strcpy@src+1)^0,c
  4380  000AE8  ECFC  F023         	call	_strcpy	;wreg free
  4381                           
  4382                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 355:         } el
      +                          se {
  4383  000AEC  EF1A  F005         	goto	l6058
  4384  000AF0                     l6074:
  4385                           
  4386                           ; BSR set to: 0
  4387                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 356:             
      +                          strcpy(&dbuf[n], "nan");
  4388  000AF0  0E08               	movlw	low _dbuf
  4389  000AF2  259E               	addwf	efgtoa@n& (0+255),w,b
  4390  000AF4  6E02               	movwf	strcpy@dest^0,c
  4391  000AF6  0E01               	movlw	high _dbuf
  4392  000AF8  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4393  000AFA  6E03               	movwf	(strcpy@dest+1)^0,c
  4394  000AFC  0ECD               	movlw	low STR_30
  4395  000AFE  6E04               	movwf	strcpy@src^0,c
  4396  000B00  0E08               	movlw	high STR_30
  4397  000B02  6E05               	movwf	(strcpy@src+1)^0,c
  4398  000B04  ECFC  F023         	call	_strcpy	;wreg free
  4399  000B08  EF1A  F005         	goto	l6058
  4400  000B0C                     l6082:
  4401                           
  4402                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 363:     u = 1.0;
  4403  000B0C  0E00               	movlw	0
  4404  000B0E  0100               	movlb	0	; () banked
  4405  000B10  6FA0               	movwf	efgtoa@u& (0+255),b
  4406  000B12  0E00               	movlw	0
  4407  000B14  6FA1               	movwf	(efgtoa@u+1)& (0+255),b
  4408  000B16  0E80               	movlw	128
  4409  000B18  6FA2               	movwf	(efgtoa@u+2)& (0+255),b
  4410  000B1A  0E3F               	movlw	63
  4411  000B1C  6FA3               	movwf	(efgtoa@u+3)& (0+255),b
  4412                           
  4413                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 364:     e = 0;
  4414  000B1E  0E00               	movlw	0
  4415  000B20  6F9D               	movwf	(efgtoa@e+1)& (0+255),b
  4416  000B22  0E00               	movlw	0
  4417  000B24  6F9C               	movwf	efgtoa@e& (0+255),b
  4418  000B26                     
  4419                           ; BSR set to: 0
  4420                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 365:     if (!(g 
      +                          == 0.0)) {
  4421  000B26  C098  F002         	movff	efgtoa@g,___fleq@ff1
  4422  000B2A  C099  F003         	movff	efgtoa@g+1,___fleq@ff1+1
  4423  000B2E  C09A  F004         	movff	efgtoa@g+2,___fleq@ff1+2
  4424  000B32  C09B  F005         	movff	efgtoa@g+3,___fleq@ff1+3
  4425  000B36  0E00               	movlw	0
  4426  000B38  6E06               	movwf	___fleq@ff2^0,c
  4427  000B3A  0E00               	movlw	0
  4428  000B3C  6E07               	movwf	(___fleq@ff2+1)^0,c
  4429  000B3E  0E00               	movlw	0
  4430  000B40  6E08               	movwf	(___fleq@ff2+2)^0,c
  4431  000B42  0E00               	movlw	0
  4432  000B44  6E09               	movwf	(___fleq@ff2+3)^0,c
  4433  000B46  EC4B  F022         	call	___fleq	;wreg free
  4434  000B4A  B0D8               	btfsc	status,0,c
  4435  000B4C  EFAA  F005         	goto	u7971
  4436  000B50  EFAC  F005         	goto	u7970
  4437  000B54                     u7971:
  4438  000B54  EF2F  F006         	goto	l6100
  4439  000B58                     u7970:
  4440  000B58  EFCB  F005         	goto	l6092
  4441  000B5C                     l6088:
  4442                           
  4443                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 367:             
      +                          u = u*10.0;
  4444  000B5C  C0A0  F010         	movff	efgtoa@u,___flmul@b
  4445  000B60  C0A1  F011         	movff	efgtoa@u+1,___flmul@b+1
  4446  000B64  C0A2  F012         	movff	efgtoa@u+2,___flmul@b+2
  4447  000B68  C0A3  F013         	movff	efgtoa@u+3,___flmul@b+3
  4448  000B6C  0E00               	movlw	0
  4449  000B6E  6E14               	movwf	___flmul@a^0,c
  4450  000B70  0E00               	movlw	0
  4451  000B72  6E15               	movwf	(___flmul@a+1)^0,c
  4452  000B74  0E20               	movlw	32
  4453  000B76  6E16               	movwf	(___flmul@a+2)^0,c
  4454  000B78  0E41               	movlw	65
  4455  000B7A  6E17               	movwf	(___flmul@a+3)^0,c
  4456  000B7C  EC7E  F013         	call	___flmul	;wreg free
  4457  000B80  C010  F0A0         	movff	?___flmul,efgtoa@u
  4458  000B84  C011  F0A1         	movff	?___flmul+1,efgtoa@u+1
  4459  000B88  C012  F0A2         	movff	?___flmul+2,efgtoa@u+2
  4460  000B8C  C013  F0A3         	movff	?___flmul+3,efgtoa@u+3
  4461  000B90                     
  4462                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 368:             
      +                          ++e;
  4463  000B90  0100               	movlb	0	; () banked
  4464  000B92  4B9C               	infsnz	efgtoa@e& (0+255),f,b
  4465  000B94  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
  4466  000B96                     l6092:
  4467                           
  4468                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 366:         whil
      +                          e (!(g < (u*10.0))) {
  4469  000B96  C098  F029         	movff	efgtoa@g,___flge@ff1
  4470  000B9A  C099  F02A         	movff	efgtoa@g+1,___flge@ff1+1
  4471  000B9E  C09A  F02B         	movff	efgtoa@g+2,___flge@ff1+2
  4472  000BA2  C09B  F02C         	movff	efgtoa@g+3,___flge@ff1+3
  4473  000BA6  0E00               	movlw	0
  4474  000BA8  6E14               	movwf	___flmul@a^0,c
  4475  000BAA  0E00               	movlw	0
  4476  000BAC  6E15               	movwf	(___flmul@a+1)^0,c
  4477  000BAE  0E20               	movlw	32
  4478  000BB0  6E16               	movwf	(___flmul@a+2)^0,c
  4479  000BB2  0E41               	movlw	65
  4480  000BB4  6E17               	movwf	(___flmul@a+3)^0,c
  4481  000BB6  C0A0  F010         	movff	efgtoa@u,___flmul@b
  4482  000BBA  C0A1  F011         	movff	efgtoa@u+1,___flmul@b+1
  4483  000BBE  C0A2  F012         	movff	efgtoa@u+2,___flmul@b+2
  4484  000BC2  C0A3  F013         	movff	efgtoa@u+3,___flmul@b+3
  4485  000BC6  EC7E  F013         	call	___flmul	;wreg free
  4486  000BCA  C010  F02D         	movff	?___flmul,___flge@ff2
  4487  000BCE  C011  F02E         	movff	?___flmul+1,___flge@ff2+1
  4488  000BD2  C012  F02F         	movff	?___flmul+2,___flge@ff2+2
  4489  000BD6  C013  F030         	movff	?___flmul+3,___flge@ff2+3
  4490  000BDA  EC9A  F01E         	call	___flge	;wreg free
  4491  000BDE  B0D8               	btfsc	status,0,c
  4492  000BE0  EFF4  F005         	goto	u7981
  4493  000BE4  EFF6  F005         	goto	u7980
  4494  000BE8                     u7981:
  4495  000BE8  EFAE  F005         	goto	l6088
  4496  000BEC                     u7980:
  4497  000BEC  EF16  F006         	goto	l6098
  4498  000BF0                     l6094:
  4499                           
  4500                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 371:             
      +                          u = u/10.0;
  4501  000BF0  C0A0  F029         	movff	efgtoa@u,___fldiv@b
  4502  000BF4  C0A1  F02A         	movff	efgtoa@u+1,___fldiv@b+1
  4503  000BF8  C0A2  F02B         	movff	efgtoa@u+2,___fldiv@b+2
  4504  000BFC  C0A3  F02C         	movff	efgtoa@u+3,___fldiv@b+3
  4505  000C00  0E00               	movlw	0
  4506  000C02  6E2D               	movwf	___fldiv@a^0,c
  4507  000C04  0E00               	movlw	0
  4508  000C06  6E2E               	movwf	(___fldiv@a+1)^0,c
  4509  000C08  0E20               	movlw	32
  4510  000C0A  6E2F               	movwf	(___fldiv@a+2)^0,c
  4511  000C0C  0E41               	movlw	65
  4512  000C0E  6E30               	movwf	(___fldiv@a+3)^0,c
  4513  000C10  EC93  F015         	call	___fldiv	;wreg free
  4514  000C14  C029  F0A0         	movff	?___fldiv,efgtoa@u
  4515  000C18  C02A  F0A1         	movff	?___fldiv+1,efgtoa@u+1
  4516  000C1C  C02B  F0A2         	movff	?___fldiv+2,efgtoa@u+2
  4517  000C20  C02C  F0A3         	movff	?___fldiv+3,efgtoa@u+3
  4518  000C24                     
  4519                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 372:             
      +                          --e;
  4520  000C24  0100               	movlb	0	; () banked
  4521  000C26  079C               	decf	efgtoa@e& (0+255),f,b
  4522  000C28  A0D8               	btfss	status,0,c
  4523  000C2A  079D               	decf	(efgtoa@e+1)& (0+255),f,b
  4524  000C2C                     l6098:
  4525                           
  4526                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 370:         whil
      +                          e (g < u) {
  4527  000C2C  C098  F029         	movff	efgtoa@g,___flge@ff1
  4528  000C30  C099  F02A         	movff	efgtoa@g+1,___flge@ff1+1
  4529  000C34  C09A  F02B         	movff	efgtoa@g+2,___flge@ff1+2
  4530  000C38  C09B  F02C         	movff	efgtoa@g+3,___flge@ff1+3
  4531  000C3C  C0A0  F02D         	movff	efgtoa@u,___flge@ff2
  4532  000C40  C0A1  F02E         	movff	efgtoa@u+1,___flge@ff2+1
  4533  000C44  C0A2  F02F         	movff	efgtoa@u+2,___flge@ff2+2
  4534  000C48  C0A3  F030         	movff	efgtoa@u+3,___flge@ff2+3
  4535  000C4C  EC9A  F01E         	call	___flge	;wreg free
  4536  000C50  A0D8               	btfss	status,0,c
  4537  000C52  EF2D  F006         	goto	u7991
  4538  000C56  EF2F  F006         	goto	u7990
  4539  000C5A                     u7991:
  4540  000C5A  EFF8  F005         	goto	l6094
  4541  000C5E                     u7990:
  4542  000C5E                     l6100:
  4543                           
  4544                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 377:     mode = t
      +                          olower((int)c);
  4545  000C5E  C066  F008         	movff	efgtoa@c,tolower@c
  4546  000C62  6A09               	clrf	(tolower@c+1)^0,c
  4547  000C64  ECCC  F023         	call	_tolower	;wreg free
  4548  000C68  5008               	movf	?_tolower^0,w,c
  4549  000C6A  0100               	movlb	0	; () banked
  4550  000C6C  6F8D               	movwf	efgtoa@mode& (0+255),b
  4551  000C6E                     
  4552                           ; BSR set to: 0
  4553                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 378:     nmode = 
      +                          mode;
  4554  000C6E  C08D  F08A         	movff	efgtoa@mode,efgtoa@nmode
  4555  000C72                     
  4556                           ; BSR set to: 0
  4557                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 379:     if (mode
      +                           == 'g') {
  4558  000C72  0E67               	movlw	103
  4559  000C74  198D               	xorwf	efgtoa@mode& (0+255),w,b
  4560  000C76  A4D8               	btfss	status,2,c
  4561  000C78  EF40  F006         	goto	u8001
  4562  000C7C  EF42  F006         	goto	u8000
  4563  000C80                     u8001:
  4564  000C80  EF68  F006         	goto	l6114
  4565  000C84                     u8000:
  4566  000C84                     
  4567                           ; BSR set to: 0
  4568                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 380:   if (prec =
      +                          = 0) {
  4569  000C84  51F2               	movf	_prec& (0+255),w,b
  4570  000C86  11F3               	iorwf	(_prec+1)& (0+255),w,b
  4571  000C88  A4D8               	btfss	status,2,c
  4572  000C8A  EF49  F006         	goto	u8011
  4573  000C8E  EF4B  F006         	goto	u8010
  4574  000C92                     u8011:
  4575  000C92  EF4F  F006         	goto	l6110
  4576  000C96                     u8010:
  4577  000C96                     
  4578                           ; BSR set to: 0
  4579                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 381:    prec = 1;
  4580  000C96  0E00               	movlw	0
  4581  000C98  6FF3               	movwf	(_prec+1)& (0+255),b
  4582  000C9A  0E01               	movlw	1
  4583  000C9C  6FF2               	movwf	_prec& (0+255),b
  4584  000C9E                     l6110:
  4585                           
  4586                           ; BSR set to: 0
  4587                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 383:         p = 
      +                          (0 < prec) ? prec : 6;
  4588  000C9E  BFF3               	btfsc	(_prec+1)& (0+255),7,b
  4589  000CA0  EF5C  F006         	goto	u8020
  4590  000CA4  51F3               	movf	(_prec+1)& (0+255),w,b
  4591  000CA6  E106               	bnz	u8021
  4592  000CA8  05F2               	decf	_prec& (0+255),w,b
  4593  000CAA  B0D8               	btfsc	status,0,c
  4594  000CAC  EF5A  F006         	goto	u8021
  4595  000CB0  EF5C  F006         	goto	u8020
  4596  000CB4                     u8021:
  4597  000CB4  EF62  F006         	goto	l996
  4598  000CB8                     u8020:
  4599  000CB8                     l6112:
  4600                           
  4601                           ; BSR set to: 0
  4602  000CB8  0E00               	movlw	0
  4603  000CBA  6F89               	movwf	(efgtoa@p+1)& (0+255),b
  4604  000CBC  0E06               	movlw	6
  4605  000CBE  6F88               	movwf	efgtoa@p& (0+255),b
  4606  000CC0  EF71  F006         	goto	l6120
  4607  000CC4                     l996:
  4608                           
  4609                           ; BSR set to: 0
  4610  000CC4  C0F2  F088         	movff	_prec,efgtoa@p
  4611  000CC8  C0F3  F089         	movff	_prec+1,efgtoa@p+1
  4612  000CCC  EF71  F006         	goto	l6120
  4613  000CD0                     l6114:
  4614                           
  4615                           ; BSR set to: 0
  4616                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 385:         p = 
      +                          (prec < 0) ? 6 : prec;
  4617  000CD0  BFF3               	btfsc	(_prec+1)& (0+255),7,b
  4618  000CD2  EF6D  F006         	goto	u8031
  4619  000CD6  EF6F  F006         	goto	u8030
  4620  000CDA                     u8031:
  4621  000CDA  EF5C  F006         	goto	l6112
  4622  000CDE                     u8030:
  4623  000CDE  EF62  F006         	goto	l996
  4624  000CE2                     l6120:
  4625                           
  4626                           ; BSR set to: 0
  4627                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 389:     if (mode
      +                           == 'g') {
  4628  000CE2  0E67               	movlw	103
  4629  000CE4  198D               	xorwf	efgtoa@mode& (0+255),w,b
  4630  000CE6  A4D8               	btfss	status,2,c
  4631  000CE8  EF78  F006         	goto	u8041
  4632  000CEC  EF7A  F006         	goto	u8040
  4633  000CF0                     u8041:
  4634  000CF0  EFA9  F006         	goto	l6130
  4635  000CF4                     u8040:
  4636  000CF4                     
  4637                           ; BSR set to: 0
  4638                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 390:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  4639  000CF4  AF9D               	btfss	(efgtoa@e+1)& (0+255),7,b
  4640  000CF6  EF88  F006         	goto	u8050
  4641  000CFA  0EFC               	movlw	252
  4642  000CFC  5D9C               	subwf	efgtoa@e& (0+255),w,b
  4643  000CFE  0EFF               	movlw	255
  4644  000D00  599D               	subwfb	(efgtoa@e+1)& (0+255),w,b
  4645  000D02  A0D8               	btfss	status,0,c
  4646  000D04  EF86  F006         	goto	u8051
  4647  000D08  EF88  F006         	goto	u8050
  4648  000D0C                     u8051:
  4649  000D0C  EFA7  F006         	goto	l6128
  4650  000D10                     u8050:
  4651  000D10                     
  4652                           ; BSR set to: 0
  4653  000D10  0EFF               	movlw	255
  4654  000D12  6F67               	movwf	??_efgtoa& (0+255),b
  4655  000D14  0EFF               	movlw	255
  4656  000D16  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  4657  000D18  C088  F069         	movff	efgtoa@p,??_efgtoa+2
  4658  000D1C  C089  F06A         	movff	efgtoa@p+1,??_efgtoa+3
  4659  000D20  5167               	movf	??_efgtoa& (0+255),w,b
  4660  000D22  2769               	addwf	(??_efgtoa+2)& (0+255),f,b
  4661  000D24  5168               	movf	(??_efgtoa+1)& (0+255),w,b
  4662  000D26  236A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4663  000D28  519C               	movf	efgtoa@e& (0+255),w,b
  4664  000D2A  5D69               	subwf	(??_efgtoa+2)& (0+255),w,b
  4665  000D2C  516A               	movf	(??_efgtoa+3)& (0+255),w,b
  4666  000D2E  0A80               	xorlw	128
  4667  000D30  6F6B               	movwf	(??_efgtoa+4)& (0+255),b
  4668  000D32  519D               	movf	(efgtoa@e+1)& (0+255),w,b
  4669  000D34  0A80               	xorlw	128
  4670  000D36  596B               	subwfb	(??_efgtoa+4)& (0+255),w,b
  4671  000D38  A0D8               	btfss	status,0,c
  4672  000D3A  EFA1  F006         	goto	u8061
  4673  000D3E  EFA3  F006         	goto	u8060
  4674  000D42                     u8061:
  4675  000D42  EFA7  F006         	goto	l6128
  4676  000D46                     u8060:
  4677  000D46                     
  4678                           ; BSR set to: 0
  4679                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 391:             
      +                          nmode = 'f';
  4680  000D46  0E66               	movlw	102
  4681  000D48  6F8A               	movwf	efgtoa@nmode& (0+255),b
  4682                           
  4683                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 392:         } el
      +                          se {
  4684  000D4A  EFA9  F006         	goto	l6130
  4685  000D4E                     l6128:
  4686                           
  4687                           ; BSR set to: 0
  4688                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 393:             
      +                          nmode = 'e';
  4689  000D4E  0E65               	movlw	101
  4690  000D50  6F8A               	movwf	efgtoa@nmode& (0+255),b
  4691  000D52                     l6130:
  4692                           
  4693                           ; BSR set to: 0
  4694                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 398:     m = p;
  4695  000D52  C088  F080         	movff	efgtoa@p,efgtoa@m
  4696  000D56  C089  F081         	movff	efgtoa@p+1,efgtoa@m+1
  4697  000D5A                     
  4698                           ; BSR set to: 0
  4699                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 399:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  4700  000D5A  0E67               	movlw	103
  4701  000D5C  198D               	xorwf	efgtoa@mode& (0+255),w,b
  4702  000D5E  A4D8               	btfss	status,2,c
  4703  000D60  EFB4  F006         	goto	u8071
  4704  000D64  EFB6  F006         	goto	u8070
  4705  000D68                     u8071:
  4706  000D68  EFC6  F006         	goto	l6138
  4707  000D6C                     u8070:
  4708  000D6C                     
  4709                           ; BSR set to: 0
  4710  000D6C  0E66               	movlw	102
  4711  000D6E  198A               	xorwf	efgtoa@nmode& (0+255),w,b
  4712  000D70  A4D8               	btfss	status,2,c
  4713  000D72  EFBD  F006         	goto	u8081
  4714  000D76  EFBF  F006         	goto	u8080
  4715  000D7A                     u8081:
  4716  000D7A  EFC8  F006         	goto	l6140
  4717  000D7E                     u8080:
  4718  000D7E                     
  4719                           ; BSR set to: 0
  4720  000D7E  BF9D               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4721  000D80  EFC6  F006         	goto	u8090
  4722  000D84  EFC4  F006         	goto	u8091
  4723  000D88                     u8091:
  4724  000D88  EFC8  F006         	goto	l6140
  4725  000D8C                     u8090:
  4726  000D8C                     l6138:
  4727                           
  4728                           ; BSR set to: 0
  4729                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 400:         ++m;
  4730  000D8C  4B80               	infsnz	efgtoa@m& (0+255),f,b
  4731  000D8E  2B81               	incf	(efgtoa@m+1)& (0+255),f,b
  4732  000D90                     l6140:
  4733                           
  4734                           ; BSR set to: 0
  4735                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 404:     if (nmod
      +                          e == 'f') {
  4736  000D90  0E66               	movlw	102
  4737  000D92  198A               	xorwf	efgtoa@nmode& (0+255),w,b
  4738  000D94  A4D8               	btfss	status,2,c
  4739  000D96  EFCF  F006         	goto	u8101
  4740  000D9A  EFD1  F006         	goto	u8100
  4741  000D9E                     u8101:
  4742  000D9E  EFF1  F006         	goto	l6150
  4743  000DA2                     u8100:
  4744  000DA2                     
  4745                           ; BSR set to: 0
  4746                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 405:         if (
      +                          e < 0) {
  4747  000DA2  BF9D               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4748  000DA4  EFD8  F006         	goto	u8110
  4749  000DA8  EFD6  F006         	goto	u8111
  4750  000DAC                     u8111:
  4751  000DAC  EFE4  F006         	goto	l6146
  4752  000DB0                     u8110:
  4753  000DB0                     
  4754                           ; BSR set to: 0
  4755                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 406:             
      +                          u = 1.0;
  4756  000DB0  0E00               	movlw	0
  4757  000DB2  6FA0               	movwf	efgtoa@u& (0+255),b
  4758  000DB4  0E00               	movlw	0
  4759  000DB6  6FA1               	movwf	(efgtoa@u+1)& (0+255),b
  4760  000DB8  0E80               	movlw	128
  4761  000DBA  6FA2               	movwf	(efgtoa@u+2)& (0+255),b
  4762  000DBC  0E3F               	movlw	63
  4763  000DBE  6FA3               	movwf	(efgtoa@u+3)& (0+255),b
  4764                           
  4765                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 407:             
      +                          e = 0;
  4766  000DC0  0E00               	movlw	0
  4767  000DC2  6F9D               	movwf	(efgtoa@e+1)& (0+255),b
  4768  000DC4  0E00               	movlw	0
  4769  000DC6  6F9C               	movwf	efgtoa@e& (0+255),b
  4770  000DC8                     l6146:
  4771                           
  4772                           ; BSR set to: 0
  4773                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 409:         if (
      +                          !(mode == 'g')) {
  4774  000DC8  0E67               	movlw	103
  4775  000DCA  198D               	xorwf	efgtoa@mode& (0+255),w,b
  4776  000DCC  B4D8               	btfsc	status,2,c
  4777  000DCE  EFEB  F006         	goto	u8121
  4778  000DD2  EFED  F006         	goto	u8120
  4779  000DD6                     u8121:
  4780  000DD6  EFF1  F006         	goto	l6150
  4781  000DDA                     u8120:
  4782  000DDA                     
  4783                           ; BSR set to: 0
  4784                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 410:             
      +                          m += e;
  4785  000DDA  519C               	movf	efgtoa@e& (0+255),w,b
  4786  000DDC  2780               	addwf	efgtoa@m& (0+255),f,b
  4787  000DDE  519D               	movf	(efgtoa@e+1)& (0+255),w,b
  4788  000DE0  2381               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4789  000DE2                     l6150:
  4790                           
  4791                           ; BSR set to: 0
  4792                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 415:     i = 0;
  4793  000DE2  0E00               	movlw	0
  4794  000DE4  6F97               	movwf	(efgtoa@i+1)& (0+255),b
  4795  000DE6  0E00               	movlw	0
  4796  000DE8  6F96               	movwf	efgtoa@i& (0+255),b
  4797  000DEA                     
  4798                           ; BSR set to: 0
  4799                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 416:     h = g;
  4800  000DEA  C098  F08E         	movff	efgtoa@g,efgtoa@h
  4801  000DEE  C099  F08F         	movff	efgtoa@g+1,efgtoa@h+1
  4802  000DF2  C09A  F090         	movff	efgtoa@g+2,efgtoa@h+2
  4803  000DF6  C09B  F091         	movff	efgtoa@g+3,efgtoa@h+3
  4804  000DFA                     
  4805                           ; BSR set to: 0
  4806                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 417:     ou = u;
  4807  000DFA  C0A0  F06C         	movff	efgtoa@u,efgtoa@ou
  4808  000DFE  C0A1  F06D         	movff	efgtoa@u+1,efgtoa@ou+1
  4809  000E02  C0A2  F06E         	movff	efgtoa@u+2,efgtoa@ou+2
  4810  000E06  C0A3  F06F         	movff	efgtoa@u+3,efgtoa@ou+3
  4811                           
  4812                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  4813  000E0A  EF82  F007         	goto	l6164
  4814  000E0E                     l6156:
  4815                           
  4816                           ; BSR set to: 0
  4817                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 419:         l = 
      +                          floorf(h/u);
  4818  000E0E  C08E  F029         	movff	efgtoa@h,___fldiv@b
  4819  000E12  C08F  F02A         	movff	efgtoa@h+1,___fldiv@b+1
  4820  000E16  C090  F02B         	movff	efgtoa@h+2,___fldiv@b+2
  4821  000E1A  C091  F02C         	movff	efgtoa@h+3,___fldiv@b+3
  4822  000E1E  C0A0  F02D         	movff	efgtoa@u,___fldiv@a
  4823  000E22  C0A1  F02E         	movff	efgtoa@u+1,___fldiv@a+1
  4824  000E26  C0A2  F02F         	movff	efgtoa@u+2,___fldiv@a+2
  4825  000E2A  C0A3  F030         	movff	efgtoa@u+3,___fldiv@a+3
  4826  000E2E  EC93  F015         	call	___fldiv	;wreg free
  4827  000E32  C029  F042         	movff	?___fldiv,floorf@x
  4828  000E36  C02A  F043         	movff	?___fldiv+1,floorf@x+1
  4829  000E3A  C02B  F044         	movff	?___fldiv+2,floorf@x+2
  4830  000E3E  C02C  F045         	movff	?___fldiv+3,floorf@x+3
  4831  000E42  ECD2  F018         	call	_floorf	;wreg free
  4832  000E46  C042  F092         	movff	?_floorf,efgtoa@l
  4833  000E4A  C043  F093         	movff	?_floorf+1,efgtoa@l+1
  4834  000E4E  C044  F094         	movff	?_floorf+2,efgtoa@l+2
  4835  000E52  C045  F095         	movff	?_floorf+3,efgtoa@l+3
  4836                           
  4837                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 420:         d = 
      +                          (int)l;
  4838  000E56  C092  F052         	movff	efgtoa@l,___fltol@f1
  4839  000E5A  C093  F053         	movff	efgtoa@l+1,___fltol@f1+1
  4840  000E5E  C094  F054         	movff	efgtoa@l+2,___fltol@f1+2
  4841  000E62  C095  F055         	movff	efgtoa@l+3,___fltol@f1+3
  4842  000E66  EC17  F01E         	call	___fltol	;wreg free
  4843  000E6A  C052  F084         	movff	?___fltol,efgtoa@d
  4844  000E6E  C053  F085         	movff	?___fltol+1,efgtoa@d+1
  4845  000E72                     
  4846                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 421:         h -=
      +                           l*u;
  4847  000E72  C08E  F052         	movff	efgtoa@h,___flsub@b
  4848  000E76  C08F  F053         	movff	efgtoa@h+1,___flsub@b+1
  4849  000E7A  C090  F054         	movff	efgtoa@h+2,___flsub@b+2
  4850  000E7E  C091  F055         	movff	efgtoa@h+3,___flsub@b+3
  4851  000E82  C0A0  F014         	movff	efgtoa@u,___flmul@a
  4852  000E86  C0A1  F015         	movff	efgtoa@u+1,___flmul@a+1
  4853  000E8A  C0A2  F016         	movff	efgtoa@u+2,___flmul@a+2
  4854  000E8E  C0A3  F017         	movff	efgtoa@u+3,___flmul@a+3
  4855  000E92  C092  F010         	movff	efgtoa@l,___flmul@b
  4856  000E96  C093  F011         	movff	efgtoa@l+1,___flmul@b+1
  4857  000E9A  C094  F012         	movff	efgtoa@l+2,___flmul@b+2
  4858  000E9E  C095  F013         	movff	efgtoa@l+3,___flmul@b+3
  4859  000EA2  EC7E  F013         	call	___flmul	;wreg free
  4860  000EA6  C010  F056         	movff	?___flmul,___flsub@a
  4861  000EAA  C011  F057         	movff	?___flmul+1,___flsub@a+1
  4862  000EAE  C012  F058         	movff	?___flmul+2,___flsub@a+2
  4863  000EB2  C013  F059         	movff	?___flmul+3,___flsub@a+3
  4864  000EB6  ECA8  F024         	call	___flsub	;wreg free
  4865  000EBA  C052  F08E         	movff	?___flsub,efgtoa@h
  4866  000EBE  C053  F08F         	movff	?___flsub+1,efgtoa@h+1
  4867  000EC2  C054  F090         	movff	?___flsub+2,efgtoa@h+2
  4868  000EC6  C055  F091         	movff	?___flsub+3,efgtoa@h+3
  4869  000ECA                     
  4870                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 422:         u = 
      +                          u/10.0;
  4871  000ECA  C0A0  F029         	movff	efgtoa@u,___fldiv@b
  4872  000ECE  C0A1  F02A         	movff	efgtoa@u+1,___fldiv@b+1
  4873  000ED2  C0A2  F02B         	movff	efgtoa@u+2,___fldiv@b+2
  4874  000ED6  C0A3  F02C         	movff	efgtoa@u+3,___fldiv@b+3
  4875  000EDA  0E00               	movlw	0
  4876  000EDC  6E2D               	movwf	___fldiv@a^0,c
  4877  000EDE  0E00               	movlw	0
  4878  000EE0  6E2E               	movwf	(___fldiv@a+1)^0,c
  4879  000EE2  0E20               	movlw	32
  4880  000EE4  6E2F               	movwf	(___fldiv@a+2)^0,c
  4881  000EE6  0E41               	movlw	65
  4882  000EE8  6E30               	movwf	(___fldiv@a+3)^0,c
  4883  000EEA  EC93  F015         	call	___fldiv	;wreg free
  4884  000EEE  C029  F0A0         	movff	?___fldiv,efgtoa@u
  4885  000EF2  C02A  F0A1         	movff	?___fldiv+1,efgtoa@u+1
  4886  000EF6  C02B  F0A2         	movff	?___fldiv+2,efgtoa@u+2
  4887  000EFA  C02C  F0A3         	movff	?___fldiv+3,efgtoa@u+3
  4888  000EFE                     
  4889                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 423:         ++i;
  4890  000EFE  0100               	movlb	0	; () banked
  4891  000F00  4B96               	infsnz	efgtoa@i& (0+255),f,b
  4892  000F02  2B97               	incf	(efgtoa@i+1)& (0+255),f,b
  4893  000F04                     l6164:
  4894                           
  4895                           ; BSR set to: 0
  4896                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  4897  000F04  5180               	movf	efgtoa@m& (0+255),w,b
  4898  000F06  5D96               	subwf	efgtoa@i& (0+255),w,b
  4899  000F08  5197               	movf	(efgtoa@i+1)& (0+255),w,b
  4900  000F0A  0A80               	xorlw	128
  4901  000F0C  6F67               	movwf	??_efgtoa& (0+255),b
  4902  000F0E  5181               	movf	(efgtoa@m+1)& (0+255),w,b
  4903  000F10  0A80               	xorlw	128
  4904  000F12  5967               	subwfb	??_efgtoa& (0+255),w,b
  4905  000F14  A0D8               	btfss	status,0,c
  4906  000F16  EF8F  F007         	goto	u8131
  4907  000F1A  EF91  F007         	goto	u8130
  4908  000F1E                     u8131:
  4909  000F1E  EF07  F007         	goto	l6156
  4910  000F22                     u8130:
  4911  000F22                     
  4912                           ; BSR set to: 0
  4913                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 427:     l = u*5.
      +                          0;
  4914  000F22  C0A0  F010         	movff	efgtoa@u,___flmul@b
  4915  000F26  C0A1  F011         	movff	efgtoa@u+1,___flmul@b+1
  4916  000F2A  C0A2  F012         	movff	efgtoa@u+2,___flmul@b+2
  4917  000F2E  C0A3  F013         	movff	efgtoa@u+3,___flmul@b+3
  4918  000F32  0E00               	movlw	0
  4919  000F34  6E14               	movwf	___flmul@a^0,c
  4920  000F36  0E00               	movlw	0
  4921  000F38  6E15               	movwf	(___flmul@a+1)^0,c
  4922  000F3A  0EA0               	movlw	160
  4923  000F3C  6E16               	movwf	(___flmul@a+2)^0,c
  4924  000F3E  0E40               	movlw	64
  4925  000F40  6E17               	movwf	(___flmul@a+3)^0,c
  4926  000F42  EC7E  F013         	call	___flmul	;wreg free
  4927  000F46  C010  F092         	movff	?___flmul,efgtoa@l
  4928  000F4A  C011  F093         	movff	?___flmul+1,efgtoa@l+1
  4929  000F4E  C012  F094         	movff	?___flmul+2,efgtoa@l+2
  4930  000F52  C013  F095         	movff	?___flmul+3,efgtoa@l+3
  4931  000F56                     
  4932                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 428:     if (h < 
      +                          l) {
  4933  000F56  C08E  F029         	movff	efgtoa@h,___flge@ff1
  4934  000F5A  C08F  F02A         	movff	efgtoa@h+1,___flge@ff1+1
  4935  000F5E  C090  F02B         	movff	efgtoa@h+2,___flge@ff1+2
  4936  000F62  C091  F02C         	movff	efgtoa@h+3,___flge@ff1+3
  4937  000F66  C092  F02D         	movff	efgtoa@l,___flge@ff2
  4938  000F6A  C093  F02E         	movff	efgtoa@l+1,___flge@ff2+1
  4939  000F6E  C094  F02F         	movff	efgtoa@l+2,___flge@ff2+2
  4940  000F72  C095  F030         	movff	efgtoa@l+3,___flge@ff2+3
  4941  000F76  EC9A  F01E         	call	___flge	;wreg free
  4942  000F7A  B0D8               	btfsc	status,0,c
  4943  000F7C  EFC2  F007         	goto	u8141
  4944  000F80  EFC4  F007         	goto	u8140
  4945  000F84                     u8141:
  4946  000F84  EFCF  F007         	goto	l6172
  4947  000F88                     u8140:
  4948  000F88                     
  4949                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 429:         l = 
      +                          0.0;
  4950  000F88  0E00               	movlw	0
  4951  000F8A  0100               	movlb	0	; () banked
  4952  000F8C  6F92               	movwf	efgtoa@l& (0+255),b
  4953  000F8E  0E00               	movlw	0
  4954  000F90  6F93               	movwf	(efgtoa@l+1)& (0+255),b
  4955  000F92  0E00               	movlw	0
  4956  000F94  6F94               	movwf	(efgtoa@l+2)& (0+255),b
  4957  000F96  0E00               	movlw	0
  4958  000F98  6F95               	movwf	(efgtoa@l+3)& (0+255),b
  4959                           
  4960                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 430:     } else {
  4961  000F9A  EFF8  F007         	goto	l6178
  4962  000F9E                     l6172:
  4963                           
  4964                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 432:         if (
      +                          (h == l) && !(d % 2)) {
  4965  000F9E  C08E  F002         	movff	efgtoa@h,___fleq@ff1
  4966  000FA2  C08F  F003         	movff	efgtoa@h+1,___fleq@ff1+1
  4967  000FA6  C090  F004         	movff	efgtoa@h+2,___fleq@ff1+2
  4968  000FAA  C091  F005         	movff	efgtoa@h+3,___fleq@ff1+3
  4969  000FAE  C092  F006         	movff	efgtoa@l,___fleq@ff2
  4970  000FB2  C093  F007         	movff	efgtoa@l+1,___fleq@ff2+1
  4971  000FB6  C094  F008         	movff	efgtoa@l+2,___fleq@ff2+2
  4972  000FBA  C095  F009         	movff	efgtoa@l+3,___fleq@ff2+3
  4973  000FBE  EC4B  F022         	call	___fleq	;wreg free
  4974  000FC2  A0D8               	btfss	status,0,c
  4975  000FC4  EFE6  F007         	goto	u8151
  4976  000FC8  EFE8  F007         	goto	u8150
  4977  000FCC                     u8151:
  4978  000FCC  EFF8  F007         	goto	l6178
  4979  000FD0                     u8150:
  4980  000FD0  0100               	movlb	0	; () banked
  4981  000FD2  B184               	btfsc	efgtoa@d& (0+255),0,b
  4982  000FD4  EFEE  F007         	goto	u8161
  4983  000FD8  EFF0  F007         	goto	u8160
  4984  000FDC                     u8161:
  4985  000FDC  EFF8  F007         	goto	l6178
  4986  000FE0                     u8160:
  4987  000FE0                     
  4988                           ; BSR set to: 0
  4989                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 433:             
      +                          l = 0.0;
  4990  000FE0  0E00               	movlw	0
  4991  000FE2  6F92               	movwf	efgtoa@l& (0+255),b
  4992  000FE4  0E00               	movlw	0
  4993  000FE6  6F93               	movwf	(efgtoa@l+1)& (0+255),b
  4994  000FE8  0E00               	movlw	0
  4995  000FEA  6F94               	movwf	(efgtoa@l+2)& (0+255),b
  4996  000FEC  0E00               	movlw	0
  4997  000FEE  6F95               	movwf	(efgtoa@l+3)& (0+255),b
  4998  000FF0                     l6178:
  4999                           
  5000                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 438:     h = g + 
      +                          l;
  5001  000FF0  C098  F042         	movff	efgtoa@g,___fladd@b
  5002  000FF4  C099  F043         	movff	efgtoa@g+1,___fladd@b+1
  5003  000FF8  C09A  F044         	movff	efgtoa@g+2,___fladd@b+2
  5004  000FFC  C09B  F045         	movff	efgtoa@g+3,___fladd@b+3
  5005  001000  C092  F046         	movff	efgtoa@l,___fladd@a
  5006  001004  C093  F047         	movff	efgtoa@l+1,___fladd@a+1
  5007  001008  C094  F048         	movff	efgtoa@l+2,___fladd@a+2
  5008  00100C  C095  F049         	movff	efgtoa@l+3,___fladd@a+3
  5009  001010  EC1E  F011         	call	___fladd	;wreg free
  5010  001014  C042  F08E         	movff	?___fladd,efgtoa@h
  5011  001018  C043  F08F         	movff	?___fladd+1,efgtoa@h+1
  5012  00101C  C044  F090         	movff	?___fladd+2,efgtoa@h+2
  5013  001020  C045  F091         	movff	?___fladd+3,efgtoa@h+3
  5014  001024                     
  5015                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 441:     u = ou;
  5016  001024  C06C  F0A0         	movff	efgtoa@ou,efgtoa@u
  5017  001028  C06D  F0A1         	movff	efgtoa@ou+1,efgtoa@u+1
  5018  00102C  C06E  F0A2         	movff	efgtoa@ou+2,efgtoa@u+2
  5019  001030  C06F  F0A3         	movff	efgtoa@ou+3,efgtoa@u+3
  5020  001034                     
  5021                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 442:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  5022  001034  0E65               	movlw	101
  5023  001036  0100               	movlb	0	; () banked
  5024  001038  198A               	xorwf	efgtoa@nmode& (0+255),w,b
  5025  00103A  B4D8               	btfsc	status,2,c
  5026  00103C  EF22  F008         	goto	u8171
  5027  001040  EF24  F008         	goto	u8170
  5028  001044                     u8171:
  5029  001044  EF2A  F008         	goto	l6186
  5030  001048                     u8170:
  5031  001048                     
  5032                           ; BSR set to: 0
  5033  001048  C09C  F082         	movff	efgtoa@e,efgtoa@ne
  5034  00104C  C09D  F083         	movff	efgtoa@e+1,efgtoa@ne+1
  5035  001050  EF2E  F008         	goto	l1022
  5036  001054                     l6186:
  5037                           
  5038                           ; BSR set to: 0
  5039  001054  0E00               	movlw	0
  5040  001056  6F83               	movwf	(efgtoa@ne+1)& (0+255),b
  5041  001058  0E00               	movlw	0
  5042  00105A  6F82               	movwf	efgtoa@ne& (0+255),b
  5043  00105C                     l1022:
  5044                           
  5045                           ; BSR set to: 0
  5046                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 443:     pp = 0;
  5047  00105C  0E00               	movlw	0
  5048  00105E  6F7F               	movwf	(efgtoa@pp+1)& (0+255),b
  5049  001060  0E00               	movlw	0
  5050  001062  6F7E               	movwf	efgtoa@pp& (0+255),b
  5051                           
  5052                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 444:     t = 0;
  5053  001064  0E00               	movlw	0
  5054  001066  6F7D               	movwf	(efgtoa@t+1)& (0+255),b
  5055  001068  0E00               	movlw	0
  5056  00106A  6F7C               	movwf	efgtoa@t& (0+255),b
  5057                           
  5058                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 445:     i = 0;
  5059  00106C  0E00               	movlw	0
  5060  00106E  6F97               	movwf	(efgtoa@i+1)& (0+255),b
  5061  001070  0E00               	movlw	0
  5062  001072  6F96               	movwf	efgtoa@i& (0+255),b
  5063                           
  5064                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5065  001074  EF29  F009         	goto	l6236
  5066  001078                     l6188:
  5067                           
  5068                           ; BSR set to: 0
  5069                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 447:         l = 
      +                          floorf(h/u);
  5070  001078  C08E  F029         	movff	efgtoa@h,___fldiv@b
  5071  00107C  C08F  F02A         	movff	efgtoa@h+1,___fldiv@b+1
  5072  001080  C090  F02B         	movff	efgtoa@h+2,___fldiv@b+2
  5073  001084  C091  F02C         	movff	efgtoa@h+3,___fldiv@b+3
  5074  001088  C0A0  F02D         	movff	efgtoa@u,___fldiv@a
  5075  00108C  C0A1  F02E         	movff	efgtoa@u+1,___fldiv@a+1
  5076  001090  C0A2  F02F         	movff	efgtoa@u+2,___fldiv@a+2
  5077  001094  C0A3  F030         	movff	efgtoa@u+3,___fldiv@a+3
  5078  001098  EC93  F015         	call	___fldiv	;wreg free
  5079  00109C  C029  F042         	movff	?___fldiv,floorf@x
  5080  0010A0  C02A  F043         	movff	?___fldiv+1,floorf@x+1
  5081  0010A4  C02B  F044         	movff	?___fldiv+2,floorf@x+2
  5082  0010A8  C02C  F045         	movff	?___fldiv+3,floorf@x+3
  5083  0010AC  ECD2  F018         	call	_floorf	;wreg free
  5084  0010B0  C042  F092         	movff	?_floorf,efgtoa@l
  5085  0010B4  C043  F093         	movff	?_floorf+1,efgtoa@l+1
  5086  0010B8  C044  F094         	movff	?_floorf+2,efgtoa@l+2
  5087  0010BC  C045  F095         	movff	?_floorf+3,efgtoa@l+3
  5088                           
  5089                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 448:         d = 
      +                          (int)l;
  5090  0010C0  C092  F052         	movff	efgtoa@l,___fltol@f1
  5091  0010C4  C093  F053         	movff	efgtoa@l+1,___fltol@f1+1
  5092  0010C8  C094  F054         	movff	efgtoa@l+2,___fltol@f1+2
  5093  0010CC  C095  F055         	movff	efgtoa@l+3,___fltol@f1+3
  5094  0010D0  EC17  F01E         	call	___fltol	;wreg free
  5095  0010D4  C052  F084         	movff	?___fltol,efgtoa@d
  5096  0010D8  C053  F085         	movff	?___fltol+1,efgtoa@d+1
  5097  0010DC                     
  5098                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 449:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5099  0010DC  0100               	movlb	0	; () banked
  5100  0010DE  B9F4               	btfsc	_flags& (0+255),4,b
  5101  0010E0  EF74  F008         	goto	u8181
  5102  0010E4  EF76  F008         	goto	u8180
  5103  0010E8                     u8181:
  5104  0010E8  EF93  F008         	goto	l6200
  5105  0010EC                     u8180:
  5106  0010EC                     
  5107                           ; BSR set to: 0
  5108  0010EC  5184               	movf	efgtoa@d& (0+255),w,b
  5109  0010EE  1185               	iorwf	(efgtoa@d+1)& (0+255),w,b
  5110  0010F0  A4D8               	btfss	status,2,c
  5111  0010F2  EF7D  F008         	goto	u8191
  5112  0010F6  EF7F  F008         	goto	u8190
  5113  0010FA                     u8191:
  5114  0010FA  EF93  F008         	goto	l6200
  5115  0010FE                     u8190:
  5116  0010FE                     
  5117                           ; BSR set to: 0
  5118  0010FE  0E67               	movlw	103
  5119  001100  198D               	xorwf	efgtoa@mode& (0+255),w,b
  5120  001102  A4D8               	btfss	status,2,c
  5121  001104  EF86  F008         	goto	u8201
  5122  001108  EF88  F008         	goto	u8200
  5123  00110C                     u8201:
  5124  00110C  EF93  F008         	goto	l6200
  5125  001110                     u8200:
  5126  001110                     
  5127                           ; BSR set to: 0
  5128  001110  BF83               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5129  001112  EF8F  F008         	goto	u8210
  5130  001116  EF8D  F008         	goto	u8211
  5131  00111A                     u8211:
  5132  00111A  EF93  F008         	goto	l6200
  5133  00111E                     u8210:
  5134  00111E                     
  5135                           ; BSR set to: 0
  5136                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 450:             
      +                          ++t;
  5137  00111E  4B7C               	infsnz	efgtoa@t& (0+255),f,b
  5138  001120  2B7D               	incf	(efgtoa@t+1)& (0+255),f,b
  5139                           
  5140                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 451:         } el
      +                          se {
  5141  001122  EFDD  F008         	goto	l6228
  5142  001126                     l6200:
  5143                           
  5144                           ; BSR set to: 0
  5145                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 452:             
      +                          if (!pp && (ne < 0)) {
  5146  001126  517E               	movf	efgtoa@pp& (0+255),w,b
  5147  001128  117F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5148  00112A  A4D8               	btfss	status,2,c
  5149  00112C  EF9A  F008         	goto	u8221
  5150  001130  EF9C  F008         	goto	u8220
  5151  001134                     u8221:
  5152  001134  EFC6  F008         	goto	l6220
  5153  001138                     u8220:
  5154  001138                     
  5155                           ; BSR set to: 0
  5156  001138  BF83               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5157  00113A  EFA3  F008         	goto	u8230
  5158  00113E  EFA1  F008         	goto	u8231
  5159  001142                     u8231:
  5160  001142  EFC6  F008         	goto	l6220
  5161  001146                     u8230:
  5162  001146                     
  5163                           ; BSR set to: 0
  5164                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 453:             
      +                              dbuf[n++] = '.';
  5165  001146  0E08               	movlw	low _dbuf
  5166  001148  259E               	addwf	efgtoa@n& (0+255),w,b
  5167  00114A  6ED9               	movwf	fsr2l,c
  5168  00114C  0E01               	movlw	high _dbuf
  5169  00114E  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5170  001150  6EDA               	movwf	fsr2h,c
  5171  001152  0E2E               	movlw	46
  5172  001154  6EDF               	movwf	indf2,c
  5173  001156                     
  5174                           ; BSR set to: 0
  5175  001156  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  5176  001158  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  5177  00115A                     
  5178                           ; BSR set to: 0
  5179                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 454:             
      +                              --w;
  5180  00115A  078B               	decf	efgtoa@w& (0+255),f,b
  5181  00115C  A0D8               	btfss	status,0,c
  5182  00115E  078C               	decf	(efgtoa@w+1)& (0+255),f,b
  5183  001160                     
  5184                           ; BSR set to: 0
  5185                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 455:             
      +                              pp = 1;
  5186  001160  0E00               	movlw	0
  5187  001162  6F7F               	movwf	(efgtoa@pp+1)& (0+255),b
  5188  001164  0E01               	movlw	1
  5189  001166  6F7E               	movwf	efgtoa@pp& (0+255),b
  5190  001168  EFC6  F008         	goto	l6220
  5191  00116C                     l6212:
  5192                           
  5193                           ; BSR set to: 0
  5194                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 458:             
      +                              dbuf[n++] = '0';
  5195  00116C  0E08               	movlw	low _dbuf
  5196  00116E  259E               	addwf	efgtoa@n& (0+255),w,b
  5197  001170  6ED9               	movwf	fsr2l,c
  5198  001172  0E01               	movlw	high _dbuf
  5199  001174  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5200  001176  6EDA               	movwf	fsr2h,c
  5201  001178  0E30               	movlw	48
  5202  00117A  6EDF               	movwf	indf2,c
  5203  00117C                     
  5204                           ; BSR set to: 0
  5205  00117C  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  5206  00117E  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  5207  001180                     
  5208                           ; BSR set to: 0
  5209                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 459:             
      +                              --w;
  5210  001180  078B               	decf	efgtoa@w& (0+255),f,b
  5211  001182  A0D8               	btfss	status,0,c
  5212  001184  078C               	decf	(efgtoa@w+1)& (0+255),f,b
  5213  001186                     
  5214                           ; BSR set to: 0
  5215                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 460:             
      +                              --t;
  5216  001186  077C               	decf	efgtoa@t& (0+255),f,b
  5217  001188  A0D8               	btfss	status,0,c
  5218  00118A  077D               	decf	(efgtoa@t+1)& (0+255),f,b
  5219  00118C                     l6220:
  5220                           
  5221                           ; BSR set to: 0
  5222                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 457:             
      +                          while (t) {
  5223  00118C  517C               	movf	efgtoa@t& (0+255),w,b
  5224  00118E  117D               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5225  001190  A4D8               	btfss	status,2,c
  5226  001192  EFCD  F008         	goto	u8241
  5227  001196  EFCF  F008         	goto	u8240
  5228  00119A                     u8241:
  5229  00119A  EFB6  F008         	goto	l6212
  5230  00119E                     u8240:
  5231  00119E                     
  5232                           ; BSR set to: 0
  5233                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 462:             
      +                          dbuf[n++] = '0' + d;
  5234  00119E  0E08               	movlw	low _dbuf
  5235  0011A0  259E               	addwf	efgtoa@n& (0+255),w,b
  5236  0011A2  6ED9               	movwf	fsr2l,c
  5237  0011A4  0E01               	movlw	high _dbuf
  5238  0011A6  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5239  0011A8  6EDA               	movwf	fsr2h,c
  5240  0011AA  5184               	movf	efgtoa@d& (0+255),w,b
  5241  0011AC  0F30               	addlw	48
  5242  0011AE  6EDF               	movwf	indf2,c
  5243  0011B0                     
  5244                           ; BSR set to: 0
  5245  0011B0  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  5246  0011B2  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  5247  0011B4                     
  5248                           ; BSR set to: 0
  5249                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 463:             
      +                          --w;
  5250  0011B4  078B               	decf	efgtoa@w& (0+255),f,b
  5251  0011B6  A0D8               	btfss	status,0,c
  5252  0011B8  078C               	decf	(efgtoa@w+1)& (0+255),f,b
  5253  0011BA                     l6228:
  5254                           
  5255                           ; BSR set to: 0
  5256                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 465:         h -=
      +                           l*u;
  5257  0011BA  C08E  F052         	movff	efgtoa@h,___flsub@b
  5258  0011BE  C08F  F053         	movff	efgtoa@h+1,___flsub@b+1
  5259  0011C2  C090  F054         	movff	efgtoa@h+2,___flsub@b+2
  5260  0011C6  C091  F055         	movff	efgtoa@h+3,___flsub@b+3
  5261  0011CA  C0A0  F014         	movff	efgtoa@u,___flmul@a
  5262  0011CE  C0A1  F015         	movff	efgtoa@u+1,___flmul@a+1
  5263  0011D2  C0A2  F016         	movff	efgtoa@u+2,___flmul@a+2
  5264  0011D6  C0A3  F017         	movff	efgtoa@u+3,___flmul@a+3
  5265  0011DA  C092  F010         	movff	efgtoa@l,___flmul@b
  5266  0011DE  C093  F011         	movff	efgtoa@l+1,___flmul@b+1
  5267  0011E2  C094  F012         	movff	efgtoa@l+2,___flmul@b+2
  5268  0011E6  C095  F013         	movff	efgtoa@l+3,___flmul@b+3
  5269  0011EA  EC7E  F013         	call	___flmul	;wreg free
  5270  0011EE  C010  F056         	movff	?___flmul,___flsub@a
  5271  0011F2  C011  F057         	movff	?___flmul+1,___flsub@a+1
  5272  0011F6  C012  F058         	movff	?___flmul+2,___flsub@a+2
  5273  0011FA  C013  F059         	movff	?___flmul+3,___flsub@a+3
  5274  0011FE  ECA8  F024         	call	___flsub	;wreg free
  5275  001202  C052  F08E         	movff	?___flsub,efgtoa@h
  5276  001206  C053  F08F         	movff	?___flsub+1,efgtoa@h+1
  5277  00120A  C054  F090         	movff	?___flsub+2,efgtoa@h+2
  5278  00120E  C055  F091         	movff	?___flsub+3,efgtoa@h+3
  5279  001212                     
  5280                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 466:         u = 
      +                          u/10.0;
  5281  001212  C0A0  F029         	movff	efgtoa@u,___fldiv@b
  5282  001216  C0A1  F02A         	movff	efgtoa@u+1,___fldiv@b+1
  5283  00121A  C0A2  F02B         	movff	efgtoa@u+2,___fldiv@b+2
  5284  00121E  C0A3  F02C         	movff	efgtoa@u+3,___fldiv@b+3
  5285  001222  0E00               	movlw	0
  5286  001224  6E2D               	movwf	___fldiv@a^0,c
  5287  001226  0E00               	movlw	0
  5288  001228  6E2E               	movwf	(___fldiv@a+1)^0,c
  5289  00122A  0E20               	movlw	32
  5290  00122C  6E2F               	movwf	(___fldiv@a+2)^0,c
  5291  00122E  0E41               	movlw	65
  5292  001230  6E30               	movwf	(___fldiv@a+3)^0,c
  5293  001232  EC93  F015         	call	___fldiv	;wreg free
  5294  001236  C029  F0A0         	movff	?___fldiv,efgtoa@u
  5295  00123A  C02A  F0A1         	movff	?___fldiv+1,efgtoa@u+1
  5296  00123E  C02B  F0A2         	movff	?___fldiv+2,efgtoa@u+2
  5297  001242  C02C  F0A3         	movff	?___fldiv+3,efgtoa@u+3
  5298  001246                     
  5299                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 467:         --ne
      +                          ;
  5300  001246  0100               	movlb	0	; () banked
  5301  001248  0782               	decf	efgtoa@ne& (0+255),f,b
  5302  00124A  A0D8               	btfss	status,0,c
  5303  00124C  0783               	decf	(efgtoa@ne+1)& (0+255),f,b
  5304  00124E                     
  5305                           ; BSR set to: 0
  5306                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 468:         ++i;
  5307  00124E  4B96               	infsnz	efgtoa@i& (0+255),f,b
  5308  001250  2B97               	incf	(efgtoa@i+1)& (0+255),f,b
  5309  001252                     l6236:
  5310                           
  5311                           ; BSR set to: 0
  5312                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5313  001252  5180               	movf	efgtoa@m& (0+255),w,b
  5314  001254  5D96               	subwf	efgtoa@i& (0+255),w,b
  5315  001256  5197               	movf	(efgtoa@i+1)& (0+255),w,b
  5316  001258  0A80               	xorlw	128
  5317  00125A  6F67               	movwf	??_efgtoa& (0+255),b
  5318  00125C  5181               	movf	(efgtoa@m+1)& (0+255),w,b
  5319  00125E  0A80               	xorlw	128
  5320  001260  5967               	subwfb	??_efgtoa& (0+255),w,b
  5321  001262  B0D8               	btfsc	status,0,c
  5322  001264  EF36  F009         	goto	u8251
  5323  001268  EF38  F009         	goto	u8250
  5324  00126C                     u8251:
  5325  00126C  EF46  F009         	goto	l6240
  5326  001270                     u8250:
  5327  001270                     
  5328                           ; BSR set to: 0
  5329  001270  BF9F               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5330  001272  EF44  F009         	goto	u8261
  5331  001276  519F               	movf	(efgtoa@n+1)& (0+255),w,b
  5332  001278  E109               	bnz	u8260
  5333  00127A  0E4B               	movlw	75
  5334  00127C  5D9E               	subwf	efgtoa@n& (0+255),w,b
  5335  00127E  A0D8               	btfss	status,0,c
  5336  001280  EF44  F009         	goto	u8261
  5337  001284  EF46  F009         	goto	u8260
  5338  001288                     u8261:
  5339  001288  EF3C  F008         	goto	l6188
  5340  00128C                     u8260:
  5341  00128C                     l6240:
  5342                           
  5343                           ; BSR set to: 0
  5344                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 470:     if (!pp 
      +                          && (flags & (1 << 4))) {
  5345  00128C  517E               	movf	efgtoa@pp& (0+255),w,b
  5346  00128E  117F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5347  001290  A4D8               	btfss	status,2,c
  5348  001292  EF4D  F009         	goto	u8271
  5349  001296  EF4F  F009         	goto	u8270
  5350  00129A                     u8271:
  5351  00129A  EF60  F009         	goto	l6248
  5352  00129E                     u8270:
  5353  00129E                     
  5354                           ; BSR set to: 0
  5355  00129E  A9F4               	btfss	_flags& (0+255),4,b
  5356  0012A0  EF54  F009         	goto	u8281
  5357  0012A4  EF56  F009         	goto	u8280
  5358  0012A8                     u8281:
  5359  0012A8  EF60  F009         	goto	l6248
  5360  0012AC                     u8280:
  5361  0012AC                     
  5362                           ; BSR set to: 0
  5363                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 471:         dbuf
      +                          [n++] = '.';
  5364  0012AC  0E08               	movlw	low _dbuf
  5365  0012AE  259E               	addwf	efgtoa@n& (0+255),w,b
  5366  0012B0  6ED9               	movwf	fsr2l,c
  5367  0012B2  0E01               	movlw	high _dbuf
  5368  0012B4  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5369  0012B6  6EDA               	movwf	fsr2h,c
  5370  0012B8  0E2E               	movlw	46
  5371  0012BA  6EDF               	movwf	indf2,c
  5372  0012BC                     
  5373                           ; BSR set to: 0
  5374  0012BC  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  5375  0012BE  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  5376  0012C0                     l6248:
  5377                           
  5378                           ; BSR set to: 0
  5379                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 473:     dbuf[n] 
      +                          = '\0';
  5380  0012C0  0E08               	movlw	low _dbuf
  5381  0012C2  259E               	addwf	efgtoa@n& (0+255),w,b
  5382  0012C4  6ED9               	movwf	fsr2l,c
  5383  0012C6  0E01               	movlw	high _dbuf
  5384  0012C8  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5385  0012CA  6EDA               	movwf	fsr2h,c
  5386  0012CC  0E00               	movlw	0
  5387  0012CE  6EDF               	movwf	indf2,c
  5388  0012D0                     
  5389                           ; BSR set to: 0
  5390                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 476:     if (nmod
      +                          e == 'e') {
  5391  0012D0  0E65               	movlw	101
  5392  0012D2  198A               	xorwf	efgtoa@nmode& (0+255),w,b
  5393  0012D4  A4D8               	btfss	status,2,c
  5394  0012D6  EF6F  F009         	goto	u8291
  5395  0012DA  EF71  F009         	goto	u8290
  5396  0012DE                     u8291:
  5397  0012DE  EF1F  F005         	goto	l6060
  5398  0012E2                     u8290:
  5399  0012E2                     
  5400                           ; BSR set to: 0
  5401                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 477:         i = 
      +                          sizeof(dbuf) - 1;
  5402  0012E2  0E00               	movlw	0
  5403  0012E4  6F97               	movwf	(efgtoa@i+1)& (0+255),b
  5404  0012E6  0E4F               	movlw	79
  5405  0012E8  6F96               	movwf	efgtoa@i& (0+255),b
  5406  0012EA                     
  5407                           ; BSR set to: 0
  5408                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 478:         dbuf
      +                          [i] = '\0';
  5409  0012EA  0E08               	movlw	low _dbuf
  5410  0012EC  2596               	addwf	efgtoa@i& (0+255),w,b
  5411  0012EE  6ED9               	movwf	fsr2l,c
  5412  0012F0  0E01               	movlw	high _dbuf
  5413  0012F2  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5414  0012F4  6EDA               	movwf	fsr2h,c
  5415  0012F6  0E00               	movlw	0
  5416  0012F8  6EDF               	movwf	indf2,c
  5417  0012FA                     
  5418                           ; BSR set to: 0
  5419                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 479:         sign
      +                           = 0;
  5420  0012FA  0E00               	movlw	0
  5421  0012FC  6F87               	movwf	(efgtoa@sign+1)& (0+255),b
  5422  0012FE  0E00               	movlw	0
  5423  001300  6F86               	movwf	efgtoa@sign& (0+255),b
  5424  001302                     
  5425                           ; BSR set to: 0
  5426                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 480:         if (
      +                          e < 0) {
  5427  001302  BF9D               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5428  001304  EF88  F009         	goto	u8300
  5429  001308  EF86  F009         	goto	u8301
  5430  00130C                     u8301:
  5431  00130C  EF90  F009         	goto	l6264
  5432  001310                     u8300:
  5433  001310                     
  5434                           ; BSR set to: 0
  5435                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 481:             
      +                          sign = 1;
  5436  001310  0E00               	movlw	0
  5437  001312  6F87               	movwf	(efgtoa@sign+1)& (0+255),b
  5438  001314  0E01               	movlw	1
  5439  001316  6F86               	movwf	efgtoa@sign& (0+255),b
  5440  001318                     
  5441                           ; BSR set to: 0
  5442                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 482:             
      +                          e = -e;
  5443  001318  6D9C               	negf	efgtoa@e& (0+255),b
  5444  00131A  1F9D               	comf	(efgtoa@e+1)& (0+255),f,b
  5445  00131C  B0D8               	btfsc	status,0,c
  5446  00131E  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
  5447  001320                     l6264:
  5448                           
  5449                           ; BSR set to: 0
  5450                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 484:         p = 
      +                          2;
  5451  001320  0E00               	movlw	0
  5452  001322  6F89               	movwf	(efgtoa@p+1)& (0+255),b
  5453  001324  0E02               	movlw	2
  5454  001326  6F88               	movwf	efgtoa@p& (0+255),b
  5455                           
  5456                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  5457  001328  EFC1  F009         	goto	l6276
  5458  00132C                     l6266:
  5459                           
  5460                           ; BSR set to: 0
  5461                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 486:             
      +                          --i;
  5462  00132C  0796               	decf	efgtoa@i& (0+255),f,b
  5463  00132E  A0D8               	btfss	status,0,c
  5464  001330  0797               	decf	(efgtoa@i+1)& (0+255),f,b
  5465  001332                     
  5466                           ; BSR set to: 0
  5467                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 487:             
      +                          dbuf[i] = '0' + (e % 10);
  5468  001332  0E08               	movlw	low _dbuf
  5469  001334  2596               	addwf	efgtoa@i& (0+255),w,b
  5470  001336  6ED9               	movwf	fsr2l,c
  5471  001338  0E01               	movlw	high _dbuf
  5472  00133A  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5473  00133C  6EDA               	movwf	fsr2h,c
  5474  00133E  C09C  F002         	movff	efgtoa@e,___awmod@dividend
  5475  001342  C09D  F003         	movff	efgtoa@e+1,___awmod@dividend+1
  5476  001346  0E00               	movlw	0
  5477  001348  6E05               	movwf	(___awmod@divisor+1)^0,c
  5478  00134A  0E0A               	movlw	10
  5479  00134C  6E04               	movwf	___awmod@divisor^0,c
  5480  00134E  EC9D  F021         	call	___awmod	;wreg free
  5481  001352  5002               	movf	?___awmod^0,w,c
  5482  001354  0F30               	addlw	48
  5483  001356  6EDF               	movwf	indf2,c
  5484  001358                     
  5485                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 488:             
      +                          e = e / 10;
  5486  001358  C09C  F002         	movff	efgtoa@e,___awdiv@dividend
  5487  00135C  C09D  F003         	movff	efgtoa@e+1,___awdiv@dividend+1
  5488  001360  0E00               	movlw	0
  5489  001362  6E05               	movwf	(___awdiv@divisor+1)^0,c
  5490  001364  0E0A               	movlw	10
  5491  001366  6E04               	movwf	___awdiv@divisor^0,c
  5492  001368  EC3B  F021         	call	___awdiv	;wreg free
  5493  00136C  C002  F09C         	movff	?___awdiv,efgtoa@e
  5494  001370  C003  F09D         	movff	?___awdiv+1,efgtoa@e+1
  5495  001374                     
  5496                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 489:             
      +                          --p;
  5497  001374  0100               	movlb	0	; () banked
  5498  001376  0788               	decf	efgtoa@p& (0+255),f,b
  5499  001378  A0D8               	btfss	status,0,c
  5500  00137A  0789               	decf	(efgtoa@p+1)& (0+255),f,b
  5501  00137C                     
  5502                           ; BSR set to: 0
  5503                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 490:             
      +                          --w;
  5504  00137C  078B               	decf	efgtoa@w& (0+255),f,b
  5505  00137E  A0D8               	btfss	status,0,c
  5506  001380  078C               	decf	(efgtoa@w+1)& (0+255),f,b
  5507  001382                     l6276:
  5508                           
  5509                           ; BSR set to: 0
  5510                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  5511  001382  519C               	movf	efgtoa@e& (0+255),w,b
  5512  001384  119D               	iorwf	(efgtoa@e+1)& (0+255),w,b
  5513  001386  A4D8               	btfss	status,2,c
  5514  001388  EFC8  F009         	goto	u8311
  5515  00138C  EFCA  F009         	goto	u8310
  5516  001390                     u8311:
  5517  001390  EF96  F009         	goto	l6266
  5518  001394                     u8310:
  5519  001394                     
  5520                           ; BSR set to: 0
  5521  001394  BF89               	btfsc	(efgtoa@p+1)& (0+255),7,b
  5522  001396  EFD7  F009         	goto	u8320
  5523  00139A  5189               	movf	(efgtoa@p+1)& (0+255),w,b
  5524  00139C  E106               	bnz	u8321
  5525  00139E  0588               	decf	efgtoa@p& (0+255),w,b
  5526  0013A0  B0D8               	btfsc	status,0,c
  5527  0013A2  EFD5  F009         	goto	u8321
  5528  0013A6  EFD7  F009         	goto	u8320
  5529  0013AA                     u8321:
  5530  0013AA  EF96  F009         	goto	l6266
  5531  0013AE                     u8320:
  5532  0013AE                     
  5533                           ; BSR set to: 0
  5534                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 492:         --i;
  5535  0013AE  0796               	decf	efgtoa@i& (0+255),f,b
  5536  0013B0  A0D8               	btfss	status,0,c
  5537  0013B2  0797               	decf	(efgtoa@i+1)& (0+255),f,b
  5538  0013B4                     
  5539                           ; BSR set to: 0
  5540                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [i] = sign ? '-' : '+';
  5541  0013B4  5186               	movf	efgtoa@sign& (0+255),w,b
  5542  0013B6  1187               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5543  0013B8  A4D8               	btfss	status,2,c
  5544  0013BA  EFE1  F009         	goto	u8331
  5545  0013BE  EFE3  F009         	goto	u8330
  5546  0013C2                     u8331:
  5547  0013C2  EFE9  F009         	goto	l6286
  5548  0013C6                     u8330:
  5549  0013C6                     
  5550                           ; BSR set to: 0
  5551  0013C6  0E00               	movlw	0
  5552  0013C8  6F77               	movwf	(_efgtoa$1324+1)& (0+255),b
  5553  0013CA  0E2B               	movlw	43
  5554  0013CC  6F76               	movwf	_efgtoa$1324& (0+255),b
  5555  0013CE  EFED  F009         	goto	l6288
  5556  0013D2                     l6286:
  5557                           
  5558                           ; BSR set to: 0
  5559  0013D2  0E00               	movlw	0
  5560  0013D4  6F77               	movwf	(_efgtoa$1324+1)& (0+255),b
  5561  0013D6  0E2D               	movlw	45
  5562  0013D8  6F76               	movwf	_efgtoa$1324& (0+255),b
  5563  0013DA                     l6288:
  5564                           
  5565                           ; BSR set to: 0
  5566  0013DA  0E08               	movlw	low _dbuf
  5567  0013DC  2596               	addwf	efgtoa@i& (0+255),w,b
  5568  0013DE  6ED9               	movwf	fsr2l,c
  5569  0013E0  0E01               	movlw	high _dbuf
  5570  0013E2  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5571  0013E4  6EDA               	movwf	fsr2h,c
  5572  0013E6  C076  FFDF         	movff	_efgtoa$1324,indf2
  5573  0013EA                     
  5574                           ; BSR set to: 0
  5575                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 494:         --w;
  5576  0013EA  078B               	decf	efgtoa@w& (0+255),f,b
  5577  0013EC  A0D8               	btfss	status,0,c
  5578  0013EE  078C               	decf	(efgtoa@w+1)& (0+255),f,b
  5579  0013F0                     
  5580                           ; BSR set to: 0
  5581                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 496:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5582  0013F0  0796               	decf	efgtoa@i& (0+255),f,b
  5583  0013F2  A0D8               	btfss	status,0,c
  5584  0013F4  0797               	decf	(efgtoa@i+1)& (0+255),f,b
  5585  0013F6                     
  5586                           ; BSR set to: 0
  5587  0013F6  0EBF               	movlw	191
  5588  0013F8  6F67               	movwf	??_efgtoa& (0+255),b
  5589  0013FA  0EFF               	movlw	255
  5590  0013FC  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  5591  0013FE  5166               	movf	efgtoa@c& (0+255),w,b
  5592  001400  6F69               	movwf	(??_efgtoa+2)& (0+255),b
  5593  001402  6B6A               	clrf	(??_efgtoa+3)& (0+255),b
  5594  001404  5167               	movf	??_efgtoa& (0+255),w,b
  5595  001406  2769               	addwf	(??_efgtoa+2)& (0+255),f,b
  5596  001408  5168               	movf	(??_efgtoa+1)& (0+255),w,b
  5597  00140A  236A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5598  00140C  516A               	movf	(??_efgtoa+3)& (0+255),w,b
  5599  00140E  E10A               	bnz	u8340
  5600  001410  0E1A               	movlw	26
  5601  001412  5D69               	subwf	(??_efgtoa+2)& (0+255),w,b
  5602  001414  A0D8               	btfss	status,0,c
  5603  001416  EF0F  F00A         	goto	u8341
  5604  00141A  EF12  F00A         	goto	u8340
  5605  00141E                     u8341:
  5606  00141E  0E01               	movlw	1
  5607  001420  EF13  F00A         	goto	u8350
  5608  001424                     u8340:
  5609  001424  0E00               	movlw	0
  5610  001426                     u8350:
  5611  001426  6F7A               	movwf	_efgtoa$1326& (0+255),b
  5612  001428  6B7B               	clrf	(_efgtoa$1326+1)& (0+255),b
  5613  00142A                     
  5614                           ; BSR set to: 0
  5615  00142A  517A               	movf	_efgtoa$1326& (0+255),w,b
  5616  00142C  117B               	iorwf	(_efgtoa$1326+1)& (0+255),w,b
  5617  00142E  A4D8               	btfss	status,2,c
  5618  001430  EF1C  F00A         	goto	u8361
  5619  001434  EF1E  F00A         	goto	u8360
  5620  001438                     u8361:
  5621  001438  EF24  F00A         	goto	l6302
  5622  00143C                     u8360:
  5623  00143C                     
  5624                           ; BSR set to: 0
  5625  00143C  0E00               	movlw	0
  5626  00143E  6F79               	movwf	(_efgtoa$1325+1)& (0+255),b
  5627  001440  0E65               	movlw	101
  5628  001442  6F78               	movwf	_efgtoa$1325& (0+255),b
  5629  001444  EF28  F00A         	goto	l6304
  5630  001448                     l6302:
  5631                           
  5632                           ; BSR set to: 0
  5633  001448  0E00               	movlw	0
  5634  00144A  6F79               	movwf	(_efgtoa$1325+1)& (0+255),b
  5635  00144C  0E45               	movlw	69
  5636  00144E  6F78               	movwf	_efgtoa$1325& (0+255),b
  5637  001450                     l6304:
  5638                           
  5639                           ; BSR set to: 0
  5640  001450  0E08               	movlw	low _dbuf
  5641  001452  2596               	addwf	efgtoa@i& (0+255),w,b
  5642  001454  6ED9               	movwf	fsr2l,c
  5643  001456  0E01               	movlw	high _dbuf
  5644  001458  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5645  00145A  6EDA               	movwf	fsr2h,c
  5646  00145C  C078  FFDF         	movff	_efgtoa$1325,indf2
  5647  001460                     
  5648                           ; BSR set to: 0
  5649                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 497:         --w;
  5650  001460  078B               	decf	efgtoa@w& (0+255),f,b
  5651  001462  A0D8               	btfss	status,0,c
  5652  001464  078C               	decf	(efgtoa@w+1)& (0+255),f,b
  5653  001466                     
  5654                           ; BSR set to: 0
  5655                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 498:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  5656  001466  0E08               	movlw	low _dbuf
  5657  001468  259E               	addwf	efgtoa@n& (0+255),w,b
  5658  00146A  6E02               	movwf	strcpy@dest^0,c
  5659  00146C  0E01               	movlw	high _dbuf
  5660  00146E  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5661  001470  6E03               	movwf	(strcpy@dest+1)^0,c
  5662  001472  0E08               	movlw	low _dbuf
  5663  001474  2596               	addwf	efgtoa@i& (0+255),w,b
  5664  001476  6E04               	movwf	strcpy@src^0,c
  5665  001478  0E01               	movlw	high _dbuf
  5666  00147A  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5667  00147C  6E05               	movwf	(strcpy@src+1)^0,c
  5668  00147E  ECFC  F023         	call	_strcpy	;wreg free
  5669  001482  EF1F  F005         	goto	l6060
  5670  001486                     l978:
  5671  001486  0012               	return		;funcret
  5672  001488                     __end_of_efgtoa:
  5673                           	callstack 0
  5674                           
  5675 ;; *************** function _tolower *****************
  5676 ;; Defined at:
  5677 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\tolower.c"
  5678 ;; Parameters:    Size  Location     Type
  5679 ;;  c               2    7[COMRAM] int 
  5680 ;; Auto vars:     Size  Location     Type
  5681 ;;		None
  5682 ;; Return value:  Size  Location     Type
  5683 ;;                  2    7[COMRAM] int 
  5684 ;; Registers used:
  5685 ;;		wreg, status,2, status,0
  5686 ;; Tracked objects:
  5687 ;;		On entry : 0/0
  5688 ;;		On exit  : 0/0
  5689 ;;		Unchanged: 0/0
  5690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5691 ;;      Params:         2       0       0       0       0       0       0       0       0
  5692 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5693 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5694 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5695 ;;Total ram usage:        8 bytes
  5696 ;; Hardware stack levels used:    1
  5697 ;; Hardware stack levels required when called:    3
  5698 ;; This function calls:
  5699 ;;		_isupper
  5700 ;; This function is called by:
  5701 ;;		_efgtoa
  5702 ;;		_vfpfcnvrt
  5703 ;; This function uses a non-reentrant model
  5704 ;;
  5705                           
  5706                           	psect	text10
  5707  004798                     __ptext10:
  5708                           	callstack 0
  5709  004798                     _tolower:
  5710                           	callstack 23
  5711  004798  0EBF               	movlw	191
  5712  00479A  6E0A               	movwf	??_tolower^0,c
  5713  00479C  0EFF               	movlw	255
  5714  00479E  6E0B               	movwf	(??_tolower+1)^0,c
  5715  0047A0  C008  F00C         	movff	tolower@c,??_tolower+2
  5716  0047A4  C009  F00D         	movff	tolower@c+1,??_tolower+3
  5717  0047A8  500A               	movf	??_tolower^0,w,c
  5718  0047AA  260C               	addwf	(??_tolower+2)^0,f,c
  5719  0047AC  500B               	movf	(??_tolower+1)^0,w,c
  5720  0047AE  220D               	addwfc	(??_tolower+3)^0,f,c
  5721  0047B0  500D               	movf	(??_tolower+3)^0,w,c
  5722  0047B2  E10A               	bnz	u7530
  5723  0047B4  0E1A               	movlw	26
  5724  0047B6  5C0C               	subwf	(??_tolower+2)^0,w,c
  5725  0047B8  A0D8               	btfss	status,0,c
  5726  0047BA  EFE1  F023         	goto	u7531
  5727  0047BE  EFE4  F023         	goto	u7530
  5728  0047C2                     u7531:
  5729  0047C2  0E01               	movlw	1
  5730  0047C4  EFE5  F023         	goto	u7540
  5731  0047C8                     u7530:
  5732  0047C8  0E00               	movlw	0
  5733  0047CA                     u7540:
  5734  0047CA  6E0E               	movwf	_tolower$1477^0,c
  5735  0047CC  6A0F               	clrf	(_tolower$1477+1)^0,c
  5736  0047CE  500E               	movf	_tolower$1477^0,w,c
  5737  0047D0  100F               	iorwf	(_tolower$1477+1)^0,w,c
  5738  0047D2  B4D8               	btfsc	status,2,c
  5739  0047D4  EFEE  F023         	goto	u7551
  5740  0047D8  EFF0  F023         	goto	u7550
  5741  0047DC                     u7551:
  5742  0047DC  EFF7  F023         	goto	l1226
  5743  0047E0                     u7550:
  5744  0047E0  0E20               	movlw	32
  5745  0047E2  1008               	iorwf	tolower@c^0,w,c
  5746  0047E4  6E08               	movwf	?_tolower^0,c
  5747  0047E6  5009               	movf	(tolower@c+1)^0,w,c
  5748  0047E8  6E09               	movwf	(?_tolower+1)^0,c
  5749  0047EA  EFFB  F023         	goto	l1231
  5750  0047EE                     l1226:
  5751  0047EE  C008  F008         	movff	tolower@c,?_tolower
  5752  0047F2  C009  F009         	movff	tolower@c+1,?_tolower+1
  5753  0047F6                     l1231:
  5754  0047F6  0012               	return		;funcret
  5755  0047F8                     __end_of_tolower:
  5756                           	callstack 0
  5757                           
  5758 ;; *************** function _isupper *****************
  5759 ;; Defined at:
  5760 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  5761 ;; Parameters:    Size  Location     Type
  5762 ;;  c               2    1[COMRAM] int 
  5763 ;; Auto vars:     Size  Location     Type
  5764 ;;		None
  5765 ;; Return value:  Size  Location     Type
  5766 ;;                  2    1[COMRAM] int 
  5767 ;; Registers used:
  5768 ;;		wreg, status,2, status,0
  5769 ;; Tracked objects:
  5770 ;;		On entry : 0/0
  5771 ;;		On exit  : 0/0
  5772 ;;		Unchanged: 0/0
  5773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5774 ;;      Params:         2       0       0       0       0       0       0       0       0
  5775 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5776 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5777 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5778 ;;Total ram usage:        6 bytes
  5779 ;; Hardware stack levels used:    1
  5780 ;; Hardware stack levels required when called:    2
  5781 ;; This function calls:
  5782 ;;		Nothing
  5783 ;; This function is called by:
  5784 ;;		_efgtoa
  5785 ;;		_vfpfcnvrt
  5786 ;;		_tolower
  5787 ;; This function uses a non-reentrant model
  5788 ;;
  5789                           
  5790                           	psect	text11
  5791  004A60                     __ptext11:
  5792                           	callstack 0
  5793  004A60                     _isupper:
  5794                           	callstack 23
  5795  004A60  0EBF               	movlw	191
  5796  004A62  6E04               	movwf	??_isupper^0,c
  5797  004A64  0EFF               	movlw	255
  5798  004A66  6E05               	movwf	(??_isupper+1)^0,c
  5799  004A68  C002  F006         	movff	isupper@c,??_isupper+2
  5800  004A6C  C003  F007         	movff	isupper@c+1,??_isupper+3
  5801  004A70  5004               	movf	??_isupper^0,w,c
  5802  004A72  2606               	addwf	(??_isupper+2)^0,f,c
  5803  004A74  5005               	movf	(??_isupper+1)^0,w,c
  5804  004A76  2207               	addwfc	(??_isupper+3)^0,f,c
  5805  004A78  5007               	movf	(??_isupper+3)^0,w,c
  5806  004A7A  E10A               	bnz	u6540
  5807  004A7C  0E1A               	movlw	26
  5808  004A7E  5C06               	subwf	(??_isupper+2)^0,w,c
  5809  004A80  A0D8               	btfss	status,0,c
  5810  004A82  EF45  F025         	goto	u6541
  5811  004A86  EF48  F025         	goto	u6540
  5812  004A8A                     u6541:
  5813  004A8A  0E01               	movlw	1
  5814  004A8C  EF49  F025         	goto	u6550
  5815  004A90                     u6540:
  5816  004A90  0E00               	movlw	0
  5817  004A92                     u6550:
  5818  004A92  6E02               	movwf	?_isupper^0,c
  5819  004A94  6A03               	clrf	(?_isupper+1)^0,c
  5820  004A96  0012               	return		;funcret
  5821  004A98                     __end_of_isupper:
  5822                           	callstack 0
  5823                           
  5824 ;; *************** function _strcpy *****************
  5825 ;; Defined at:
  5826 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strcpy.c"
  5827 ;; Parameters:    Size  Location     Type
  5828 ;;  dest            2    1[COMRAM] PTR unsigned char 
  5829 ;;		 -> dbuf(80), 
  5830 ;;  src             2    3[COMRAM] PTR const unsigned char 
  5831 ;;		 -> STR_30(4), STR_29(4), STR_26(4), STR_25(4), 
  5832 ;;		 -> dbuf(80), 
  5833 ;; Auto vars:     Size  Location     Type
  5834 ;;  d               2    9[COMRAM] PTR unsigned char 
  5835 ;;		 -> dbuf(80), 
  5836 ;;  s               2    7[COMRAM] PTR const unsigned char 
  5837 ;;		 -> STR_30(4), STR_29(4), STR_26(4), STR_25(4), 
  5838 ;;		 -> dbuf(80), 
  5839 ;; Return value:  Size  Location     Type
  5840 ;;                  2    1[COMRAM] PTR unsigned char 
  5841 ;; Registers used:
  5842 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5843 ;; Tracked objects:
  5844 ;;		On entry : 0/0
  5845 ;;		On exit  : 0/0
  5846 ;;		Unchanged: 0/0
  5847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5848 ;;      Params:         4       0       0       0       0       0       0       0       0
  5849 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5850 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5851 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5852 ;;Total ram usage:       10 bytes
  5853 ;; Hardware stack levels used:    1
  5854 ;; Hardware stack levels required when called:    2
  5855 ;; This function calls:
  5856 ;;		Nothing
  5857 ;; This function is called by:
  5858 ;;		_efgtoa
  5859 ;; This function uses a non-reentrant model
  5860 ;;
  5861                           
  5862                           	psect	text12
  5863  0047F8                     __ptext12:
  5864                           	callstack 0
  5865  0047F8                     _strcpy:
  5866                           	callstack 23
  5867  0047F8  C004  F008         	movff	strcpy@src,strcpy@s
  5868  0047FC  C005  F009         	movff	strcpy@src+1,strcpy@s+1
  5869  004800  C002  F00A         	movff	strcpy@dest,strcpy@d
  5870  004804  C003  F00B         	movff	strcpy@dest+1,strcpy@d+1
  5871  004808                     l5898:
  5872  004808  5008               	movf	strcpy@s^0,w,c
  5873  00480A  6E06               	movwf	??_strcpy^0,c
  5874  00480C  5009               	movf	(strcpy@s+1)^0,w,c
  5875  00480E  6E07               	movwf	(??_strcpy+1)^0,c
  5876  004810  4A08               	infsnz	strcpy@s^0,f,c
  5877  004812  2A09               	incf	(strcpy@s+1)^0,f,c
  5878  004814  C006  FFF6         	movff	??_strcpy,tblptrl
  5879  004818  C007  FFF7         	movff	??_strcpy+1,tblptrh
  5880  00481C  6AF8               	clrf	tblptru,c
  5881  00481E  C00A  FFD9         	movff	strcpy@d,fsr2l
  5882  004822  C00B  FFDA         	movff	strcpy@d+1,fsr2h
  5883  004826  4A0A               	infsnz	strcpy@d^0,f,c
  5884  004828  2A0B               	incf	(strcpy@d+1)^0,f,c
  5885  00482A  0E07               	movlw	(high __ramtop+-1)
  5886  00482C  64F7               	cpfsgt	tblptrh,c
  5887  00482E  D003               	bra	u7517
  5888  004830  0008               	tblrd		*
  5889  004832  50F5               	movf	tablat,w,c
  5890  004834  D005               	bra	u7510
  5891  004836                     u7517:
  5892  004836  CFF6 FFE1          	movff	tblptrl,fsr1l
  5893  00483A  CFF7 FFE2          	movff	tblptrh,fsr1h
  5894  00483E  50E7               	movf	indf1,w,c
  5895  004840                     u7510:
  5896  004840  6EDF               	movwf	indf2,c
  5897  004842  50DF               	movf	indf2,w,c
  5898  004844  A4D8               	btfss	status,2,c
  5899  004846  EF27  F024         	goto	u7521
  5900  00484A  EF29  F024         	goto	u7520
  5901  00484E                     u7521:
  5902  00484E  EF04  F024         	goto	l5898
  5903  004852                     u7520:
  5904  004852  0012               	return		;funcret
  5905  004854                     __end_of_strcpy:
  5906                           	callstack 0
  5907                           
  5908 ;; *************** function _floorf *****************
  5909 ;; Defined at:
  5910 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\floorf.c"
  5911 ;; Parameters:    Size  Location     Type
  5912 ;;  x               4   65[COMRAM] float 
  5913 ;; Auto vars:     Size  Location     Type
  5914 ;;  u               4   81[COMRAM] struct .
  5915 ;;  m               4   75[COMRAM] unsigned long 
  5916 ;;  e               2   79[COMRAM] int 
  5917 ;; Return value:  Size  Location     Type
  5918 ;;                  4   65[COMRAM] float 
  5919 ;; Registers used:
  5920 ;;		wreg, status,2, status,0
  5921 ;; Tracked objects:
  5922 ;;		On entry : 0/0
  5923 ;;		On exit  : 0/0
  5924 ;;		Unchanged: 0/0
  5925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5926 ;;      Params:         4       0       0       0       0       0       0       0       0
  5927 ;;      Locals:        10       0       0       0       0       0       0       0       0
  5928 ;;      Temps:          6       0       0       0       0       0       0       0       0
  5929 ;;      Totals:        20       0       0       0       0       0       0       0       0
  5930 ;;Total ram usage:       20 bytes
  5931 ;; Hardware stack levels used:    1
  5932 ;; Hardware stack levels required when called:    2
  5933 ;; This function calls:
  5934 ;;		Nothing
  5935 ;; This function is called by:
  5936 ;;		_efgtoa
  5937 ;; This function uses a non-reentrant model
  5938 ;;
  5939                           
  5940                           	psect	text13
  5941  0031A4                     __ptext13:
  5942                           	callstack 0
  5943  0031A4                     _floorf:
  5944                           	callstack 23
  5945  0031A4  C100  F052         	movff	floorf@F524,floorf@u
  5946  0031A8  C101  F053         	movff	floorf@F524+1,floorf@u+1
  5947  0031AC  C102  F054         	movff	floorf@F524+2,floorf@u+2
  5948  0031B0  C103  F055         	movff	floorf@F524+3,floorf@u+3
  5949  0031B4  C042  F052         	movff	floorf@x,floorf@u
  5950  0031B8  C043  F053         	movff	floorf@x+1,floorf@u+1
  5951  0031BC  C044  F054         	movff	floorf@x+2,floorf@u+2
  5952  0031C0  C045  F055         	movff	floorf@x+3,floorf@u+3
  5953  0031C4  0E81               	movlw	129
  5954  0031C6  6E46               	movwf	??_floorf^0,c
  5955  0031C8  0EFF               	movlw	255
  5956  0031CA  6E47               	movwf	(??_floorf+1)^0,c
  5957  0031CC  C052  F048         	movff	floorf@u,??_floorf+2
  5958  0031D0  C053  F049         	movff	floorf@u+1,??_floorf+3
  5959  0031D4  C054  F04A         	movff	floorf@u+2,??_floorf+4
  5960  0031D8  C055  F04B         	movff	floorf@u+3,??_floorf+5
  5961  0031DC  0E18               	movlw	24
  5962  0031DE  EFF6  F018         	goto	u7560
  5963  0031E2                     u7565:
  5964  0031E2  90D8               	bcf	status,0,c
  5965  0031E4  324B               	rrcf	(??_floorf+5)^0,f,c
  5966  0031E6  324A               	rrcf	(??_floorf+4)^0,f,c
  5967  0031E8  3249               	rrcf	(??_floorf+3)^0,f,c
  5968  0031EA  3248               	rrcf	(??_floorf+2)^0,f,c
  5969  0031EC                     u7560:
  5970  0031EC  2EE8               	decfsz	wreg,f,c
  5971  0031EE  EFF1  F018         	goto	u7565
  5972  0031F2  5048               	movf	(??_floorf+2)^0,w,c
  5973  0031F4  2446               	addwf	??_floorf^0,w,c
  5974  0031F6  6E50               	movwf	floorf@e^0,c
  5975  0031F8  0E00               	movlw	0
  5976  0031FA  2047               	addwfc	(??_floorf+1)^0,w,c
  5977  0031FC  6E51               	movwf	(floorf@e+1)^0,c
  5978  0031FE  BE51               	btfsc	(floorf@e+1)^0,7,c
  5979  003200  EF0B  F019         	goto	u7571
  5980  003204  5051               	movf	(floorf@e+1)^0,w,c
  5981  003206  E109               	bnz	u7570
  5982  003208  0E17               	movlw	23
  5983  00320A  5C50               	subwf	floorf@e^0,w,c
  5984  00320C  A0D8               	btfss	status,0,c
  5985  00320E  EF0B  F019         	goto	u7571
  5986  003212  EF0D  F019         	goto	u7570
  5987  003216                     u7571:
  5988  003216  EF17  F019         	goto	l5916
  5989  00321A                     u7570:
  5990  00321A                     l5914:
  5991  00321A  C042  F042         	movff	floorf@x,?_floorf
  5992  00321E  C043  F043         	movff	floorf@x+1,?_floorf+1
  5993  003222  C044  F044         	movff	floorf@x+2,?_floorf+2
  5994  003226  C045  F045         	movff	floorf@x+3,?_floorf+3
  5995  00322A  EFDA  F019         	goto	l1150
  5996  00322E                     l5916:
  5997  00322E  BE51               	btfsc	(floorf@e+1)^0,7,c
  5998  003230  EF1C  F019         	goto	u7581
  5999  003234  EF1E  F019         	goto	u7580
  6000  003238                     u7581:
  6001  003238  EF8E  F019         	goto	l5926
  6002  00323C                     u7580:
  6003  00323C  C050  F046         	movff	floorf@e,??_floorf
  6004  003240  0EFF               	movlw	255
  6005  003242  6E47               	movwf	(??_floorf+1)^0,c
  6006  003244  0EFF               	movlw	255
  6007  003246  6E48               	movwf	(??_floorf+2)^0,c
  6008  003248  0E7F               	movlw	127
  6009  00324A  6E49               	movwf	(??_floorf+3)^0,c
  6010  00324C  0E00               	movlw	0
  6011  00324E  6E4A               	movwf	(??_floorf+4)^0,c
  6012  003250                     u7595:
  6013  003250  6646               	tstfsz	??_floorf^0,c
  6014  003252  EF2D  F019         	goto	u7596
  6015  003256  EF35  F019         	goto	u7597
  6016  00325A                     u7596:
  6017  00325A  344A               	rlcf	(??_floorf+4)^0,w,c
  6018  00325C  324A               	rrcf	(??_floorf+4)^0,f,c
  6019  00325E  3249               	rrcf	(??_floorf+3)^0,f,c
  6020  003260  3248               	rrcf	(??_floorf+2)^0,f,c
  6021  003262  3247               	rrcf	(??_floorf+1)^0,f,c
  6022  003264  2E46               	decfsz	??_floorf^0,f,c
  6023  003266  EF28  F019         	goto	u7595
  6024  00326A                     u7597:
  6025  00326A  C047  F04C         	movff	??_floorf+1,floorf@m
  6026  00326E  C048  F04D         	movff	??_floorf+2,floorf@m+1
  6027  003272  C049  F04E         	movff	??_floorf+3,floorf@m+2
  6028  003276  C04A  F04F         	movff	??_floorf+4,floorf@m+3
  6029  00327A  504C               	movf	floorf@m^0,w,c
  6030  00327C  1452               	andwf	floorf@u^0,w,c
  6031  00327E  6E46               	movwf	??_floorf^0,c
  6032  003280  504D               	movf	(floorf@m+1)^0,w,c
  6033  003282  1453               	andwf	(floorf@u+1)^0,w,c
  6034  003284  6E47               	movwf	(??_floorf+1)^0,c
  6035  003286  504E               	movf	(floorf@m+2)^0,w,c
  6036  003288  1454               	andwf	(floorf@u+2)^0,w,c
  6037  00328A  6E48               	movwf	(??_floorf+2)^0,c
  6038  00328C  504F               	movf	(floorf@m+3)^0,w,c
  6039  00328E  1455               	andwf	(floorf@u+3)^0,w,c
  6040  003290  6E49               	movwf	(??_floorf+3)^0,c
  6041  003292  5046               	movf	??_floorf^0,w,c
  6042  003294  1047               	iorwf	(??_floorf+1)^0,w,c
  6043  003296  1048               	iorwf	(??_floorf+2)^0,w,c
  6044  003298  1049               	iorwf	(??_floorf+3)^0,w,c
  6045  00329A  A4D8               	btfss	status,2,c
  6046  00329C  EF52  F019         	goto	u7601
  6047  0032A0  EF54  F019         	goto	u7600
  6048  0032A4                     u7601:
  6049  0032A4  EF56  F019         	goto	l5922
  6050  0032A8                     u7600:
  6051  0032A8  EF0D  F019         	goto	l5914
  6052  0032AC                     l5922:
  6053  0032AC  C052  F046         	movff	floorf@u,??_floorf
  6054  0032B0  C053  F047         	movff	floorf@u+1,??_floorf+1
  6055  0032B4  C054  F048         	movff	floorf@u+2,??_floorf+2
  6056  0032B8  C055  F049         	movff	floorf@u+3,??_floorf+3
  6057  0032BC  0E20               	movlw	32
  6058  0032BE  EF66  F019         	goto	u7610
  6059  0032C2                     u7615:
  6060  0032C2  90D8               	bcf	status,0,c
  6061  0032C4  3249               	rrcf	(??_floorf+3)^0,f,c
  6062  0032C6  3248               	rrcf	(??_floorf+2)^0,f,c
  6063  0032C8  3247               	rrcf	(??_floorf+1)^0,f,c
  6064  0032CA  3246               	rrcf	??_floorf^0,f,c
  6065  0032CC                     u7610:
  6066  0032CC  2EE8               	decfsz	wreg,f,c
  6067  0032CE  EF61  F019         	goto	u7615
  6068  0032D2  5046               	movf	??_floorf^0,w,c
  6069  0032D4  1047               	iorwf	(??_floorf+1)^0,w,c
  6070  0032D6  1048               	iorwf	(??_floorf+2)^0,w,c
  6071  0032D8  1049               	iorwf	(??_floorf+3)^0,w,c
  6072  0032DA  B4D8               	btfsc	status,2,c
  6073  0032DC  EF72  F019         	goto	u7621
  6074  0032E0  EF74  F019         	goto	u7620
  6075  0032E4                     u7621:
  6076  0032E4  EF7C  F019         	goto	l1153
  6077  0032E8                     u7620:
  6078  0032E8  504C               	movf	floorf@m^0,w,c
  6079  0032EA  2652               	addwf	floorf@u^0,f,c
  6080  0032EC  504D               	movf	(floorf@m+1)^0,w,c
  6081  0032EE  2253               	addwfc	(floorf@u+1)^0,f,c
  6082  0032F0  504E               	movf	(floorf@m+2)^0,w,c
  6083  0032F2  2254               	addwfc	(floorf@u+2)^0,f,c
  6084  0032F4  504F               	movf	(floorf@m+3)^0,w,c
  6085  0032F6  2255               	addwfc	(floorf@u+3)^0,f,c
  6086  0032F8                     l1153:
  6087  0032F8  1C4C               	comf	floorf@m^0,w,c
  6088  0032FA  6E46               	movwf	??_floorf^0,c
  6089  0032FC  1C4D               	comf	(floorf@m+1)^0,w,c
  6090  0032FE  6E47               	movwf	(??_floorf+1)^0,c
  6091  003300  1C4E               	comf	(floorf@m+2)^0,w,c
  6092  003302  6E48               	movwf	(??_floorf+2)^0,c
  6093  003304  1C4F               	comf	(floorf@m+3)^0,w,c
  6094  003306  6E49               	movwf	(??_floorf+3)^0,c
  6095  003308  5046               	movf	??_floorf^0,w,c
  6096  00330A  1652               	andwf	floorf@u^0,f,c
  6097  00330C  5047               	movf	(??_floorf+1)^0,w,c
  6098  00330E  1653               	andwf	(floorf@u+1)^0,f,c
  6099  003310  5048               	movf	(??_floorf+2)^0,w,c
  6100  003312  1654               	andwf	(floorf@u+2)^0,f,c
  6101  003314  5049               	movf	(??_floorf+3)^0,w,c
  6102  003316  1655               	andwf	(floorf@u+3)^0,f,c
  6103  003318  EFD2  F019         	goto	l5934
  6104  00331C                     l5926:
  6105  00331C  C052  F046         	movff	floorf@u,??_floorf
  6106  003320  C053  F047         	movff	floorf@u+1,??_floorf+1
  6107  003324  C054  F048         	movff	floorf@u+2,??_floorf+2
  6108  003328  C055  F049         	movff	floorf@u+3,??_floorf+3
  6109  00332C  0E20               	movlw	32
  6110  00332E  EF9E  F019         	goto	u7630
  6111  003332                     u7635:
  6112  003332  90D8               	bcf	status,0,c
  6113  003334  3249               	rrcf	(??_floorf+3)^0,f,c
  6114  003336  3248               	rrcf	(??_floorf+2)^0,f,c
  6115  003338  3247               	rrcf	(??_floorf+1)^0,f,c
  6116  00333A  3246               	rrcf	??_floorf^0,f,c
  6117  00333C                     u7630:
  6118  00333C  2EE8               	decfsz	wreg,f,c
  6119  00333E  EF99  F019         	goto	u7635
  6120  003342  5046               	movf	??_floorf^0,w,c
  6121  003344  1047               	iorwf	(??_floorf+1)^0,w,c
  6122  003346  1048               	iorwf	(??_floorf+2)^0,w,c
  6123  003348  1049               	iorwf	(??_floorf+3)^0,w,c
  6124  00334A  A4D8               	btfss	status,2,c
  6125  00334C  EFAA  F019         	goto	u7641
  6126  003350  EFAC  F019         	goto	u7640
  6127  003354                     u7641:
  6128  003354  EFB6  F019         	goto	l5930
  6129  003358                     u7640:
  6130  003358  0E00               	movlw	0
  6131  00335A  6E52               	movwf	floorf@u^0,c
  6132  00335C  0E00               	movlw	0
  6133  00335E  6E53               	movwf	(floorf@u+1)^0,c
  6134  003360  0E00               	movlw	0
  6135  003362  6E54               	movwf	(floorf@u+2)^0,c
  6136  003364  0E00               	movlw	0
  6137  003366  6E55               	movwf	(floorf@u+3)^0,c
  6138  003368  EFD2  F019         	goto	l5934
  6139  00336C                     l5930:
  6140  00336C  90D8               	bcf	status,0,c
  6141  00336E  3452               	rlcf	floorf@u^0,w,c
  6142  003370  6E46               	movwf	??_floorf^0,c
  6143  003372  3453               	rlcf	(floorf@u+1)^0,w,c
  6144  003374  6E47               	movwf	(??_floorf+1)^0,c
  6145  003376  3454               	rlcf	(floorf@u+2)^0,w,c
  6146  003378  6E48               	movwf	(??_floorf+2)^0,c
  6147  00337A  3455               	rlcf	(floorf@u+3)^0,w,c
  6148  00337C  6E49               	movwf	(??_floorf+3)^0,c
  6149  00337E  5046               	movf	??_floorf^0,w,c
  6150  003380  1047               	iorwf	(??_floorf+1)^0,w,c
  6151  003382  1048               	iorwf	(??_floorf+2)^0,w,c
  6152  003384  1049               	iorwf	(??_floorf+3)^0,w,c
  6153  003386  B4D8               	btfsc	status,2,c
  6154  003388  EFC8  F019         	goto	u7651
  6155  00338C  EFCA  F019         	goto	u7650
  6156  003390                     u7651:
  6157  003390  EFD2  F019         	goto	l5934
  6158  003394                     u7650:
  6159  003394  0E00               	movlw	0
  6160  003396  6E52               	movwf	floorf@u^0,c
  6161  003398  0E00               	movlw	0
  6162  00339A  6E53               	movwf	(floorf@u+1)^0,c
  6163  00339C  0E80               	movlw	128
  6164  00339E  6E54               	movwf	(floorf@u+2)^0,c
  6165  0033A0  0EBF               	movlw	191
  6166  0033A2  6E55               	movwf	(floorf@u+3)^0,c
  6167  0033A4                     l5934:
  6168  0033A4  C052  F042         	movff	floorf@u,?_floorf
  6169  0033A8  C053  F043         	movff	floorf@u+1,?_floorf+1
  6170  0033AC  C054  F044         	movff	floorf@u+2,?_floorf+2
  6171  0033B0  C055  F045         	movff	floorf@u+3,?_floorf+3
  6172  0033B4                     l1150:
  6173  0033B4  0012               	return		;funcret
  6174  0033B6                     __end_of_floorf:
  6175                           	callstack 0
  6176                           
  6177 ;; *************** function ___fpclassifyf *****************
  6178 ;; Defined at:
  6179 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__fpclassifyf.c"
  6180 ;; Parameters:    Size  Location     Type
  6181 ;;  x               4    1[COMRAM] float 
  6182 ;; Auto vars:     Size  Location     Type
  6183 ;;  u               4   11[COMRAM] struct .
  6184 ;;  e               2    9[COMRAM] int 
  6185 ;; Return value:  Size  Location     Type
  6186 ;;                  2    1[COMRAM] int 
  6187 ;; Registers used:
  6188 ;;		wreg, status,2, status,0
  6189 ;; Tracked objects:
  6190 ;;		On entry : 0/0
  6191 ;;		On exit  : 0/0
  6192 ;;		Unchanged: 0/0
  6193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6194 ;;      Params:         4       0       0       0       0       0       0       0       0
  6195 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6196 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6197 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6198 ;;Total ram usage:       14 bytes
  6199 ;; Hardware stack levels used:    1
  6200 ;; Hardware stack levels required when called:    2
  6201 ;; This function calls:
  6202 ;;		Nothing
  6203 ;; This function is called by:
  6204 ;;		_efgtoa
  6205 ;; This function uses a non-reentrant model
  6206 ;;
  6207                           
  6208                           	psect	text14
  6209  003E38                     __ptext14:
  6210                           	callstack 0
  6211  003E38                     ___fpclassifyf:
  6212                           	callstack 23
  6213  003E38  C104  F00C         	movff	___fpclassifyf@F463,___fpclassifyf@u
  6214  003E3C  C105  F00D         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  6215  003E40  C106  F00E         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  6216  003E44  C107  F00F         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  6217  003E48  C002  F00C         	movff	___fpclassifyf@x,___fpclassifyf@u
  6218  003E4C  C003  F00D         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6219  003E50  C004  F00E         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6220  003E54  C005  F00F         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6221  003E58  C00C  F006         	movff	___fpclassifyf@u,??___fpclassifyf
  6222  003E5C  C00D  F007         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6223  003E60  C00E  F008         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6224  003E64  C00F  F009         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6225  003E68  0E18               	movlw	24
  6226  003E6A  EF3C  F01F         	goto	u7440
  6227  003E6E                     u7445:
  6228  003E6E  90D8               	bcf	status,0,c
  6229  003E70  3209               	rrcf	(??___fpclassifyf+3)^0,f,c
  6230  003E72  3208               	rrcf	(??___fpclassifyf+2)^0,f,c
  6231  003E74  3207               	rrcf	(??___fpclassifyf+1)^0,f,c
  6232  003E76  3206               	rrcf	??___fpclassifyf^0,f,c
  6233  003E78                     u7440:
  6234  003E78  2EE8               	decfsz	wreg,f,c
  6235  003E7A  EF37  F01F         	goto	u7445
  6236  003E7E  5006               	movf	??___fpclassifyf^0,w,c
  6237  003E80  6E0A               	movwf	___fpclassifyf@e^0,c
  6238  003E82  6A0B               	clrf	(___fpclassifyf@e+1)^0,c
  6239  003E84  500A               	movf	___fpclassifyf@e^0,w,c
  6240  003E86  100B               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6241  003E88  A4D8               	btfss	status,2,c
  6242  003E8A  EF49  F01F         	goto	u7451
  6243  003E8E  EF4B  F01F         	goto	u7450
  6244  003E92                     u7451:
  6245  003E92  EF6B  F01F         	goto	l5886
  6246  003E96                     u7450:
  6247  003E96  90D8               	bcf	status,0,c
  6248  003E98  340C               	rlcf	___fpclassifyf@u^0,w,c
  6249  003E9A  6E06               	movwf	??___fpclassifyf^0,c
  6250  003E9C  340D               	rlcf	(___fpclassifyf@u+1)^0,w,c
  6251  003E9E  6E07               	movwf	(??___fpclassifyf+1)^0,c
  6252  003EA0  340E               	rlcf	(___fpclassifyf@u+2)^0,w,c
  6253  003EA2  6E08               	movwf	(??___fpclassifyf+2)^0,c
  6254  003EA4  340F               	rlcf	(___fpclassifyf@u+3)^0,w,c
  6255  003EA6  6E09               	movwf	(??___fpclassifyf+3)^0,c
  6256  003EA8  5006               	movf	??___fpclassifyf^0,w,c
  6257  003EAA  1007               	iorwf	(??___fpclassifyf+1)^0,w,c
  6258  003EAC  1008               	iorwf	(??___fpclassifyf+2)^0,w,c
  6259  003EAE  1009               	iorwf	(??___fpclassifyf+3)^0,w,c
  6260  003EB0  A4D8               	btfss	status,2,c
  6261  003EB2  EF5D  F01F         	goto	u7461
  6262  003EB6  EF5F  F01F         	goto	u7460
  6263  003EBA                     u7461:
  6264  003EBA  EF65  F01F         	goto	l5882
  6265  003EBE                     u7460:
  6266  003EBE  0E00               	movlw	0
  6267  003EC0  6E03               	movwf	(?___fpclassifyf+1)^0,c
  6268  003EC2  0E02               	movlw	2
  6269  003EC4  6E02               	movwf	?___fpclassifyf^0,c
  6270  003EC6  EF9A  F01F         	goto	l1105
  6271  003ECA                     l5882:
  6272  003ECA  0E00               	movlw	0
  6273  003ECC  6E03               	movwf	(?___fpclassifyf+1)^0,c
  6274  003ECE  0E03               	movlw	3
  6275  003ED0  6E02               	movwf	?___fpclassifyf^0,c
  6276  003ED2  EF9A  F01F         	goto	l1105
  6277  003ED6                     l5886:
  6278  003ED6  280A               	incf	___fpclassifyf@e^0,w,c
  6279  003ED8  100B               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6280  003EDA  A4D8               	btfss	status,2,c
  6281  003EDC  EF72  F01F         	goto	u7471
  6282  003EE0  EF74  F01F         	goto	u7470
  6283  003EE4                     u7471:
  6284  003EE4  EF96  F01F         	goto	l5892
  6285  003EE8                     u7470:
  6286  003EE8  C00C  F006         	movff	___fpclassifyf@u,??___fpclassifyf
  6287  003EEC  C00D  F007         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6288  003EF0  C00E  F008         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6289  003EF4  C00F  F009         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6290  003EF8  0E09               	movlw	9
  6291  003EFA                     u7485:
  6292  003EFA  90D8               	bcf	status,0,c
  6293  003EFC  3606               	rlcf	??___fpclassifyf^0,f,c
  6294  003EFE  3607               	rlcf	(??___fpclassifyf+1)^0,f,c
  6295  003F00  3608               	rlcf	(??___fpclassifyf+2)^0,f,c
  6296  003F02  3609               	rlcf	(??___fpclassifyf+3)^0,f,c
  6297  003F04  2EE8               	decfsz	wreg,f,c
  6298  003F06  EF7D  F01F         	goto	u7485
  6299  003F0A  5006               	movf	??___fpclassifyf^0,w,c
  6300  003F0C  1007               	iorwf	(??___fpclassifyf+1)^0,w,c
  6301  003F0E  1008               	iorwf	(??___fpclassifyf+2)^0,w,c
  6302  003F10  1009               	iorwf	(??___fpclassifyf+3)^0,w,c
  6303  003F12  B4D8               	btfsc	status,2,c
  6304  003F14  EF8E  F01F         	goto	u7491
  6305  003F18  EF91  F01F         	goto	u7490
  6306  003F1C                     u7491:
  6307  003F1C  0E01               	movlw	1
  6308  003F1E  EF92  F01F         	goto	u7500
  6309  003F22                     u7490:
  6310  003F22  0E00               	movlw	0
  6311  003F24                     u7500:
  6312  003F24  6E02               	movwf	?___fpclassifyf^0,c
  6313  003F26  6A03               	clrf	(?___fpclassifyf+1)^0,c
  6314  003F28  EF9A  F01F         	goto	l1105
  6315  003F2C                     l5892:
  6316  003F2C  0E00               	movlw	0
  6317  003F2E  6E03               	movwf	(?___fpclassifyf+1)^0,c
  6318  003F30  0E04               	movlw	4
  6319  003F32  6E02               	movwf	?___fpclassifyf^0,c
  6320  003F34                     l1105:
  6321  003F34  0012               	return		;funcret
  6322  003F36                     __end_of___fpclassifyf:
  6323                           	callstack 0
  6324                           
  6325 ;; *************** function ___fltol *****************
  6326 ;; Defined at:
  6327 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fltol.c"
  6328 ;; Parameters:    Size  Location     Type
  6329 ;;  f1              4   81[COMRAM] int 
  6330 ;; Auto vars:     Size  Location     Type
  6331 ;;  exp1            1   90[COMRAM] unsigned char 
  6332 ;;  sign1           1   89[COMRAM] unsigned char 
  6333 ;; Return value:  Size  Location     Type
  6334 ;;                  4   81[COMRAM] long 
  6335 ;; Registers used:
  6336 ;;		wreg, status,2, status,0
  6337 ;; Tracked objects:
  6338 ;;		On entry : 0/0
  6339 ;;		On exit  : 0/0
  6340 ;;		Unchanged: 0/0
  6341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6342 ;;      Params:         4       0       0       0       0       0       0       0       0
  6343 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6344 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6345 ;;      Totals:        10       0       0       0       0       0       0       0       0
  6346 ;;Total ram usage:       10 bytes
  6347 ;; Hardware stack levels used:    1
  6348 ;; Hardware stack levels required when called:    2
  6349 ;; This function calls:
  6350 ;;		Nothing
  6351 ;; This function is called by:
  6352 ;;		_UART_Init
  6353 ;;		_efgtoa
  6354 ;; This function uses a non-reentrant model
  6355 ;;
  6356                           
  6357                           	psect	text15
  6358  003C2E                     __ptext15:
  6359                           	callstack 0
  6360  003C2E                     ___fltol:
  6361                           	callstack 27
  6362  003C2E  3454               	rlcf	(___fltol@f1+2)^0,w,c
  6363  003C30  3455               	rlcf	(___fltol@f1+3)^0,w,c
  6364  003C32  6E5B               	movwf	___fltol@exp1^0,c
  6365  003C34  505B               	movf	___fltol@exp1^0,w,c
  6366  003C36  A4D8               	btfss	status,2,c
  6367  003C38  EF20  F01E         	goto	u7321
  6368  003C3C  EF22  F01E         	goto	u7320
  6369  003C40                     u7321:
  6370  003C40  EF2C  F01E         	goto	l5810
  6371  003C44                     u7320:
  6372  003C44                     l5806:
  6373  003C44  0E00               	movlw	0
  6374  003C46  6E52               	movwf	?___fltol^0,c
  6375  003C48  0E00               	movlw	0
  6376  003C4A  6E53               	movwf	(?___fltol+1)^0,c
  6377  003C4C  0E00               	movlw	0
  6378  003C4E  6E54               	movwf	(?___fltol+2)^0,c
  6379  003C50  0E00               	movlw	0
  6380  003C52  6E55               	movwf	(?___fltol+3)^0,c
  6381  003C54  EF99  F01E         	goto	l505
  6382  003C58                     l5810:
  6383  003C58  C052  F056         	movff	___fltol@f1,??___fltol
  6384  003C5C  C053  F057         	movff	___fltol@f1+1,??___fltol+1
  6385  003C60  C054  F058         	movff	___fltol@f1+2,??___fltol+2
  6386  003C64  C055  F059         	movff	___fltol@f1+3,??___fltol+3
  6387  003C68  0E20               	movlw	32
  6388  003C6A  EF3C  F01E         	goto	u7330
  6389  003C6E                     u7335:
  6390  003C6E  90D8               	bcf	status,0,c
  6391  003C70  3259               	rrcf	(??___fltol+3)^0,f,c
  6392  003C72  3258               	rrcf	(??___fltol+2)^0,f,c
  6393  003C74  3257               	rrcf	(??___fltol+1)^0,f,c
  6394  003C76  3256               	rrcf	??___fltol^0,f,c
  6395  003C78                     u7330:
  6396  003C78  2EE8               	decfsz	wreg,f,c
  6397  003C7A  EF37  F01E         	goto	u7335
  6398  003C7E  5056               	movf	??___fltol^0,w,c
  6399  003C80  6E5A               	movwf	___fltol@sign1^0,c
  6400  003C82  8E54               	bsf	(___fltol@f1+2)^0,7,c
  6401  003C84  0EFF               	movlw	255
  6402  003C86  1652               	andwf	___fltol@f1^0,f,c
  6403  003C88  0EFF               	movlw	255
  6404  003C8A  1653               	andwf	(___fltol@f1+1)^0,f,c
  6405  003C8C  0EFF               	movlw	255
  6406  003C8E  1654               	andwf	(___fltol@f1+2)^0,f,c
  6407  003C90  0E00               	movlw	0
  6408  003C92  1655               	andwf	(___fltol@f1+3)^0,f,c
  6409  003C94  0E96               	movlw	150
  6410  003C96  5E5B               	subwf	___fltol@exp1^0,f,c
  6411  003C98  BE5B               	btfsc	___fltol@exp1^0,7,c
  6412  003C9A  EF53  F01E         	goto	u7340
  6413  003C9E  EF51  F01E         	goto	u7341
  6414  003CA2                     u7341:
  6415  003CA2  EF69  F01E         	goto	l5830
  6416  003CA6                     u7340:
  6417  003CA6  505B               	movf	___fltol@exp1^0,w,c
  6418  003CA8  0A80               	xorlw	128
  6419  003CAA  0F97               	addlw	151
  6420  003CAC  B0D8               	btfsc	status,0,c
  6421  003CAE  EF5B  F01E         	goto	u7351
  6422  003CB2  EF5D  F01E         	goto	u7350
  6423  003CB6                     u7351:
  6424  003CB6  EF5F  F01E         	goto	l5826
  6425  003CBA                     u7350:
  6426  003CBA  EF22  F01E         	goto	l5806
  6427  003CBE                     l5826:
  6428  003CBE  90D8               	bcf	status,0,c
  6429  003CC0  3255               	rrcf	(___fltol@f1+3)^0,f,c
  6430  003CC2  3254               	rrcf	(___fltol@f1+2)^0,f,c
  6431  003CC4  3253               	rrcf	(___fltol@f1+1)^0,f,c
  6432  003CC6  3252               	rrcf	___fltol@f1^0,f,c
  6433  003CC8  3E5B               	incfsz	___fltol@exp1^0,f,c
  6434  003CCA  EF5F  F01E         	goto	l5826
  6435  003CCE  EF81  F01E         	goto	l5840
  6436  003CD2                     l5830:
  6437  003CD2  0E1F               	movlw	31
  6438  003CD4  645B               	cpfsgt	___fltol@exp1^0,c
  6439  003CD6  EF6F  F01E         	goto	u7361
  6440  003CDA  EF71  F01E         	goto	u7360
  6441  003CDE                     u7361:
  6442  003CDE  EF79  F01E         	goto	l5838
  6443  003CE2                     u7360:
  6444  003CE2  EF22  F01E         	goto	l5806
  6445  003CE6                     l5836:
  6446  003CE6  90D8               	bcf	status,0,c
  6447  003CE8  3652               	rlcf	___fltol@f1^0,f,c
  6448  003CEA  3653               	rlcf	(___fltol@f1+1)^0,f,c
  6449  003CEC  3654               	rlcf	(___fltol@f1+2)^0,f,c
  6450  003CEE  3655               	rlcf	(___fltol@f1+3)^0,f,c
  6451  003CF0  065B               	decf	___fltol@exp1^0,f,c
  6452  003CF2                     l5838:
  6453  003CF2  505B               	movf	___fltol@exp1^0,w,c
  6454  003CF4  A4D8               	btfss	status,2,c
  6455  003CF6  EF7F  F01E         	goto	u7371
  6456  003CFA  EF81  F01E         	goto	u7370
  6457  003CFE                     u7371:
  6458  003CFE  EF73  F01E         	goto	l5836
  6459  003D02                     u7370:
  6460  003D02                     l5840:
  6461  003D02  505A               	movf	___fltol@sign1^0,w,c
  6462  003D04  B4D8               	btfsc	status,2,c
  6463  003D06  EF87  F01E         	goto	u7381
  6464  003D0A  EF89  F01E         	goto	u7380
  6465  003D0E                     u7381:
  6466  003D0E  EF91  F01E         	goto	l5844
  6467  003D12                     u7380:
  6468  003D12  1E55               	comf	(___fltol@f1+3)^0,f,c
  6469  003D14  1E54               	comf	(___fltol@f1+2)^0,f,c
  6470  003D16  1E53               	comf	(___fltol@f1+1)^0,f,c
  6471  003D18  6C52               	negf	___fltol@f1^0,c
  6472  003D1A  0E00               	movlw	0
  6473  003D1C  2253               	addwfc	(___fltol@f1+1)^0,f,c
  6474  003D1E  2254               	addwfc	(___fltol@f1+2)^0,f,c
  6475  003D20  2255               	addwfc	(___fltol@f1+3)^0,f,c
  6476  003D22                     l5844:
  6477  003D22  C052  F052         	movff	___fltol@f1,?___fltol
  6478  003D26  C053  F053         	movff	___fltol@f1+1,?___fltol+1
  6479  003D2A  C054  F054         	movff	___fltol@f1+2,?___fltol+2
  6480  003D2E  C055  F055         	movff	___fltol@f1+3,?___fltol+3
  6481  003D32                     l505:
  6482  003D32  0012               	return		;funcret
  6483  003D34                     __end_of___fltol:
  6484                           	callstack 0
  6485                           
  6486 ;; *************** function ___flsub *****************
  6487 ;; Defined at:
  6488 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  6489 ;; Parameters:    Size  Location     Type
  6490 ;;  b               4   81[COMRAM] long 
  6491 ;;  a               4   85[COMRAM] long 
  6492 ;; Auto vars:     Size  Location     Type
  6493 ;;		None
  6494 ;; Return value:  Size  Location     Type
  6495 ;;                  4   81[COMRAM] long 
  6496 ;; Registers used:
  6497 ;;		wreg, status,2, status,0, cstack
  6498 ;; Tracked objects:
  6499 ;;		On entry : 0/0
  6500 ;;		On exit  : 0/0
  6501 ;;		Unchanged: 0/0
  6502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6503 ;;      Params:         8       0       0       0       0       0       0       0       0
  6504 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6505 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6506 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6507 ;;Total ram usage:        8 bytes
  6508 ;; Hardware stack levels used:    1
  6509 ;; Hardware stack levels required when called:    3
  6510 ;; This function calls:
  6511 ;;		___fladd
  6512 ;; This function is called by:
  6513 ;;		_efgtoa
  6514 ;; This function uses a non-reentrant model
  6515 ;;
  6516                           
  6517                           	psect	text16
  6518  004950                     __ptext16:
  6519                           	callstack 0
  6520  004950                     ___flsub:
  6521                           	callstack 22
  6522  004950  0E00               	movlw	0
  6523  004952  1A56               	xorwf	___flsub@a^0,f,c
  6524  004954  0E00               	movlw	0
  6525  004956  1A57               	xorwf	(___flsub@a+1)^0,f,c
  6526  004958  0E00               	movlw	0
  6527  00495A  1A58               	xorwf	(___flsub@a+2)^0,f,c
  6528  00495C  0E80               	movlw	128
  6529  00495E  1A59               	xorwf	(___flsub@a+3)^0,f,c
  6530  004960  C052  F042         	movff	___flsub@b,___fladd@b
  6531  004964  C053  F043         	movff	___flsub@b+1,___fladd@b+1
  6532  004968  C054  F044         	movff	___flsub@b+2,___fladd@b+2
  6533  00496C  C055  F045         	movff	___flsub@b+3,___fladd@b+3
  6534  004970  C056  F046         	movff	___flsub@a,___fladd@a
  6535  004974  C057  F047         	movff	___flsub@a+1,___fladd@a+1
  6536  004978  C058  F048         	movff	___flsub@a+2,___fladd@a+2
  6537  00497C  C059  F049         	movff	___flsub@a+3,___fladd@a+3
  6538  004980  EC1E  F011         	call	___fladd	;wreg free
  6539  004984  C042  F052         	movff	?___fladd,?___flsub
  6540  004988  C043  F053         	movff	?___fladd+1,?___flsub+1
  6541  00498C  C044  F054         	movff	?___fladd+2,?___flsub+2
  6542  004990  C045  F055         	movff	?___fladd+3,?___flsub+3
  6543  004994  0012               	return		;funcret
  6544  004996                     __end_of___flsub:
  6545                           	callstack 0
  6546                           
  6547 ;; *************** function ___fladd *****************
  6548 ;; Defined at:
  6549 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  6550 ;; Parameters:    Size  Location     Type
  6551 ;;  b               4   65[COMRAM] long 
  6552 ;;  a               4   69[COMRAM] long 
  6553 ;; Auto vars:     Size  Location     Type
  6554 ;;  grs             1   80[COMRAM] unsigned char 
  6555 ;;  bexp            1   79[COMRAM] unsigned char 
  6556 ;;  aexp            1   78[COMRAM] unsigned char 
  6557 ;;  signs           1   77[COMRAM] unsigned char 
  6558 ;; Return value:  Size  Location     Type
  6559 ;;                  4   65[COMRAM] unsigned char 
  6560 ;; Registers used:
  6561 ;;		wreg, status,2, status,0
  6562 ;; Tracked objects:
  6563 ;;		On entry : 0/0
  6564 ;;		On exit  : 0/0
  6565 ;;		Unchanged: 0/0
  6566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6567 ;;      Params:         8       0       0       0       0       0       0       0       0
  6568 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6569 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6570 ;;      Totals:        16       0       0       0       0       0       0       0       0
  6571 ;;Total ram usage:       16 bytes
  6572 ;; Hardware stack levels used:    1
  6573 ;; Hardware stack levels required when called:    2
  6574 ;; This function calls:
  6575 ;;		Nothing
  6576 ;; This function is called by:
  6577 ;;		_UART_Init
  6578 ;;		___flsub
  6579 ;;		_efgtoa
  6580 ;; This function uses a non-reentrant model
  6581 ;;
  6582                           
  6583                           	psect	text17
  6584  00223C                     __ptext17:
  6585                           	callstack 0
  6586  00223C                     ___fladd:
  6587                           	callstack 27
  6588  00223C  5045               	movf	(___fladd@b+3)^0,w,c
  6589  00223E  0B80               	andlw	128
  6590  002240  6E4E               	movwf	___fladd@signs^0,c
  6591  002242  5045               	movf	(___fladd@b+3)^0,w,c
  6592  002244  2445               	addwf	(___fladd@b+3)^0,w,c
  6593  002246  6E50               	movwf	___fladd@bexp^0,c
  6594  002248  AE44               	btfss	(___fladd@b+2)^0,7,c
  6595  00224A  EF29  F011         	goto	u6131
  6596  00224E  EF2B  F011         	goto	u6130
  6597  002252                     u6131:
  6598  002252  EF2C  F011         	goto	l5100
  6599  002256                     u6130:
  6600  002256  8050               	bsf	___fladd@bexp^0,0,c
  6601  002258                     l5100:
  6602  002258  5050               	movf	___fladd@bexp^0,w,c
  6603  00225A  B4D8               	btfsc	status,2,c
  6604  00225C  EF32  F011         	goto	u6141
  6605  002260  EF34  F011         	goto	u6140
  6606  002264                     u6141:
  6607  002264  EF49  F011         	goto	l5110
  6608  002268                     u6140:
  6609  002268  2850               	incf	___fladd@bexp^0,w,c
  6610  00226A  A4D8               	btfss	status,2,c
  6611  00226C  EF3A  F011         	goto	u6151
  6612  002270  EF3C  F011         	goto	u6150
  6613  002274                     u6151:
  6614  002274  EF44  F011         	goto	l5106
  6615  002278                     u6150:
  6616  002278  0E00               	movlw	0
  6617  00227A  6E42               	movwf	___fladd@b^0,c
  6618  00227C  0E00               	movlw	0
  6619  00227E  6E43               	movwf	(___fladd@b+1)^0,c
  6620  002280  0E00               	movlw	0
  6621  002282  6E44               	movwf	(___fladd@b+2)^0,c
  6622  002284  0E00               	movlw	0
  6623  002286  6E45               	movwf	(___fladd@b+3)^0,c
  6624  002288                     l5106:
  6625  002288  8E44               	bsf	(___fladd@b+2)^0,7,c
  6626  00228A  0E00               	movlw	0
  6627  00228C  6E45               	movwf	(___fladd@b+3)^0,c
  6628  00228E  EF51  F011         	goto	l5112
  6629  002292                     l5110:
  6630  002292  0E00               	movlw	0
  6631  002294  6E42               	movwf	___fladd@b^0,c
  6632  002296  0E00               	movlw	0
  6633  002298  6E43               	movwf	(___fladd@b+1)^0,c
  6634  00229A  0E00               	movlw	0
  6635  00229C  6E44               	movwf	(___fladd@b+2)^0,c
  6636  00229E  0E00               	movlw	0
  6637  0022A0  6E45               	movwf	(___fladd@b+3)^0,c
  6638  0022A2                     l5112:
  6639  0022A2  5049               	movf	(___fladd@a+3)^0,w,c
  6640  0022A4  0B80               	andlw	128
  6641  0022A6  6E4F               	movwf	___fladd@aexp^0,c
  6642  0022A8  504E               	movf	___fladd@signs^0,w,c
  6643  0022AA  184F               	xorwf	___fladd@aexp^0,w,c
  6644  0022AC  B4D8               	btfsc	status,2,c
  6645  0022AE  EF5B  F011         	goto	u6161
  6646  0022B2  EF5D  F011         	goto	u6160
  6647  0022B6                     u6161:
  6648  0022B6  EF5E  F011         	goto	l5118
  6649  0022BA                     u6160:
  6650  0022BA  8C4E               	bsf	___fladd@signs^0,6,c
  6651  0022BC                     l5118:
  6652  0022BC  5049               	movf	(___fladd@a+3)^0,w,c
  6653  0022BE  2449               	addwf	(___fladd@a+3)^0,w,c
  6654  0022C0  6E4F               	movwf	___fladd@aexp^0,c
  6655  0022C2  AE48               	btfss	(___fladd@a+2)^0,7,c
  6656  0022C4  EF66  F011         	goto	u6171
  6657  0022C8  EF68  F011         	goto	u6170
  6658  0022CC                     u6171:
  6659  0022CC  EF69  F011         	goto	l5124
  6660  0022D0                     u6170:
  6661  0022D0  804F               	bsf	___fladd@aexp^0,0,c
  6662  0022D2                     l5124:
  6663  0022D2  504F               	movf	___fladd@aexp^0,w,c
  6664  0022D4  B4D8               	btfsc	status,2,c
  6665  0022D6  EF6F  F011         	goto	u6181
  6666  0022DA  EF71  F011         	goto	u6180
  6667  0022DE                     u6181:
  6668  0022DE  EF86  F011         	goto	l5134
  6669  0022E2                     u6180:
  6670  0022E2  284F               	incf	___fladd@aexp^0,w,c
  6671  0022E4  A4D8               	btfss	status,2,c
  6672  0022E6  EF77  F011         	goto	u6191
  6673  0022EA  EF79  F011         	goto	u6190
  6674  0022EE                     u6191:
  6675  0022EE  EF81  F011         	goto	l5130
  6676  0022F2                     u6190:
  6677  0022F2  0E00               	movlw	0
  6678  0022F4  6E46               	movwf	___fladd@a^0,c
  6679  0022F6  0E00               	movlw	0
  6680  0022F8  6E47               	movwf	(___fladd@a+1)^0,c
  6681  0022FA  0E00               	movlw	0
  6682  0022FC  6E48               	movwf	(___fladd@a+2)^0,c
  6683  0022FE  0E00               	movlw	0
  6684  002300  6E49               	movwf	(___fladd@a+3)^0,c
  6685  002302                     l5130:
  6686  002302  8E48               	bsf	(___fladd@a+2)^0,7,c
  6687  002304  0E00               	movlw	0
  6688  002306  6E49               	movwf	(___fladd@a+3)^0,c
  6689  002308  EF8E  F011         	goto	l5136
  6690  00230C                     l5134:
  6691  00230C  0E00               	movlw	0
  6692  00230E  6E46               	movwf	___fladd@a^0,c
  6693  002310  0E00               	movlw	0
  6694  002312  6E47               	movwf	(___fladd@a+1)^0,c
  6695  002314  0E00               	movlw	0
  6696  002316  6E48               	movwf	(___fladd@a+2)^0,c
  6697  002318  0E00               	movlw	0
  6698  00231A  6E49               	movwf	(___fladd@a+3)^0,c
  6699  00231C                     l5136:
  6700  00231C  5050               	movf	___fladd@bexp^0,w,c
  6701  00231E  5C4F               	subwf	___fladd@aexp^0,w,c
  6702  002320  B0D8               	btfsc	status,0,c
  6703  002322  EF95  F011         	goto	u6201
  6704  002326  EF97  F011         	goto	u6200
  6705  00232A                     u6201:
  6706  00232A  EFBE  F011         	goto	l5172
  6707  00232E                     u6200:
  6708  00232E  AC4E               	btfss	___fladd@signs^0,6,c
  6709  002330  EF9C  F011         	goto	u6211
  6710  002334  EF9E  F011         	goto	u6210
  6711  002338                     u6211:
  6712  002338  EFA0  F011         	goto	l5142
  6713  00233C                     u6210:
  6714  00233C  0E80               	movlw	128
  6715  00233E  1A4E               	xorwf	___fladd@signs^0,f,c
  6716  002340                     l5142:
  6717  002340  C050  F051         	movff	___fladd@bexp,___fladd@grs
  6718  002344  C04F  F050         	movff	___fladd@aexp,___fladd@bexp
  6719  002348  C051  F04F         	movff	___fladd@grs,___fladd@aexp
  6720  00234C  C042  F051         	movff	___fladd@b,___fladd@grs
  6721  002350  C046  F042         	movff	___fladd@a,___fladd@b
  6722  002354  C051  F046         	movff	___fladd@grs,___fladd@a
  6723  002358  C043  F051         	movff	___fladd@b+1,___fladd@grs
  6724  00235C  C047  F043         	movff	___fladd@a+1,___fladd@b+1
  6725  002360  C051  F047         	movff	___fladd@grs,___fladd@a+1
  6726  002364  C044  F051         	movff	___fladd@b+2,___fladd@grs
  6727  002368  C048  F044         	movff	___fladd@a+2,___fladd@b+2
  6728  00236C  C051  F048         	movff	___fladd@grs,___fladd@a+2
  6729  002370  C045  F051         	movff	___fladd@b+3,___fladd@grs
  6730  002374  C049  F045         	movff	___fladd@a+3,___fladd@b+3
  6731  002378  C051  F049         	movff	___fladd@grs,___fladd@a+3
  6732  00237C                     l5172:
  6733  00237C  0E00               	movlw	0
  6734  00237E  6E51               	movwf	___fladd@grs^0,c
  6735  002380  5050               	movf	___fladd@bexp^0,w,c
  6736  002382  C04F  F04A         	movff	___fladd@aexp,??___fladd
  6737  002386  6A4B               	clrf	(??___fladd+1)^0,c
  6738  002388  5E4A               	subwf	??___fladd^0,f,c
  6739  00238A  0E00               	movlw	0
  6740  00238C  5A4B               	subwfb	(??___fladd+1)^0,f,c
  6741  00238E  BE4B               	btfsc	(??___fladd+1)^0,7,c
  6742  002390  EFD3  F011         	goto	u6221
  6743  002394  504B               	movf	(??___fladd+1)^0,w,c
  6744  002396  E109               	bnz	u6220
  6745  002398  0E1A               	movlw	26
  6746  00239A  5C4A               	subwf	??___fladd^0,w,c
  6747  00239C  A0D8               	btfss	status,0,c
  6748  00239E  EFD3  F011         	goto	u6221
  6749  0023A2  EFD5  F011         	goto	u6220
  6750  0023A6                     u6221:
  6751  0023A6  EF0C  F012         	goto	l737
  6752  0023AA                     u6220:
  6753  0023AA  5042               	movf	___fladd@b^0,w,c
  6754  0023AC  1043               	iorwf	(___fladd@b+1)^0,w,c
  6755  0023AE  1044               	iorwf	(___fladd@b+2)^0,w,c
  6756  0023B0  1045               	iorwf	(___fladd@b+3)^0,w,c
  6757  0023B2  A4D8               	btfss	status,2,c
  6758  0023B4  EFDE  F011         	goto	u6231
  6759  0023B8  EFE1  F011         	goto	u6230
  6760  0023BC                     u6231:
  6761  0023BC  0E01               	movlw	1
  6762  0023BE  EFE2  F011         	goto	u6240
  6763  0023C2                     u6230:
  6764  0023C2  0E00               	movlw	0
  6765  0023C4                     u6240:
  6766  0023C4  6E51               	movwf	___fladd@grs^0,c
  6767  0023C6  0E00               	movlw	0
  6768  0023C8  6E42               	movwf	___fladd@b^0,c
  6769  0023CA  0E00               	movlw	0
  6770  0023CC  6E43               	movwf	(___fladd@b+1)^0,c
  6771  0023CE  0E00               	movlw	0
  6772  0023D0  6E44               	movwf	(___fladd@b+2)^0,c
  6773  0023D2  0E00               	movlw	0
  6774  0023D4  6E45               	movwf	(___fladd@b+3)^0,c
  6775  0023D6  C04F  F050         	movff	___fladd@aexp,___fladd@bexp
  6776  0023DA  EF15  F012         	goto	l736
  6777  0023DE                     l738:
  6778  0023DE  A051               	btfss	___fladd@grs^0,0,c
  6779  0023E0  EFF4  F011         	goto	u6251
  6780  0023E4  EFF6  F011         	goto	u6250
  6781  0023E8                     u6251:
  6782  0023E8  EFFC  F011         	goto	l5184
  6783  0023EC                     u6250:
  6784  0023EC  90D8               	bcf	status,0,c
  6785  0023EE  3051               	rrcf	___fladd@grs^0,w,c
  6786  0023F0  0901               	iorlw	1
  6787  0023F2  6E51               	movwf	___fladd@grs^0,c
  6788  0023F4  EFFE  F011         	goto	l5186
  6789  0023F8                     l5184:
  6790  0023F8  90D8               	bcf	status,0,c
  6791  0023FA  3251               	rrcf	___fladd@grs^0,f,c
  6792  0023FC                     l5186:
  6793  0023FC  A042               	btfss	___fladd@b^0,0,c
  6794  0023FE  EF03  F012         	goto	u6261
  6795  002402  EF05  F012         	goto	u6260
  6796  002406                     u6261:
  6797  002406  EF06  F012         	goto	l5190
  6798  00240A                     u6260:
  6799  00240A  8E51               	bsf	___fladd@grs^0,7,c
  6800  00240C                     l5190:
  6801  00240C  3445               	rlcf	(___fladd@b+3)^0,w,c
  6802  00240E  3245               	rrcf	(___fladd@b+3)^0,f,c
  6803  002410  3244               	rrcf	(___fladd@b+2)^0,f,c
  6804  002412  3243               	rrcf	(___fladd@b+1)^0,f,c
  6805  002414  3242               	rrcf	___fladd@b^0,f,c
  6806  002416  2A50               	incf	___fladd@bexp^0,f,c
  6807  002418                     l737:
  6808  002418  504F               	movf	___fladd@aexp^0,w,c
  6809  00241A  5C50               	subwf	___fladd@bexp^0,w,c
  6810  00241C  A0D8               	btfss	status,0,c
  6811  00241E  EF13  F012         	goto	u6271
  6812  002422  EF15  F012         	goto	u6270
  6813  002426                     u6271:
  6814  002426  EFEF  F011         	goto	l738
  6815  00242A                     u6270:
  6816  00242A                     l736:
  6817  00242A  BC4E               	btfsc	___fladd@signs^0,6,c
  6818  00242C  EF1A  F012         	goto	u6281
  6819  002430  EF1C  F012         	goto	u6280
  6820  002434                     u6281:
  6821  002434  EF5C  F012         	goto	l5218
  6822  002438                     u6280:
  6823  002438  5050               	movf	___fladd@bexp^0,w,c
  6824  00243A  A4D8               	btfss	status,2,c
  6825  00243C  EF22  F012         	goto	u6291
  6826  002440  EF24  F012         	goto	u6290
  6827  002444                     u6291:
  6828  002444  EF2E  F012         	goto	l5200
  6829  002448                     u6290:
  6830  002448  0E00               	movlw	0
  6831  00244A  6E42               	movwf	?___fladd^0,c
  6832  00244C  0E00               	movlw	0
  6833  00244E  6E43               	movwf	(?___fladd+1)^0,c
  6834  002450  0E00               	movlw	0
  6835  002452  6E44               	movwf	(?___fladd+2)^0,c
  6836  002454  0E00               	movlw	0
  6837  002456  6E45               	movwf	(?___fladd+3)^0,c
  6838  002458  EF7D  F013         	goto	l745
  6839  00245C                     l5200:
  6840  00245C  5046               	movf	___fladd@a^0,w,c
  6841  00245E  2642               	addwf	___fladd@b^0,f,c
  6842  002460  5047               	movf	(___fladd@a+1)^0,w,c
  6843  002462  2243               	addwfc	(___fladd@b+1)^0,f,c
  6844  002464  5048               	movf	(___fladd@a+2)^0,w,c
  6845  002466  2244               	addwfc	(___fladd@b+2)^0,f,c
  6846  002468  5049               	movf	(___fladd@a+3)^0,w,c
  6847  00246A  2245               	addwfc	(___fladd@b+3)^0,f,c
  6848  00246C  A045               	btfss	(___fladd@b+3)^0,0,c
  6849  00246E  EF3B  F012         	goto	u6301
  6850  002472  EF3D  F012         	goto	u6300
  6851  002476                     u6301:
  6852  002476  EFE9  F012         	goto	l5254
  6853  00247A                     u6300:
  6854  00247A  A051               	btfss	___fladd@grs^0,0,c
  6855  00247C  EF42  F012         	goto	u6311
  6856  002480  EF44  F012         	goto	u6310
  6857  002484                     u6311:
  6858  002484  EF4A  F012         	goto	l5208
  6859  002488                     u6310:
  6860  002488  90D8               	bcf	status,0,c
  6861  00248A  3051               	rrcf	___fladd@grs^0,w,c
  6862  00248C  0901               	iorlw	1
  6863  00248E  6E51               	movwf	___fladd@grs^0,c
  6864  002490  EF4C  F012         	goto	l5210
  6865  002494                     l5208:
  6866  002494  90D8               	bcf	status,0,c
  6867  002496  3251               	rrcf	___fladd@grs^0,f,c
  6868  002498                     l5210:
  6869  002498  A042               	btfss	___fladd@b^0,0,c
  6870  00249A  EF51  F012         	goto	u6321
  6871  00249E  EF53  F012         	goto	u6320
  6872  0024A2                     u6321:
  6873  0024A2  EF54  F012         	goto	l5214
  6874  0024A6                     u6320:
  6875  0024A6  8E51               	bsf	___fladd@grs^0,7,c
  6876  0024A8                     l5214:
  6877  0024A8  3445               	rlcf	(___fladd@b+3)^0,w,c
  6878  0024AA  3245               	rrcf	(___fladd@b+3)^0,f,c
  6879  0024AC  3244               	rrcf	(___fladd@b+2)^0,f,c
  6880  0024AE  3243               	rrcf	(___fladd@b+1)^0,f,c
  6881  0024B0  3242               	rrcf	___fladd@b^0,f,c
  6882  0024B2  2A50               	incf	___fladd@bexp^0,f,c
  6883  0024B4  EFE9  F012         	goto	l5254
  6884  0024B8                     l5218:
  6885  0024B8  5046               	movf	___fladd@a^0,w,c
  6886  0024BA  5C42               	subwf	___fladd@b^0,w,c
  6887  0024BC  5047               	movf	(___fladd@a+1)^0,w,c
  6888  0024BE  5843               	subwfb	(___fladd@b+1)^0,w,c
  6889  0024C0  5048               	movf	(___fladd@a+2)^0,w,c
  6890  0024C2  5844               	subwfb	(___fladd@b+2)^0,w,c
  6891  0024C4  5045               	movf	(___fladd@b+3)^0,w,c
  6892  0024C6  0A80               	xorlw	128
  6893  0024C8  6E4A               	movwf	??___fladd^0,c
  6894  0024CA  5049               	movf	(___fladd@a+3)^0,w,c
  6895  0024CC  0A80               	xorlw	128
  6896  0024CE  584A               	subwfb	??___fladd^0,w,c
  6897  0024D0  B0D8               	btfsc	status,0,c
  6898  0024D2  EF6D  F012         	goto	u6331
  6899  0024D6  EF6F  F012         	goto	u6330
  6900  0024DA                     u6331:
  6901  0024DA  EF9A  F012         	goto	l5228
  6902  0024DE                     u6330:
  6903  0024DE  5042               	movf	___fladd@b^0,w,c
  6904  0024E0  5C46               	subwf	___fladd@a^0,w,c
  6905  0024E2  6E4A               	movwf	??___fladd^0,c
  6906  0024E4  5043               	movf	(___fladd@b+1)^0,w,c
  6907  0024E6  5847               	subwfb	(___fladd@a+1)^0,w,c
  6908  0024E8  6E4B               	movwf	(??___fladd+1)^0,c
  6909  0024EA  5044               	movf	(___fladd@b+2)^0,w,c
  6910  0024EC  5848               	subwfb	(___fladd@a+2)^0,w,c
  6911  0024EE  6E4C               	movwf	(??___fladd+2)^0,c
  6912  0024F0  5045               	movf	(___fladd@b+3)^0,w,c
  6913  0024F2  5849               	subwfb	(___fladd@a+3)^0,w,c
  6914  0024F4  6E4D               	movwf	(??___fladd+3)^0,c
  6915  0024F6  0EFF               	movlw	255
  6916  0024F8  244A               	addwf	??___fladd^0,w,c
  6917  0024FA  6E42               	movwf	___fladd@b^0,c
  6918  0024FC  0EFF               	movlw	255
  6919  0024FE  204B               	addwfc	(??___fladd+1)^0,w,c
  6920  002500  6E43               	movwf	(___fladd@b+1)^0,c
  6921  002502  0EFF               	movlw	255
  6922  002504  204C               	addwfc	(??___fladd+2)^0,w,c
  6923  002506  6E44               	movwf	(___fladd@b+2)^0,c
  6924  002508  0EFF               	movlw	255
  6925  00250A  204D               	addwfc	(??___fladd+3)^0,w,c
  6926  00250C  6E45               	movwf	(___fladd@b+3)^0,c
  6927  00250E  0E80               	movlw	128
  6928  002510  1A4E               	xorwf	___fladd@signs^0,f,c
  6929  002512  6C51               	negf	___fladd@grs^0,c
  6930  002514  5051               	movf	___fladd@grs^0,w,c
  6931  002516  A4D8               	btfss	status,2,c
  6932  002518  EF90  F012         	goto	u6341
  6933  00251C  EF92  F012         	goto	u6340
  6934  002520                     u6341:
  6935  002520  EFA2  F012         	goto	l753
  6936  002524                     u6340:
  6937  002524  0E01               	movlw	1
  6938  002526  2642               	addwf	___fladd@b^0,f,c
  6939  002528  0E00               	movlw	0
  6940  00252A  2243               	addwfc	(___fladd@b+1)^0,f,c
  6941  00252C  2244               	addwfc	(___fladd@b+2)^0,f,c
  6942  00252E  2245               	addwfc	(___fladd@b+3)^0,f,c
  6943  002530  EFA2  F012         	goto	l753
  6944  002534                     l5228:
  6945  002534  5046               	movf	___fladd@a^0,w,c
  6946  002536  5E42               	subwf	___fladd@b^0,f,c
  6947  002538  5047               	movf	(___fladd@a+1)^0,w,c
  6948  00253A  5A43               	subwfb	(___fladd@b+1)^0,f,c
  6949  00253C  5048               	movf	(___fladd@a+2)^0,w,c
  6950  00253E  5A44               	subwfb	(___fladd@b+2)^0,f,c
  6951  002540  5049               	movf	(___fladd@a+3)^0,w,c
  6952  002542  5A45               	subwfb	(___fladd@b+3)^0,f,c
  6953  002544                     l753:
  6954  002544  5042               	movf	___fladd@b^0,w,c
  6955  002546  1043               	iorwf	(___fladd@b+1)^0,w,c
  6956  002548  1044               	iorwf	(___fladd@b+2)^0,w,c
  6957  00254A  1045               	iorwf	(___fladd@b+3)^0,w,c
  6958  00254C  A4D8               	btfss	status,2,c
  6959  00254E  EFAB  F012         	goto	u6351
  6960  002552  EFAD  F012         	goto	u6350
  6961  002556                     u6351:
  6962  002556  EFE2  F012         	goto	l5252
  6963  00255A                     u6350:
  6964  00255A  5051               	movf	___fladd@grs^0,w,c
  6965  00255C  A4D8               	btfss	status,2,c
  6966  00255E  EFB3  F012         	goto	u6361
  6967  002562  EFB5  F012         	goto	u6360
  6968  002566                     u6361:
  6969  002566  EFE2  F012         	goto	l5252
  6970  00256A                     u6360:
  6971  00256A  0E00               	movlw	0
  6972  00256C  6E42               	movwf	?___fladd^0,c
  6973  00256E  0E00               	movlw	0
  6974  002570  6E43               	movwf	(?___fladd+1)^0,c
  6975  002572  0E00               	movlw	0
  6976  002574  6E44               	movwf	(?___fladd+2)^0,c
  6977  002576  0E00               	movlw	0
  6978  002578  6E45               	movwf	(?___fladd+3)^0,c
  6979  00257A  EF7D  F013         	goto	l745
  6980  00257E                     l5236:
  6981  00257E  90D8               	bcf	status,0,c
  6982  002580  3642               	rlcf	___fladd@b^0,f,c
  6983  002582  3643               	rlcf	(___fladd@b+1)^0,f,c
  6984  002584  3644               	rlcf	(___fladd@b+2)^0,f,c
  6985  002586  3645               	rlcf	(___fladd@b+3)^0,f,c
  6986  002588  AE51               	btfss	___fladd@grs^0,7,c
  6987  00258A  EFC9  F012         	goto	u6371
  6988  00258E  EFCB  F012         	goto	u6370
  6989  002592                     u6371:
  6990  002592  EFCC  F012         	goto	l5242
  6991  002596                     u6370:
  6992  002596  8042               	bsf	___fladd@b^0,0,c
  6993  002598                     l5242:
  6994  002598  A051               	btfss	___fladd@grs^0,0,c
  6995  00259A  EFD1  F012         	goto	u6381
  6996  00259E  EFD3  F012         	goto	u6380
  6997  0025A2                     u6381:
  6998  0025A2  EFD7  F012         	goto	l5246
  6999  0025A6                     u6380:
  7000  0025A6  80D8               	bsf	status,0,c
  7001  0025A8  3651               	rlcf	___fladd@grs^0,f,c
  7002  0025AA  EFD9  F012         	goto	l5248
  7003  0025AE                     l5246:
  7004  0025AE  90D8               	bcf	status,0,c
  7005  0025B0  3651               	rlcf	___fladd@grs^0,f,c
  7006  0025B2                     l5248:
  7007  0025B2  5050               	movf	___fladd@bexp^0,w,c
  7008  0025B4  B4D8               	btfsc	status,2,c
  7009  0025B6  EFDF  F012         	goto	u6391
  7010  0025BA  EFE1  F012         	goto	u6390
  7011  0025BE                     u6391:
  7012  0025BE  EFE2  F012         	goto	l5252
  7013  0025C2                     u6390:
  7014  0025C2  0650               	decf	___fladd@bexp^0,f,c
  7015  0025C4                     l5252:
  7016  0025C4  AE44               	btfss	(___fladd@b+2)^0,7,c
  7017  0025C6  EFE7  F012         	goto	u6401
  7018  0025CA  EFE9  F012         	goto	u6400
  7019  0025CE                     u6401:
  7020  0025CE  EFBF  F012         	goto	l5236
  7021  0025D2                     u6400:
  7022  0025D2                     l5254:
  7023  0025D2  0E00               	movlw	0
  7024  0025D4  6E4F               	movwf	___fladd@aexp^0,c
  7025  0025D6  AE51               	btfss	___fladd@grs^0,7,c
  7026  0025D8  EFF0  F012         	goto	u6411
  7027  0025DC  EFF2  F012         	goto	u6410
  7028  0025E0                     u6411:
  7029  0025E0  EF0A  F013         	goto	l762
  7030  0025E4                     u6410:
  7031  0025E4  C051  F04A         	movff	___fladd@grs,??___fladd
  7032  0025E8  0E7F               	movlw	127
  7033  0025EA  164A               	andwf	??___fladd^0,f,c
  7034  0025EC  B4D8               	btfsc	status,2,c
  7035  0025EE  EFFB  F012         	goto	u6421
  7036  0025F2  EFFD  F012         	goto	u6420
  7037  0025F6                     u6421:
  7038  0025F6  EF01  F013         	goto	l763
  7039  0025FA                     u6420:
  7040  0025FA                     l5260:
  7041  0025FA  0E01               	movlw	1
  7042  0025FC  6E4F               	movwf	___fladd@aexp^0,c
  7043  0025FE  EF0A  F013         	goto	l762
  7044  002602                     l763:
  7045  002602  A042               	btfss	___fladd@b^0,0,c
  7046  002604  EF06  F013         	goto	u6431
  7047  002608  EF08  F013         	goto	u6430
  7048  00260C                     u6431:
  7049  00260C  EF0A  F013         	goto	l762
  7050  002610                     u6430:
  7051  002610  EFFD  F012         	goto	l5260
  7052  002614                     l762:
  7053  002614  504F               	movf	___fladd@aexp^0,w,c
  7054  002616  B4D8               	btfsc	status,2,c
  7055  002618  EF10  F013         	goto	u6441
  7056  00261C  EF12  F013         	goto	u6440
  7057  002620                     u6441:
  7058  002620  EF3D  F013         	goto	l5272
  7059  002624                     u6440:
  7060  002624  0E01               	movlw	1
  7061  002626  2642               	addwf	___fladd@b^0,f,c
  7062  002628  0E00               	movlw	0
  7063  00262A  2243               	addwfc	(___fladd@b+1)^0,f,c
  7064  00262C  2244               	addwfc	(___fladd@b+2)^0,f,c
  7065  00262E  2245               	addwfc	(___fladd@b+3)^0,f,c
  7066  002630  A045               	btfss	(___fladd@b+3)^0,0,c
  7067  002632  EF1D  F013         	goto	u6451
  7068  002636  EF1F  F013         	goto	u6450
  7069  00263A                     u6451:
  7070  00263A  EF3D  F013         	goto	l5272
  7071  00263E                     u6450:
  7072  00263E  C042  F04A         	movff	___fladd@b,??___fladd
  7073  002642  C043  F04B         	movff	___fladd@b+1,??___fladd+1
  7074  002646  C044  F04C         	movff	___fladd@b+2,??___fladd+2
  7075  00264A  C045  F04D         	movff	___fladd@b+3,??___fladd+3
  7076  00264E  344D               	rlcf	(??___fladd+3)^0,w,c
  7077  002650  324D               	rrcf	(??___fladd+3)^0,f,c
  7078  002652  324C               	rrcf	(??___fladd+2)^0,f,c
  7079  002654  324B               	rrcf	(??___fladd+1)^0,f,c
  7080  002656  324A               	rrcf	??___fladd^0,f,c
  7081  002658  C04A  F042         	movff	??___fladd,___fladd@b
  7082  00265C  C04B  F043         	movff	??___fladd+1,___fladd@b+1
  7083  002660  C04C  F044         	movff	??___fladd+2,___fladd@b+2
  7084  002664  C04D  F045         	movff	??___fladd+3,___fladd@b+3
  7085  002668  2850               	incf	___fladd@bexp^0,w,c
  7086  00266A  B4D8               	btfsc	status,2,c
  7087  00266C  EF3A  F013         	goto	u6461
  7088  002670  EF3C  F013         	goto	u6460
  7089  002674                     u6461:
  7090  002674  EF3D  F013         	goto	l5272
  7091  002678                     u6460:
  7092  002678  2A50               	incf	___fladd@bexp^0,f,c
  7093  00267A                     l5272:
  7094  00267A  2850               	incf	___fladd@bexp^0,w,c
  7095  00267C  B4D8               	btfsc	status,2,c
  7096  00267E  EF43  F013         	goto	u6471
  7097  002682  EF45  F013         	goto	u6470
  7098  002686                     u6471:
  7099  002686  EF4D  F013         	goto	l5276
  7100  00268A                     u6470:
  7101  00268A  5050               	movf	___fladd@bexp^0,w,c
  7102  00268C  A4D8               	btfss	status,2,c
  7103  00268E  EF4B  F013         	goto	u6481
  7104  002692  EF4D  F013         	goto	u6480
  7105  002696                     u6481:
  7106  002696  EF5F  F013         	goto	l5280
  7107  00269A                     u6480:
  7108  00269A                     l5276:
  7109  00269A  0E00               	movlw	0
  7110  00269C  6E42               	movwf	___fladd@b^0,c
  7111  00269E  0E00               	movlw	0
  7112  0026A0  6E43               	movwf	(___fladd@b+1)^0,c
  7113  0026A2  0E00               	movlw	0
  7114  0026A4  6E44               	movwf	(___fladd@b+2)^0,c
  7115  0026A6  0E00               	movlw	0
  7116  0026A8  6E45               	movwf	(___fladd@b+3)^0,c
  7117  0026AA  5050               	movf	___fladd@bexp^0,w,c
  7118  0026AC  A4D8               	btfss	status,2,c
  7119  0026AE  EF5B  F013         	goto	u6491
  7120  0026B2  EF5D  F013         	goto	u6490
  7121  0026B6                     u6491:
  7122  0026B6  EF5F  F013         	goto	l5280
  7123  0026BA                     u6490:
  7124  0026BA  0E00               	movlw	0
  7125  0026BC  6E4E               	movwf	___fladd@signs^0,c
  7126  0026BE                     l5280:
  7127  0026BE  A050               	btfss	___fladd@bexp^0,0,c
  7128  0026C0  EF64  F013         	goto	u6501
  7129  0026C4  EF66  F013         	goto	u6500
  7130  0026C8                     u6501:
  7131  0026C8  EF69  F013         	goto	l5284
  7132  0026CC                     u6500:
  7133  0026CC  8E44               	bsf	(___fladd@b+2)^0,7,c
  7134  0026CE  EF6A  F013         	goto	l5286
  7135  0026D2                     l5284:
  7136  0026D2  9E44               	bcf	(___fladd@b+2)^0,7,c
  7137  0026D4                     l5286:
  7138  0026D4  90D8               	bcf	status,0,c
  7139  0026D6  3050               	rrcf	___fladd@bexp^0,w,c
  7140  0026D8  6E45               	movwf	(___fladd@b+3)^0,c
  7141  0026DA  AE4E               	btfss	___fladd@signs^0,7,c
  7142  0026DC  EF72  F013         	goto	u6511
  7143  0026E0  EF74  F013         	goto	u6510
  7144  0026E4                     u6511:
  7145  0026E4  EF75  F013         	goto	l5292
  7146  0026E8                     u6510:
  7147  0026E8  8E45               	bsf	(___fladd@b+3)^0,7,c
  7148  0026EA                     l5292:
  7149  0026EA  C042  F042         	movff	___fladd@b,?___fladd
  7150  0026EE  C043  F043         	movff	___fladd@b+1,?___fladd+1
  7151  0026F2  C044  F044         	movff	___fladd@b+2,?___fladd+2
  7152  0026F6  C045  F045         	movff	___fladd@b+3,?___fladd+3
  7153  0026FA                     l745:
  7154  0026FA  0012               	return		;funcret
  7155  0026FC                     __end_of___fladd:
  7156                           	callstack 0
  7157                           
  7158 ;; *************** function ___flneg *****************
  7159 ;; Defined at:
  7160 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flneg.c"
  7161 ;; Parameters:    Size  Location     Type
  7162 ;;  f1              4    1[COMRAM] unsigned char 
  7163 ;; Auto vars:     Size  Location     Type
  7164 ;;		None
  7165 ;; Return value:  Size  Location     Type
  7166 ;;                  4    1[COMRAM] unsigned char 
  7167 ;; Registers used:
  7168 ;;		wreg, status,2, status,0
  7169 ;; Tracked objects:
  7170 ;;		On entry : 0/0
  7171 ;;		On exit  : 0/0
  7172 ;;		Unchanged: 0/0
  7173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7174 ;;      Params:         4       0       0       0       0       0       0       0       0
  7175 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7176 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7177 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7178 ;;Total ram usage:        4 bytes
  7179 ;; Hardware stack levels used:    1
  7180 ;; Hardware stack levels required when called:    2
  7181 ;; This function calls:
  7182 ;;		Nothing
  7183 ;; This function is called by:
  7184 ;;		_efgtoa
  7185 ;; This function uses a non-reentrant model
  7186 ;;
  7187                           
  7188                           	psect	text18
  7189  004A98                     __ptext18:
  7190                           	callstack 0
  7191  004A98                     ___flneg:
  7192                           	callstack 23
  7193  004A98  5002               	movf	___flneg@f1^0,w,c
  7194  004A9A  1003               	iorwf	(___flneg@f1+1)^0,w,c
  7195  004A9C  1004               	iorwf	(___flneg@f1+2)^0,w,c
  7196  004A9E  1005               	iorwf	(___flneg@f1+3)^0,w,c
  7197  004AA0  B4D8               	btfsc	status,2,c
  7198  004AA2  EF55  F025         	goto	u7311
  7199  004AA6  EF57  F025         	goto	u7310
  7200  004AAA                     u7311:
  7201  004AAA  EF5F  F025         	goto	l5800
  7202  004AAE                     u7310:
  7203  004AAE  0E00               	movlw	0
  7204  004AB0  1A02               	xorwf	___flneg@f1^0,f,c
  7205  004AB2  0E00               	movlw	0
  7206  004AB4  1A03               	xorwf	(___flneg@f1+1)^0,f,c
  7207  004AB6  0E00               	movlw	0
  7208  004AB8  1A04               	xorwf	(___flneg@f1+2)^0,f,c
  7209  004ABA  0E80               	movlw	128
  7210  004ABC  1A05               	xorwf	(___flneg@f1+3)^0,f,c
  7211  004ABE                     l5800:
  7212  004ABE  C002  F002         	movff	___flneg@f1,?___flneg
  7213  004AC2  C003  F003         	movff	___flneg@f1+1,?___flneg+1
  7214  004AC6  C004  F004         	movff	___flneg@f1+2,?___flneg+2
  7215  004ACA  C005  F005         	movff	___flneg@f1+3,?___flneg+3
  7216  004ACE  0012               	return		;funcret
  7217  004AD0                     __end_of___flneg:
  7218                           	callstack 0
  7219                           
  7220 ;; *************** function ___flmul *****************
  7221 ;; Defined at:
  7222 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
  7223 ;; Parameters:    Size  Location     Type
  7224 ;;  b               4   15[COMRAM] unsigned char 
  7225 ;;  a               4   19[COMRAM] unsigned char 
  7226 ;; Auto vars:     Size  Location     Type
  7227 ;;  prod            4   34[COMRAM] struct .
  7228 ;;  grs             4   29[COMRAM] unsigned long 
  7229 ;;  temp            2   38[COMRAM] struct .
  7230 ;;  bexp            1   33[COMRAM] unsigned char 
  7231 ;;  aexp            1   28[COMRAM] unsigned char 
  7232 ;;  sign            1   27[COMRAM] unsigned char 
  7233 ;; Return value:  Size  Location     Type
  7234 ;;                  4   15[COMRAM] unsigned char 
  7235 ;; Registers used:
  7236 ;;		wreg, status,2, status,0, prodl, prodh
  7237 ;; Tracked objects:
  7238 ;;		On entry : 0/0
  7239 ;;		On exit  : 0/0
  7240 ;;		Unchanged: 0/0
  7241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7242 ;;      Params:         8       0       0       0       0       0       0       0       0
  7243 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7244 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7245 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7246 ;;Total ram usage:       25 bytes
  7247 ;; Hardware stack levels used:    1
  7248 ;; Hardware stack levels required when called:    2
  7249 ;; This function calls:
  7250 ;;		Nothing
  7251 ;; This function is called by:
  7252 ;;		_MenuP
  7253 ;;		_UART_Init
  7254 ;;		_efgtoa
  7255 ;; This function uses a non-reentrant model
  7256 ;;
  7257                           
  7258                           	psect	text19
  7259  0026FC                     __ptext19:
  7260                           	callstack 0
  7261  0026FC                     ___flmul:
  7262                           	callstack 27
  7263  0026FC  5013               	movf	(___flmul@b+3)^0,w,c
  7264  0026FE  0B80               	andlw	128
  7265  002700  6E1C               	movwf	___flmul@sign^0,c
  7266  002702  5013               	movf	(___flmul@b+3)^0,w,c
  7267  002704  2413               	addwf	(___flmul@b+3)^0,w,c
  7268  002706  6E22               	movwf	___flmul@bexp^0,c
  7269  002708  AE12               	btfss	(___flmul@b+2)^0,7,c
  7270  00270A  EF89  F013         	goto	u6921
  7271  00270E  EF8B  F013         	goto	u6920
  7272  002712                     u6921:
  7273  002712  EF8C  F013         	goto	l5548
  7274  002716                     u6920:
  7275  002716  8022               	bsf	___flmul@bexp^0,0,c
  7276  002718                     l5548:
  7277  002718  5022               	movf	___flmul@bexp^0,w,c
  7278  00271A  B4D8               	btfsc	status,2,c
  7279  00271C  EF92  F013         	goto	u6931
  7280  002720  EF94  F013         	goto	u6930
  7281  002724                     u6931:
  7282  002724  EFA7  F013         	goto	l5556
  7283  002728                     u6930:
  7284  002728  2822               	incf	___flmul@bexp^0,w,c
  7285  00272A  A4D8               	btfss	status,2,c
  7286  00272C  EF9A  F013         	goto	u6941
  7287  002730  EF9C  F013         	goto	u6940
  7288  002734                     u6941:
  7289  002734  EFA4  F013         	goto	l5554
  7290  002738                     u6940:
  7291  002738  0E00               	movlw	0
  7292  00273A  6E10               	movwf	___flmul@b^0,c
  7293  00273C  0E00               	movlw	0
  7294  00273E  6E11               	movwf	(___flmul@b+1)^0,c
  7295  002740  0E00               	movlw	0
  7296  002742  6E12               	movwf	(___flmul@b+2)^0,c
  7297  002744  0E00               	movlw	0
  7298  002746  6E13               	movwf	(___flmul@b+3)^0,c
  7299  002748                     l5554:
  7300  002748  8E12               	bsf	(___flmul@b+2)^0,7,c
  7301  00274A  EFAF  F013         	goto	l5558
  7302  00274E                     l5556:
  7303  00274E  0E00               	movlw	0
  7304  002750  6E10               	movwf	___flmul@b^0,c
  7305  002752  0E00               	movlw	0
  7306  002754  6E11               	movwf	(___flmul@b+1)^0,c
  7307  002756  0E00               	movlw	0
  7308  002758  6E12               	movwf	(___flmul@b+2)^0,c
  7309  00275A  0E00               	movlw	0
  7310  00275C  6E13               	movwf	(___flmul@b+3)^0,c
  7311  00275E                     l5558:
  7312  00275E  5017               	movf	(___flmul@a+3)^0,w,c
  7313  002760  0B80               	andlw	128
  7314  002762  1A1C               	xorwf	___flmul@sign^0,f,c
  7315  002764  5017               	movf	(___flmul@a+3)^0,w,c
  7316  002766  2417               	addwf	(___flmul@a+3)^0,w,c
  7317  002768  6E1D               	movwf	___flmul@aexp^0,c
  7318  00276A  AE16               	btfss	(___flmul@a+2)^0,7,c
  7319  00276C  EFBA  F013         	goto	u6951
  7320  002770  EFBC  F013         	goto	u6950
  7321  002774                     u6951:
  7322  002774  EFBD  F013         	goto	l5566
  7323  002778                     u6950:
  7324  002778  801D               	bsf	___flmul@aexp^0,0,c
  7325  00277A                     l5566:
  7326  00277A  501D               	movf	___flmul@aexp^0,w,c
  7327  00277C  B4D8               	btfsc	status,2,c
  7328  00277E  EFC3  F013         	goto	u6961
  7329  002782  EFC5  F013         	goto	u6960
  7330  002786                     u6961:
  7331  002786  EFD8  F013         	goto	l5574
  7332  00278A                     u6960:
  7333  00278A  281D               	incf	___flmul@aexp^0,w,c
  7334  00278C  A4D8               	btfss	status,2,c
  7335  00278E  EFCB  F013         	goto	u6971
  7336  002792  EFCD  F013         	goto	u6970
  7337  002796                     u6971:
  7338  002796  EFD5  F013         	goto	l5572
  7339  00279A                     u6970:
  7340  00279A  0E00               	movlw	0
  7341  00279C  6E14               	movwf	___flmul@a^0,c
  7342  00279E  0E00               	movlw	0
  7343  0027A0  6E15               	movwf	(___flmul@a+1)^0,c
  7344  0027A2  0E00               	movlw	0
  7345  0027A4  6E16               	movwf	(___flmul@a+2)^0,c
  7346  0027A6  0E00               	movlw	0
  7347  0027A8  6E17               	movwf	(___flmul@a+3)^0,c
  7348  0027AA                     l5572:
  7349  0027AA  8E16               	bsf	(___flmul@a+2)^0,7,c
  7350  0027AC  EFE0  F013         	goto	l822
  7351  0027B0                     l5574:
  7352  0027B0  0E00               	movlw	0
  7353  0027B2  6E14               	movwf	___flmul@a^0,c
  7354  0027B4  0E00               	movlw	0
  7355  0027B6  6E15               	movwf	(___flmul@a+1)^0,c
  7356  0027B8  0E00               	movlw	0
  7357  0027BA  6E16               	movwf	(___flmul@a+2)^0,c
  7358  0027BC  0E00               	movlw	0
  7359  0027BE  6E17               	movwf	(___flmul@a+3)^0,c
  7360  0027C0                     l822:
  7361  0027C0  501D               	movf	___flmul@aexp^0,w,c
  7362  0027C2  B4D8               	btfsc	status,2,c
  7363  0027C4  EFE6  F013         	goto	u6981
  7364  0027C8  EFE8  F013         	goto	u6980
  7365  0027CC                     u6981:
  7366  0027CC  EFF0  F013         	goto	l5578
  7367  0027D0                     u6980:
  7368  0027D0  5022               	movf	___flmul@bexp^0,w,c
  7369  0027D2  A4D8               	btfss	status,2,c
  7370  0027D4  EFEE  F013         	goto	u6991
  7371  0027D8  EFF0  F013         	goto	u6990
  7372  0027DC                     u6991:
  7373  0027DC  EFFA  F013         	goto	l5582
  7374  0027E0                     u6990:
  7375  0027E0                     l5578:
  7376  0027E0  0E00               	movlw	0
  7377  0027E2  6E10               	movwf	?___flmul^0,c
  7378  0027E4  0E00               	movlw	0
  7379  0027E6  6E11               	movwf	(?___flmul+1)^0,c
  7380  0027E8  0E00               	movlw	0
  7381  0027EA  6E12               	movwf	(?___flmul+2)^0,c
  7382  0027EC  0E00               	movlw	0
  7383  0027EE  6E13               	movwf	(?___flmul+3)^0,c
  7384  0027F0  EF92  F015         	goto	l826
  7385  0027F4                     l5582:
  7386  0027F4  5016               	movf	(___flmul@a+2)^0,w,c
  7387  0027F6  0210               	mulwf	___flmul@b^0,c
  7388  0027F8  CFF3 F027          	movff	prodl,___flmul@temp
  7389  0027FC  CFF4 F028          	movff	prodh,___flmul@temp+1
  7390  002800  5027               	movf	___flmul@temp^0,w,c
  7391  002802  6E1E               	movwf	___flmul@grs^0,c
  7392  002804  6A1F               	clrf	(___flmul@grs+1)^0,c
  7393  002806  6A20               	clrf	(___flmul@grs+2)^0,c
  7394  002808  6A21               	clrf	(___flmul@grs+3)^0,c
  7395  00280A  5028               	movf	(___flmul@temp+1)^0,w,c
  7396  00280C  6E23               	movwf	___flmul@prod^0,c
  7397  00280E  6A24               	clrf	(___flmul@prod+1)^0,c
  7398  002810  6A25               	clrf	(___flmul@prod+2)^0,c
  7399  002812  6A26               	clrf	(___flmul@prod+3)^0,c
  7400  002814  5015               	movf	(___flmul@a+1)^0,w,c
  7401  002816  0211               	mulwf	(___flmul@b+1)^0,c
  7402  002818  CFF3 F027          	movff	prodl,___flmul@temp
  7403  00281C  CFF4 F028          	movff	prodh,___flmul@temp+1
  7404  002820  5027               	movf	___flmul@temp^0,w,c
  7405  002822  261E               	addwf	___flmul@grs^0,f,c
  7406  002824  0E00               	movlw	0
  7407  002826  221F               	addwfc	(___flmul@grs+1)^0,f,c
  7408  002828  2220               	addwfc	(___flmul@grs+2)^0,f,c
  7409  00282A  2221               	addwfc	(___flmul@grs+3)^0,f,c
  7410  00282C  5028               	movf	(___flmul@temp+1)^0,w,c
  7411  00282E  2623               	addwf	___flmul@prod^0,f,c
  7412  002830  0E00               	movlw	0
  7413  002832  2224               	addwfc	(___flmul@prod+1)^0,f,c
  7414  002834  2225               	addwfc	(___flmul@prod+2)^0,f,c
  7415  002836  2226               	addwfc	(___flmul@prod+3)^0,f,c
  7416  002838  5014               	movf	___flmul@a^0,w,c
  7417  00283A  0212               	mulwf	(___flmul@b+2)^0,c
  7418  00283C  CFF3 F027          	movff	prodl,___flmul@temp
  7419  002840  CFF4 F028          	movff	prodh,___flmul@temp+1
  7420  002844  5027               	movf	___flmul@temp^0,w,c
  7421  002846  261E               	addwf	___flmul@grs^0,f,c
  7422  002848  0E00               	movlw	0
  7423  00284A  221F               	addwfc	(___flmul@grs+1)^0,f,c
  7424  00284C  2220               	addwfc	(___flmul@grs+2)^0,f,c
  7425  00284E  2221               	addwfc	(___flmul@grs+3)^0,f,c
  7426  002850  5028               	movf	(___flmul@temp+1)^0,w,c
  7427  002852  2623               	addwf	___flmul@prod^0,f,c
  7428  002854  0E00               	movlw	0
  7429  002856  2224               	addwfc	(___flmul@prod+1)^0,f,c
  7430  002858  2225               	addwfc	(___flmul@prod+2)^0,f,c
  7431  00285A  2226               	addwfc	(___flmul@prod+3)^0,f,c
  7432  00285C  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
  7433  002860  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
  7434  002864  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
  7435  002868  6A1E               	clrf	___flmul@grs^0,c
  7436  00286A  5014               	movf	___flmul@a^0,w,c
  7437  00286C  0211               	mulwf	(___flmul@b+1)^0,c
  7438  00286E  CFF3 F027          	movff	prodl,___flmul@temp
  7439  002872  CFF4 F028          	movff	prodh,___flmul@temp+1
  7440  002876  5027               	movf	___flmul@temp^0,w,c
  7441  002878  261E               	addwf	___flmul@grs^0,f,c
  7442  00287A  5028               	movf	(___flmul@temp+1)^0,w,c
  7443  00287C  221F               	addwfc	(___flmul@grs+1)^0,f,c
  7444  00287E  0E00               	movlw	0
  7445  002880  2220               	addwfc	(___flmul@grs+2)^0,f,c
  7446  002882  0E00               	movlw	0
  7447  002884  2221               	addwfc	(___flmul@grs+3)^0,f,c
  7448  002886  5015               	movf	(___flmul@a+1)^0,w,c
  7449  002888  0210               	mulwf	___flmul@b^0,c
  7450  00288A  CFF3 F027          	movff	prodl,___flmul@temp
  7451  00288E  CFF4 F028          	movff	prodh,___flmul@temp+1
  7452  002892  5027               	movf	___flmul@temp^0,w,c
  7453  002894  261E               	addwf	___flmul@grs^0,f,c
  7454  002896  5028               	movf	(___flmul@temp+1)^0,w,c
  7455  002898  221F               	addwfc	(___flmul@grs+1)^0,f,c
  7456  00289A  0E00               	movlw	0
  7457  00289C  2220               	addwfc	(___flmul@grs+2)^0,f,c
  7458  00289E  0E00               	movlw	0
  7459  0028A0  2221               	addwfc	(___flmul@grs+3)^0,f,c
  7460  0028A2  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
  7461  0028A6  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
  7462  0028AA  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
  7463  0028AE  6A1E               	clrf	___flmul@grs^0,c
  7464  0028B0  5014               	movf	___flmul@a^0,w,c
  7465  0028B2  0210               	mulwf	___flmul@b^0,c
  7466  0028B4  CFF3 F027          	movff	prodl,___flmul@temp
  7467  0028B8  CFF4 F028          	movff	prodh,___flmul@temp+1
  7468  0028BC  5027               	movf	___flmul@temp^0,w,c
  7469  0028BE  261E               	addwf	___flmul@grs^0,f,c
  7470  0028C0  5028               	movf	(___flmul@temp+1)^0,w,c
  7471  0028C2  221F               	addwfc	(___flmul@grs+1)^0,f,c
  7472  0028C4  0E00               	movlw	0
  7473  0028C6  2220               	addwfc	(___flmul@grs+2)^0,f,c
  7474  0028C8  0E00               	movlw	0
  7475  0028CA  2221               	addwfc	(___flmul@grs+3)^0,f,c
  7476  0028CC  5016               	movf	(___flmul@a+2)^0,w,c
  7477  0028CE  0211               	mulwf	(___flmul@b+1)^0,c
  7478  0028D0  CFF3 F027          	movff	prodl,___flmul@temp
  7479  0028D4  CFF4 F028          	movff	prodh,___flmul@temp+1
  7480  0028D8  5027               	movf	___flmul@temp^0,w,c
  7481  0028DA  2623               	addwf	___flmul@prod^0,f,c
  7482  0028DC  5028               	movf	(___flmul@temp+1)^0,w,c
  7483  0028DE  2224               	addwfc	(___flmul@prod+1)^0,f,c
  7484  0028E0  0E00               	movlw	0
  7485  0028E2  2225               	addwfc	(___flmul@prod+2)^0,f,c
  7486  0028E4  0E00               	movlw	0
  7487  0028E6  2226               	addwfc	(___flmul@prod+3)^0,f,c
  7488  0028E8  5015               	movf	(___flmul@a+1)^0,w,c
  7489  0028EA  0212               	mulwf	(___flmul@b+2)^0,c
  7490  0028EC  CFF3 F027          	movff	prodl,___flmul@temp
  7491  0028F0  CFF4 F028          	movff	prodh,___flmul@temp+1
  7492  0028F4  5027               	movf	___flmul@temp^0,w,c
  7493  0028F6  2623               	addwf	___flmul@prod^0,f,c
  7494  0028F8  5028               	movf	(___flmul@temp+1)^0,w,c
  7495  0028FA  2224               	addwfc	(___flmul@prod+1)^0,f,c
  7496  0028FC  0E00               	movlw	0
  7497  0028FE  2225               	addwfc	(___flmul@prod+2)^0,f,c
  7498  002900  0E00               	movlw	0
  7499  002902  2226               	addwfc	(___flmul@prod+3)^0,f,c
  7500  002904  5016               	movf	(___flmul@a+2)^0,w,c
  7501  002906  0212               	mulwf	(___flmul@b+2)^0,c
  7502  002908  CFF3 F027          	movff	prodl,___flmul@temp
  7503  00290C  CFF4 F028          	movff	prodh,___flmul@temp+1
  7504  002910  5027               	movf	___flmul@temp^0,w,c
  7505  002912  6E18               	movwf	??___flmul^0,c
  7506  002914  5028               	movf	(___flmul@temp+1)^0,w,c
  7507  002916  6E19               	movwf	(??___flmul+1)^0,c
  7508  002918  6A1A               	clrf	(??___flmul+2)^0,c
  7509  00291A  6A1B               	clrf	(??___flmul+3)^0,c
  7510  00291C  C01A  F01B         	movff	??___flmul+2,??___flmul+3
  7511  002920  C019  F01A         	movff	??___flmul+1,??___flmul+2
  7512  002924  C018  F019         	movff	??___flmul,??___flmul+1
  7513  002928  6A18               	clrf	??___flmul^0,c
  7514  00292A  5018               	movf	??___flmul^0,w,c
  7515  00292C  2623               	addwf	___flmul@prod^0,f,c
  7516  00292E  5019               	movf	(??___flmul+1)^0,w,c
  7517  002930  2224               	addwfc	(___flmul@prod+1)^0,f,c
  7518  002932  501A               	movf	(??___flmul+2)^0,w,c
  7519  002934  2225               	addwfc	(___flmul@prod+2)^0,f,c
  7520  002936  501B               	movf	(??___flmul+3)^0,w,c
  7521  002938  2226               	addwfc	(___flmul@prod+3)^0,f,c
  7522  00293A  C01E  F018         	movff	___flmul@grs,??___flmul
  7523  00293E  C01F  F019         	movff	___flmul@grs+1,??___flmul+1
  7524  002942  C020  F01A         	movff	___flmul@grs+2,??___flmul+2
  7525  002946  C021  F01B         	movff	___flmul@grs+3,??___flmul+3
  7526  00294A  0E19               	movlw	25
  7527  00294C  EFAD  F014         	goto	u7000
  7528  002950                     u7005:
  7529  002950  90D8               	bcf	status,0,c
  7530  002952  321B               	rrcf	(??___flmul+3)^0,f,c
  7531  002954  321A               	rrcf	(??___flmul+2)^0,f,c
  7532  002956  3219               	rrcf	(??___flmul+1)^0,f,c
  7533  002958  3218               	rrcf	??___flmul^0,f,c
  7534  00295A                     u7000:
  7535  00295A  2EE8               	decfsz	wreg,f,c
  7536  00295C  EFA8  F014         	goto	u7005
  7537  002960  5018               	movf	??___flmul^0,w,c
  7538  002962  2623               	addwf	___flmul@prod^0,f,c
  7539  002964  5019               	movf	(??___flmul+1)^0,w,c
  7540  002966  2224               	addwfc	(___flmul@prod+1)^0,f,c
  7541  002968  501A               	movf	(??___flmul+2)^0,w,c
  7542  00296A  2225               	addwfc	(___flmul@prod+2)^0,f,c
  7543  00296C  501B               	movf	(??___flmul+3)^0,w,c
  7544  00296E  2226               	addwfc	(___flmul@prod+3)^0,f,c
  7545  002970  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
  7546  002974  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
  7547  002978  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
  7548  00297C  6A1E               	clrf	___flmul@grs^0,c
  7549  00297E  501D               	movf	___flmul@aexp^0,w,c
  7550  002980  C022  F018         	movff	___flmul@bexp,??___flmul
  7551  002984  6A19               	clrf	(??___flmul+1)^0,c
  7552  002986  2618               	addwf	??___flmul^0,f,c
  7553  002988  0E00               	movlw	0
  7554  00298A  2219               	addwfc	(??___flmul+1)^0,f,c
  7555  00298C  0E82               	movlw	130
  7556  00298E  2418               	addwf	??___flmul^0,w,c
  7557  002990  6E27               	movwf	___flmul@temp^0,c
  7558  002992  0EFF               	movlw	255
  7559  002994  2019               	addwfc	(??___flmul+1)^0,w,c
  7560  002996  6E28               	movwf	(___flmul@temp+1)^0,c
  7561  002998  EFE3  F014         	goto	l5630
  7562  00299C                     l5624:
  7563  00299C  90D8               	bcf	status,0,c
  7564  00299E  3623               	rlcf	___flmul@prod^0,f,c
  7565  0029A0  3624               	rlcf	(___flmul@prod+1)^0,f,c
  7566  0029A2  3625               	rlcf	(___flmul@prod+2)^0,f,c
  7567  0029A4  3626               	rlcf	(___flmul@prod+3)^0,f,c
  7568  0029A6  AE21               	btfss	(___flmul@grs+3)^0,7,c
  7569  0029A8  EFD8  F014         	goto	u7011
  7570  0029AC  EFDA  F014         	goto	u7010
  7571  0029B0                     u7011:
  7572  0029B0  EFDB  F014         	goto	l829
  7573  0029B4                     u7010:
  7574  0029B4  8023               	bsf	___flmul@prod^0,0,c
  7575  0029B6                     l829:
  7576  0029B6  90D8               	bcf	status,0,c
  7577  0029B8  361E               	rlcf	___flmul@grs^0,f,c
  7578  0029BA  361F               	rlcf	(___flmul@grs+1)^0,f,c
  7579  0029BC  3620               	rlcf	(___flmul@grs+2)^0,f,c
  7580  0029BE  3621               	rlcf	(___flmul@grs+3)^0,f,c
  7581  0029C0  0627               	decf	___flmul@temp^0,f,c
  7582  0029C2  A0D8               	btfss	status,0,c
  7583  0029C4  0628               	decf	(___flmul@temp+1)^0,f,c
  7584  0029C6                     l5630:
  7585  0029C6  AE25               	btfss	(___flmul@prod+2)^0,7,c
  7586  0029C8  EFE8  F014         	goto	u7021
  7587  0029CC  EFEA  F014         	goto	u7020
  7588  0029D0                     u7021:
  7589  0029D0  EFCE  F014         	goto	l5624
  7590  0029D4                     u7020:
  7591  0029D4  0E00               	movlw	0
  7592  0029D6  6E1D               	movwf	___flmul@aexp^0,c
  7593  0029D8  AE21               	btfss	(___flmul@grs+3)^0,7,c
  7594  0029DA  EFF1  F014         	goto	u7031
  7595  0029DE  EFF3  F014         	goto	u7030
  7596  0029E2                     u7031:
  7597  0029E2  EF17  F015         	goto	l831
  7598  0029E6                     u7030:
  7599  0029E6  0EFF               	movlw	255
  7600  0029E8  141E               	andwf	___flmul@grs^0,w,c
  7601  0029EA  6E18               	movwf	??___flmul^0,c
  7602  0029EC  0EFF               	movlw	255
  7603  0029EE  141F               	andwf	(___flmul@grs+1)^0,w,c
  7604  0029F0  6E19               	movwf	(??___flmul+1)^0,c
  7605  0029F2  0EFF               	movlw	255
  7606  0029F4  1420               	andwf	(___flmul@grs+2)^0,w,c
  7607  0029F6  6E1A               	movwf	(??___flmul+2)^0,c
  7608  0029F8  0E7F               	movlw	127
  7609  0029FA  1421               	andwf	(___flmul@grs+3)^0,w,c
  7610  0029FC  6E1B               	movwf	(??___flmul+3)^0,c
  7611  0029FE  5018               	movf	??___flmul^0,w,c
  7612  002A00  1019               	iorwf	(??___flmul+1)^0,w,c
  7613  002A02  101A               	iorwf	(??___flmul+2)^0,w,c
  7614  002A04  101B               	iorwf	(??___flmul+3)^0,w,c
  7615  002A06  B4D8               	btfsc	status,2,c
  7616  002A08  EF08  F015         	goto	u7041
  7617  002A0C  EF0A  F015         	goto	u7040
  7618  002A10                     u7041:
  7619  002A10  EF0E  F015         	goto	l832
  7620  002A14                     u7040:
  7621  002A14                     l5638:
  7622  002A14  0E01               	movlw	1
  7623  002A16  6E1D               	movwf	___flmul@aexp^0,c
  7624  002A18  EF17  F015         	goto	l831
  7625  002A1C                     l832:
  7626  002A1C  A023               	btfss	___flmul@prod^0,0,c
  7627  002A1E  EF13  F015         	goto	u7051
  7628  002A22  EF15  F015         	goto	u7050
  7629  002A26                     u7051:
  7630  002A26  EF17  F015         	goto	l831
  7631  002A2A                     u7050:
  7632  002A2A  EF0A  F015         	goto	l5638
  7633  002A2E                     l831:
  7634  002A2E  501D               	movf	___flmul@aexp^0,w,c
  7635  002A30  B4D8               	btfsc	status,2,c
  7636  002A32  EF1D  F015         	goto	u7061
  7637  002A36  EF1F  F015         	goto	u7060
  7638  002A3A                     u7061:
  7639  002A3A  EF43  F015         	goto	l5650
  7640  002A3E                     u7060:
  7641  002A3E  0E01               	movlw	1
  7642  002A40  2623               	addwf	___flmul@prod^0,f,c
  7643  002A42  0E00               	movlw	0
  7644  002A44  2224               	addwfc	(___flmul@prod+1)^0,f,c
  7645  002A46  2225               	addwfc	(___flmul@prod+2)^0,f,c
  7646  002A48  2226               	addwfc	(___flmul@prod+3)^0,f,c
  7647  002A4A  A026               	btfss	(___flmul@prod+3)^0,0,c
  7648  002A4C  EF2A  F015         	goto	u7071
  7649  002A50  EF2C  F015         	goto	u7070
  7650  002A54                     u7071:
  7651  002A54  EF43  F015         	goto	l5650
  7652  002A58                     u7070:
  7653  002A58  C023  F018         	movff	___flmul@prod,??___flmul
  7654  002A5C  C024  F019         	movff	___flmul@prod+1,??___flmul+1
  7655  002A60  C025  F01A         	movff	___flmul@prod+2,??___flmul+2
  7656  002A64  C026  F01B         	movff	___flmul@prod+3,??___flmul+3
  7657  002A68  341B               	rlcf	(??___flmul+3)^0,w,c
  7658  002A6A  321B               	rrcf	(??___flmul+3)^0,f,c
  7659  002A6C  321A               	rrcf	(??___flmul+2)^0,f,c
  7660  002A6E  3219               	rrcf	(??___flmul+1)^0,f,c
  7661  002A70  3218               	rrcf	??___flmul^0,f,c
  7662  002A72  C018  F023         	movff	??___flmul,___flmul@prod
  7663  002A76  C019  F024         	movff	??___flmul+1,___flmul@prod+1
  7664  002A7A  C01A  F025         	movff	??___flmul+2,___flmul@prod+2
  7665  002A7E  C01B  F026         	movff	??___flmul+3,___flmul@prod+3
  7666  002A82  4A27               	infsnz	___flmul@temp^0,f,c
  7667  002A84  2A28               	incf	(___flmul@temp+1)^0,f,c
  7668  002A86                     l5650:
  7669  002A86  BE28               	btfsc	(___flmul@temp+1)^0,7,c
  7670  002A88  EF4E  F015         	goto	u7081
  7671  002A8C  5028               	movf	(___flmul@temp+1)^0,w,c
  7672  002A8E  E108               	bnz	u7080
  7673  002A90  2827               	incf	___flmul@temp^0,w,c
  7674  002A92  A0D8               	btfss	status,0,c
  7675  002A94  EF4E  F015         	goto	u7081
  7676  002A98  EF50  F015         	goto	u7080
  7677  002A9C                     u7081:
  7678  002A9C  EF5A  F015         	goto	l5654
  7679  002AA0                     u7080:
  7680  002AA0  0E00               	movlw	0
  7681  002AA2  6E23               	movwf	___flmul@prod^0,c
  7682  002AA4  0E00               	movlw	0
  7683  002AA6  6E24               	movwf	(___flmul@prod+1)^0,c
  7684  002AA8  0E80               	movlw	128
  7685  002AAA  6E25               	movwf	(___flmul@prod+2)^0,c
  7686  002AAC  0E7F               	movlw	127
  7687  002AAE  6E26               	movwf	(___flmul@prod+3)^0,c
  7688  002AB0  EF88  F015         	goto	l5666
  7689  002AB4                     l5654:
  7690  002AB4  BE28               	btfsc	(___flmul@temp+1)^0,7,c
  7691  002AB6  EF67  F015         	goto	u7090
  7692  002ABA  5028               	movf	(___flmul@temp+1)^0,w,c
  7693  002ABC  E106               	bnz	u7091
  7694  002ABE  0427               	decf	___flmul@temp^0,w,c
  7695  002AC0  B0D8               	btfsc	status,0,c
  7696  002AC2  EF65  F015         	goto	u7091
  7697  002AC6  EF67  F015         	goto	u7090
  7698  002ACA                     u7091:
  7699  002ACA  EF73  F015         	goto	l839
  7700  002ACE                     u7090:
  7701  002ACE  0E00               	movlw	0
  7702  002AD0  6E23               	movwf	___flmul@prod^0,c
  7703  002AD2  0E00               	movlw	0
  7704  002AD4  6E24               	movwf	(___flmul@prod+1)^0,c
  7705  002AD6  0E00               	movlw	0
  7706  002AD8  6E25               	movwf	(___flmul@prod+2)^0,c
  7707  002ADA  0E00               	movlw	0
  7708  002ADC  6E26               	movwf	(___flmul@prod+3)^0,c
  7709  002ADE  0E00               	movlw	0
  7710  002AE0  6E1C               	movwf	___flmul@sign^0,c
  7711  002AE2  EF88  F015         	goto	l5666
  7712  002AE6                     l839:
  7713  002AE6  C027  F022         	movff	___flmul@temp,___flmul@bexp
  7714  002AEA  0EFF               	movlw	255
  7715  002AEC  1623               	andwf	___flmul@prod^0,f,c
  7716  002AEE  0EFF               	movlw	255
  7717  002AF0  1624               	andwf	(___flmul@prod+1)^0,f,c
  7718  002AF2  0E7F               	movlw	127
  7719  002AF4  1625               	andwf	(___flmul@prod+2)^0,f,c
  7720  002AF6  0E00               	movlw	0
  7721  002AF8  1626               	andwf	(___flmul@prod+3)^0,f,c
  7722  002AFA  A022               	btfss	___flmul@bexp^0,0,c
  7723  002AFC  EF82  F015         	goto	u7101
  7724  002B00  EF84  F015         	goto	u7100
  7725  002B04                     u7101:
  7726  002B04  EF85  F015         	goto	l5664
  7727  002B08                     u7100:
  7728  002B08  8E25               	bsf	(___flmul@prod+2)^0,7,c
  7729  002B0A                     l5664:
  7730  002B0A  90D8               	bcf	status,0,c
  7731  002B0C  3022               	rrcf	___flmul@bexp^0,w,c
  7732  002B0E  6E26               	movwf	(___flmul@prod+3)^0,c
  7733  002B10                     l5666:
  7734  002B10  501C               	movf	___flmul@sign^0,w,c
  7735  002B12  1226               	iorwf	(___flmul@prod+3)^0,f,c
  7736  002B14  C023  F010         	movff	___flmul@prod,?___flmul
  7737  002B18  C024  F011         	movff	___flmul@prod+1,?___flmul+1
  7738  002B1C  C025  F012         	movff	___flmul@prod+2,?___flmul+2
  7739  002B20  C026  F013         	movff	___flmul@prod+3,?___flmul+3
  7740  002B24                     l826:
  7741  002B24  0012               	return		;funcret
  7742  002B26                     __end_of___flmul:
  7743                           	callstack 0
  7744                           
  7745 ;; *************** function ___flge *****************
  7746 ;; Defined at:
  7747 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flge.c"
  7748 ;; Parameters:    Size  Location     Type
  7749 ;;  ff1             4   40[COMRAM] unsigned char 
  7750 ;;  ff2             4   44[COMRAM] unsigned char 
  7751 ;; Auto vars:     Size  Location     Type
  7752 ;;		None
  7753 ;; Return value:  Size  Location     Type
  7754 ;;		None               void
  7755 ;; Registers used:
  7756 ;;		wreg, status,2, status,0
  7757 ;; Tracked objects:
  7758 ;;		On entry : 0/0
  7759 ;;		On exit  : 0/0
  7760 ;;		Unchanged: 0/0
  7761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7762 ;;      Params:         8       0       0       0       0       0       0       0       0
  7763 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7764 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7765 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7766 ;;Total ram usage:       12 bytes
  7767 ;; Hardware stack levels used:    1
  7768 ;; Hardware stack levels required when called:    2
  7769 ;; This function calls:
  7770 ;;		Nothing
  7771 ;; This function is called by:
  7772 ;;		_MenuP
  7773 ;;		_efgtoa
  7774 ;; This function uses a non-reentrant model
  7775 ;;
  7776                           
  7777                           	psect	text20
  7778  003D34                     __ptext20:
  7779                           	callstack 0
  7780  003D34                     ___flge:
  7781                           	callstack 23
  7782  003D34  0E00               	movlw	0
  7783  003D36  1429               	andwf	___flge@ff1^0,w,c
  7784  003D38  6E31               	movwf	??___flge^0,c
  7785  003D3A  0E00               	movlw	0
  7786  003D3C  142A               	andwf	(___flge@ff1+1)^0,w,c
  7787  003D3E  6E32               	movwf	(??___flge+1)^0,c
  7788  003D40  0E80               	movlw	128
  7789  003D42  142B               	andwf	(___flge@ff1+2)^0,w,c
  7790  003D44  6E33               	movwf	(??___flge+2)^0,c
  7791  003D46  0E7F               	movlw	127
  7792  003D48  142C               	andwf	(___flge@ff1+3)^0,w,c
  7793  003D4A  6E34               	movwf	(??___flge+3)^0,c
  7794  003D4C  5031               	movf	??___flge^0,w,c
  7795  003D4E  1032               	iorwf	(??___flge+1)^0,w,c
  7796  003D50  1033               	iorwf	(??___flge+2)^0,w,c
  7797  003D52  1034               	iorwf	(??___flge+3)^0,w,c
  7798  003D54  A4D8               	btfss	status,2,c
  7799  003D56  EFAF  F01E         	goto	u7261
  7800  003D5A  EFB1  F01E         	goto	u7260
  7801  003D5E                     u7261:
  7802  003D5E  EFB9  F01E         	goto	l5778
  7803  003D62                     u7260:
  7804  003D62  0E00               	movlw	0
  7805  003D64  6E29               	movwf	___flge@ff1^0,c
  7806  003D66  0E00               	movlw	0
  7807  003D68  6E2A               	movwf	(___flge@ff1+1)^0,c
  7808  003D6A  0E00               	movlw	0
  7809  003D6C  6E2B               	movwf	(___flge@ff1+2)^0,c
  7810  003D6E  0E00               	movlw	0
  7811  003D70  6E2C               	movwf	(___flge@ff1+3)^0,c
  7812  003D72                     l5778:
  7813  003D72  0E00               	movlw	0
  7814  003D74  142D               	andwf	___flge@ff2^0,w,c
  7815  003D76  6E31               	movwf	??___flge^0,c
  7816  003D78  0E00               	movlw	0
  7817  003D7A  142E               	andwf	(___flge@ff2+1)^0,w,c
  7818  003D7C  6E32               	movwf	(??___flge+1)^0,c
  7819  003D7E  0E80               	movlw	128
  7820  003D80  142F               	andwf	(___flge@ff2+2)^0,w,c
  7821  003D82  6E33               	movwf	(??___flge+2)^0,c
  7822  003D84  0E7F               	movlw	127
  7823  003D86  1430               	andwf	(___flge@ff2+3)^0,w,c
  7824  003D88  6E34               	movwf	(??___flge+3)^0,c
  7825  003D8A  5031               	movf	??___flge^0,w,c
  7826  003D8C  1032               	iorwf	(??___flge+1)^0,w,c
  7827  003D8E  1033               	iorwf	(??___flge+2)^0,w,c
  7828  003D90  1034               	iorwf	(??___flge+3)^0,w,c
  7829  003D92  A4D8               	btfss	status,2,c
  7830  003D94  EFCE  F01E         	goto	u7271
  7831  003D98  EFD0  F01E         	goto	u7270
  7832  003D9C                     u7271:
  7833  003D9C  EFD8  F01E         	goto	l5782
  7834  003DA0                     u7270:
  7835  003DA0  0E00               	movlw	0
  7836  003DA2  6E2D               	movwf	___flge@ff2^0,c
  7837  003DA4  0E00               	movlw	0
  7838  003DA6  6E2E               	movwf	(___flge@ff2+1)^0,c
  7839  003DA8  0E00               	movlw	0
  7840  003DAA  6E2F               	movwf	(___flge@ff2+2)^0,c
  7841  003DAC  0E00               	movlw	0
  7842  003DAE  6E30               	movwf	(___flge@ff2+3)^0,c
  7843  003DB0                     l5782:
  7844  003DB0  AE2C               	btfss	(___flge@ff1+3)^0,7,c
  7845  003DB2  EFDD  F01E         	goto	u7281
  7846  003DB6  EFDF  F01E         	goto	u7280
  7847  003DBA                     u7281:
  7848  003DBA  EFE8  F01E         	goto	l5786
  7849  003DBE                     u7280:
  7850  003DBE  6C29               	negf	___flge@ff1^0,c
  7851  003DC0  1E2A               	comf	(___flge@ff1+1)^0,f,c
  7852  003DC2  B0D8               	btfsc	status,0,c
  7853  003DC4  2A2A               	incf	(___flge@ff1+1)^0,f,c
  7854  003DC6  1E2B               	comf	(___flge@ff1+2)^0,f,c
  7855  003DC8  B0D8               	btfsc	status,0,c
  7856  003DCA  2A2B               	incf	(___flge@ff1+2)^0,f,c
  7857  003DCC  0E80               	movlw	128
  7858  003DCE  562C               	subfwb	(___flge@ff1+3)^0,f,c
  7859  003DD0                     l5786:
  7860  003DD0  AE30               	btfss	(___flge@ff2+3)^0,7,c
  7861  003DD2  EFED  F01E         	goto	u7291
  7862  003DD6  EFEF  F01E         	goto	u7290
  7863  003DDA                     u7291:
  7864  003DDA  EFF8  F01E         	goto	l473
  7865  003DDE                     u7290:
  7866  003DDE  6C2D               	negf	___flge@ff2^0,c
  7867  003DE0  1E2E               	comf	(___flge@ff2+1)^0,f,c
  7868  003DE2  B0D8               	btfsc	status,0,c
  7869  003DE4  2A2E               	incf	(___flge@ff2+1)^0,f,c
  7870  003DE6  1E2F               	comf	(___flge@ff2+2)^0,f,c
  7871  003DE8  B0D8               	btfsc	status,0,c
  7872  003DEA  2A2F               	incf	(___flge@ff2+2)^0,f,c
  7873  003DEC  0E80               	movlw	128
  7874  003DEE  5630               	subfwb	(___flge@ff2+3)^0,f,c
  7875  003DF0                     l473:
  7876  003DF0  0E00               	movlw	0
  7877  003DF2  1A29               	xorwf	___flge@ff1^0,f,c
  7878  003DF4  0E00               	movlw	0
  7879  003DF6  1A2A               	xorwf	(___flge@ff1+1)^0,f,c
  7880  003DF8  0E00               	movlw	0
  7881  003DFA  1A2B               	xorwf	(___flge@ff1+2)^0,f,c
  7882  003DFC  0E80               	movlw	128
  7883  003DFE  1A2C               	xorwf	(___flge@ff1+3)^0,f,c
  7884  003E00  0E00               	movlw	0
  7885  003E02  1A2D               	xorwf	___flge@ff2^0,f,c
  7886  003E04  0E00               	movlw	0
  7887  003E06  1A2E               	xorwf	(___flge@ff2+1)^0,f,c
  7888  003E08  0E00               	movlw	0
  7889  003E0A  1A2F               	xorwf	(___flge@ff2+2)^0,f,c
  7890  003E0C  0E80               	movlw	128
  7891  003E0E  1A30               	xorwf	(___flge@ff2+3)^0,f,c
  7892  003E10  502D               	movf	___flge@ff2^0,w,c
  7893  003E12  5C29               	subwf	___flge@ff1^0,w,c
  7894  003E14  502E               	movf	(___flge@ff2+1)^0,w,c
  7895  003E16  582A               	subwfb	(___flge@ff1+1)^0,w,c
  7896  003E18  502F               	movf	(___flge@ff2+2)^0,w,c
  7897  003E1A  582B               	subwfb	(___flge@ff1+2)^0,w,c
  7898  003E1C  5030               	movf	(___flge@ff2+3)^0,w,c
  7899  003E1E  582C               	subwfb	(___flge@ff1+3)^0,w,c
  7900  003E20  B0D8               	btfsc	status,0,c
  7901  003E22  EF15  F01F         	goto	u7301
  7902  003E26  EF17  F01F         	goto	u7300
  7903  003E2A                     u7301:
  7904  003E2A  EF1A  F01F         	goto	l5792
  7905  003E2E                     u7300:
  7906  003E2E  90D8               	bcf	status,0,c
  7907  003E30  EF1B  F01F         	goto	l478
  7908  003E34                     l5792:
  7909  003E34  80D8               	bsf	status,0,c
  7910  003E36                     l478:
  7911  003E36  0012               	return		;funcret
  7912  003E38                     __end_of___flge:
  7913                           	callstack 0
  7914                           
  7915 ;; *************** function ___fleq *****************
  7916 ;; Defined at:
  7917 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fleq.c"
  7918 ;; Parameters:    Size  Location     Type
  7919 ;;  ff1             4    1[COMRAM] unsigned char 
  7920 ;;  ff2             4    5[COMRAM] unsigned char 
  7921 ;; Auto vars:     Size  Location     Type
  7922 ;;		None
  7923 ;; Return value:  Size  Location     Type
  7924 ;;		None               void
  7925 ;; Registers used:
  7926 ;;		wreg, status,2, status,0
  7927 ;; Tracked objects:
  7928 ;;		On entry : 0/0
  7929 ;;		On exit  : 0/0
  7930 ;;		Unchanged: 0/0
  7931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7932 ;;      Params:         8       0       0       0       0       0       0       0       0
  7933 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7934 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7935 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7936 ;;Total ram usage:       12 bytes
  7937 ;; Hardware stack levels used:    1
  7938 ;; Hardware stack levels required when called:    2
  7939 ;; This function calls:
  7940 ;;		Nothing
  7941 ;; This function is called by:
  7942 ;;		_efgtoa
  7943 ;; This function uses a non-reentrant model
  7944 ;;
  7945                           
  7946                           	psect	text21
  7947  004496                     __ptext21:
  7948                           	callstack 0
  7949  004496                     ___fleq:
  7950                           	callstack 23
  7951  004496  0E00               	movlw	0
  7952  004498  1402               	andwf	___fleq@ff1^0,w,c
  7953  00449A  6E0A               	movwf	??___fleq^0,c
  7954  00449C  0E00               	movlw	0
  7955  00449E  1403               	andwf	(___fleq@ff1+1)^0,w,c
  7956  0044A0  6E0B               	movwf	(??___fleq+1)^0,c
  7957  0044A2  0E80               	movlw	128
  7958  0044A4  1404               	andwf	(___fleq@ff1+2)^0,w,c
  7959  0044A6  6E0C               	movwf	(??___fleq+2)^0,c
  7960  0044A8  0E7F               	movlw	127
  7961  0044AA  1405               	andwf	(___fleq@ff1+3)^0,w,c
  7962  0044AC  6E0D               	movwf	(??___fleq+3)^0,c
  7963  0044AE  500A               	movf	??___fleq^0,w,c
  7964  0044B0  100B               	iorwf	(??___fleq+1)^0,w,c
  7965  0044B2  100C               	iorwf	(??___fleq+2)^0,w,c
  7966  0044B4  100D               	iorwf	(??___fleq+3)^0,w,c
  7967  0044B6  A4D8               	btfss	status,2,c
  7968  0044B8  EF60  F022         	goto	u7231
  7969  0044BC  EF62  F022         	goto	u7230
  7970  0044C0                     u7231:
  7971  0044C0  EF6A  F022         	goto	l5762
  7972  0044C4                     u7230:
  7973  0044C4  0E00               	movlw	0
  7974  0044C6  6E02               	movwf	___fleq@ff1^0,c
  7975  0044C8  0E00               	movlw	0
  7976  0044CA  6E03               	movwf	(___fleq@ff1+1)^0,c
  7977  0044CC  0E00               	movlw	0
  7978  0044CE  6E04               	movwf	(___fleq@ff1+2)^0,c
  7979  0044D0  0E00               	movlw	0
  7980  0044D2  6E05               	movwf	(___fleq@ff1+3)^0,c
  7981  0044D4                     l5762:
  7982  0044D4  0E00               	movlw	0
  7983  0044D6  1406               	andwf	___fleq@ff2^0,w,c
  7984  0044D8  6E0A               	movwf	??___fleq^0,c
  7985  0044DA  0E00               	movlw	0
  7986  0044DC  1407               	andwf	(___fleq@ff2+1)^0,w,c
  7987  0044DE  6E0B               	movwf	(??___fleq+1)^0,c
  7988  0044E0  0E80               	movlw	128
  7989  0044E2  1408               	andwf	(___fleq@ff2+2)^0,w,c
  7990  0044E4  6E0C               	movwf	(??___fleq+2)^0,c
  7991  0044E6  0E7F               	movlw	127
  7992  0044E8  1409               	andwf	(___fleq@ff2+3)^0,w,c
  7993  0044EA  6E0D               	movwf	(??___fleq+3)^0,c
  7994  0044EC  500A               	movf	??___fleq^0,w,c
  7995  0044EE  100B               	iorwf	(??___fleq+1)^0,w,c
  7996  0044F0  100C               	iorwf	(??___fleq+2)^0,w,c
  7997  0044F2  100D               	iorwf	(??___fleq+3)^0,w,c
  7998  0044F4  A4D8               	btfss	status,2,c
  7999  0044F6  EF7F  F022         	goto	u7241
  8000  0044FA  EF81  F022         	goto	u7240
  8001  0044FE                     u7241:
  8002  0044FE  EF89  F022         	goto	l5766
  8003  004502                     u7240:
  8004  004502  0E00               	movlw	0
  8005  004504  6E06               	movwf	___fleq@ff2^0,c
  8006  004506  0E00               	movlw	0
  8007  004508  6E07               	movwf	(___fleq@ff2+1)^0,c
  8008  00450A  0E00               	movlw	0
  8009  00450C  6E08               	movwf	(___fleq@ff2+2)^0,c
  8010  00450E  0E00               	movlw	0
  8011  004510  6E09               	movwf	(___fleq@ff2+3)^0,c
  8012  004512                     l5766:
  8013  004512  5006               	movf	___fleq@ff2^0,w,c
  8014  004514  1802               	xorwf	___fleq@ff1^0,w,c
  8015  004516  E10F               	bnz	u7250
  8016  004518  5007               	movf	(___fleq@ff2+1)^0,w,c
  8017  00451A  1803               	xorwf	(___fleq@ff1+1)^0,w,c
  8018  00451C  E10C               	bnz	u7250
  8019  00451E  5008               	movf	(___fleq@ff2+2)^0,w,c
  8020  004520  1804               	xorwf	(___fleq@ff1+2)^0,w,c
  8021  004522  E109               	bnz	u7250
  8022  004524  5009               	movf	(___fleq@ff2+3)^0,w,c
  8023  004526  1805               	xorwf	(___fleq@ff1+3)^0,w,c
  8024  004528  B4D8               	btfsc	status,2,c
  8025  00452A  EF99  F022         	goto	u7251
  8026  00452E  EF9B  F022         	goto	u7250
  8027  004532                     u7251:
  8028  004532  EF9E  F022         	goto	l5770
  8029  004536                     u7250:
  8030  004536  90D8               	bcf	status,0,c
  8031  004538  EF9F  F022         	goto	l467
  8032  00453C                     l5770:
  8033  00453C  80D8               	bsf	status,0,c
  8034  00453E                     l467:
  8035  00453E  0012               	return		;funcret
  8036  004540                     __end_of___fleq:
  8037                           	callstack 0
  8038                           
  8039 ;; *************** function ___fldiv *****************
  8040 ;; Defined at:
  8041 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
  8042 ;; Parameters:    Size  Location     Type
  8043 ;;  b               4   40[COMRAM] unsigned char 
  8044 ;;  a               4   44[COMRAM] unsigned char 
  8045 ;; Auto vars:     Size  Location     Type
  8046 ;;  grs             4   59[COMRAM] unsigned long 
  8047 ;;  rem             4   52[COMRAM] unsigned long 
  8048 ;;  new_exp         2   57[COMRAM] short 
  8049 ;;  aexp            1   64[COMRAM] unsigned char 
  8050 ;;  bexp            1   63[COMRAM] unsigned char 
  8051 ;;  sign            1   56[COMRAM] unsigned char 
  8052 ;; Return value:  Size  Location     Type
  8053 ;;                  4   40[COMRAM] unsigned char 
  8054 ;; Registers used:
  8055 ;;		wreg, status,2, status,0
  8056 ;; Tracked objects:
  8057 ;;		On entry : 0/0
  8058 ;;		On exit  : 0/0
  8059 ;;		Unchanged: 0/0
  8060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8061 ;;      Params:         8       0       0       0       0       0       0       0       0
  8062 ;;      Locals:        13       0       0       0       0       0       0       0       0
  8063 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8064 ;;      Totals:        25       0       0       0       0       0       0       0       0
  8065 ;;Total ram usage:       25 bytes
  8066 ;; Hardware stack levels used:    1
  8067 ;; Hardware stack levels required when called:    2
  8068 ;; This function calls:
  8069 ;;		Nothing
  8070 ;; This function is called by:
  8071 ;;		_UART_Init
  8072 ;;		_efgtoa
  8073 ;; This function uses a non-reentrant model
  8074 ;;
  8075                           
  8076                           	psect	text22
  8077  002B26                     __ptext22:
  8078                           	callstack 0
  8079  002B26                     ___fldiv:
  8080                           	callstack 27
  8081  002B26  502C               	movf	(___fldiv@b+3)^0,w,c
  8082  002B28  0B80               	andlw	128
  8083  002B2A  6E39               	movwf	___fldiv@sign^0,c
  8084  002B2C  502C               	movf	(___fldiv@b+3)^0,w,c
  8085  002B2E  242C               	addwf	(___fldiv@b+3)^0,w,c
  8086  002B30  6E40               	movwf	___fldiv@bexp^0,c
  8087  002B32  AE2B               	btfss	(___fldiv@b+2)^0,7,c
  8088  002B34  EF9E  F015         	goto	u6691
  8089  002B38  EFA0  F015         	goto	u6690
  8090  002B3C                     u6691:
  8091  002B3C  EFA1  F015         	goto	l5410
  8092  002B40                     u6690:
  8093  002B40  8040               	bsf	___fldiv@bexp^0,0,c
  8094  002B42                     l5410:
  8095  002B42  5040               	movf	___fldiv@bexp^0,w,c
  8096  002B44  B4D8               	btfsc	status,2,c
  8097  002B46  EFA7  F015         	goto	u6701
  8098  002B4A  EFA9  F015         	goto	u6700
  8099  002B4E                     u6701:
  8100  002B4E  EFBE  F015         	goto	l5420
  8101  002B52                     u6700:
  8102  002B52  2840               	incf	___fldiv@bexp^0,w,c
  8103  002B54  A4D8               	btfss	status,2,c
  8104  002B56  EFAF  F015         	goto	u6711
  8105  002B5A  EFB1  F015         	goto	u6710
  8106  002B5E                     u6711:
  8107  002B5E  EFB9  F015         	goto	l5416
  8108  002B62                     u6710:
  8109  002B62  0E00               	movlw	0
  8110  002B64  6E29               	movwf	___fldiv@b^0,c
  8111  002B66  0E00               	movlw	0
  8112  002B68  6E2A               	movwf	(___fldiv@b+1)^0,c
  8113  002B6A  0E00               	movlw	0
  8114  002B6C  6E2B               	movwf	(___fldiv@b+2)^0,c
  8115  002B6E  0E00               	movlw	0
  8116  002B70  6E2C               	movwf	(___fldiv@b+3)^0,c
  8117  002B72                     l5416:
  8118  002B72  8E2B               	bsf	(___fldiv@b+2)^0,7,c
  8119  002B74  0E00               	movlw	0
  8120  002B76  6E2C               	movwf	(___fldiv@b+3)^0,c
  8121  002B78  EFC6  F015         	goto	l5422
  8122  002B7C                     l5420:
  8123  002B7C  0E00               	movlw	0
  8124  002B7E  6E29               	movwf	___fldiv@b^0,c
  8125  002B80  0E00               	movlw	0
  8126  002B82  6E2A               	movwf	(___fldiv@b+1)^0,c
  8127  002B84  0E00               	movlw	0
  8128  002B86  6E2B               	movwf	(___fldiv@b+2)^0,c
  8129  002B88  0E00               	movlw	0
  8130  002B8A  6E2C               	movwf	(___fldiv@b+3)^0,c
  8131  002B8C                     l5422:
  8132  002B8C  5030               	movf	(___fldiv@a+3)^0,w,c
  8133  002B8E  0B80               	andlw	128
  8134  002B90  1A39               	xorwf	___fldiv@sign^0,f,c
  8135  002B92  5030               	movf	(___fldiv@a+3)^0,w,c
  8136  002B94  2430               	addwf	(___fldiv@a+3)^0,w,c
  8137  002B96  6E41               	movwf	___fldiv@aexp^0,c
  8138  002B98  AE2F               	btfss	(___fldiv@a+2)^0,7,c
  8139  002B9A  EFD1  F015         	goto	u6721
  8140  002B9E  EFD3  F015         	goto	u6720
  8141  002BA2                     u6721:
  8142  002BA2  EFD4  F015         	goto	l5430
  8143  002BA6                     u6720:
  8144  002BA6  8041               	bsf	___fldiv@aexp^0,0,c
  8145  002BA8                     l5430:
  8146  002BA8  5041               	movf	___fldiv@aexp^0,w,c
  8147  002BAA  B4D8               	btfsc	status,2,c
  8148  002BAC  EFDA  F015         	goto	u6731
  8149  002BB0  EFDC  F015         	goto	u6730
  8150  002BB4                     u6731:
  8151  002BB4  EFF1  F015         	goto	l5440
  8152  002BB8                     u6730:
  8153  002BB8  2841               	incf	___fldiv@aexp^0,w,c
  8154  002BBA  A4D8               	btfss	status,2,c
  8155  002BBC  EFE2  F015         	goto	u6741
  8156  002BC0  EFE4  F015         	goto	u6740
  8157  002BC4                     u6741:
  8158  002BC4  EFEC  F015         	goto	l5436
  8159  002BC8                     u6740:
  8160  002BC8  0E00               	movlw	0
  8161  002BCA  6E2D               	movwf	___fldiv@a^0,c
  8162  002BCC  0E00               	movlw	0
  8163  002BCE  6E2E               	movwf	(___fldiv@a+1)^0,c
  8164  002BD0  0E00               	movlw	0
  8165  002BD2  6E2F               	movwf	(___fldiv@a+2)^0,c
  8166  002BD4  0E00               	movlw	0
  8167  002BD6  6E30               	movwf	(___fldiv@a+3)^0,c
  8168  002BD8                     l5436:
  8169  002BD8  8E2F               	bsf	(___fldiv@a+2)^0,7,c
  8170  002BDA  0E00               	movlw	0
  8171  002BDC  6E30               	movwf	(___fldiv@a+3)^0,c
  8172  002BDE  EFF9  F015         	goto	l5442
  8173  002BE2                     l5440:
  8174  002BE2  0E00               	movlw	0
  8175  002BE4  6E2D               	movwf	___fldiv@a^0,c
  8176  002BE6  0E00               	movlw	0
  8177  002BE8  6E2E               	movwf	(___fldiv@a+1)^0,c
  8178  002BEA  0E00               	movlw	0
  8179  002BEC  6E2F               	movwf	(___fldiv@a+2)^0,c
  8180  002BEE  0E00               	movlw	0
  8181  002BF0  6E30               	movwf	(___fldiv@a+3)^0,c
  8182  002BF2                     l5442:
  8183  002BF2  502D               	movf	___fldiv@a^0,w,c
  8184  002BF4  102E               	iorwf	(___fldiv@a+1)^0,w,c
  8185  002BF6  102F               	iorwf	(___fldiv@a+2)^0,w,c
  8186  002BF8  1030               	iorwf	(___fldiv@a+3)^0,w,c
  8187  002BFA  A4D8               	btfss	status,2,c
  8188  002BFC  EF02  F016         	goto	u6751
  8189  002C00  EF04  F016         	goto	u6750
  8190  002C04                     u6751:
  8191  002C04  EF1C  F016         	goto	l5454
  8192  002C08                     u6750:
  8193  002C08  0E00               	movlw	0
  8194  002C0A  6E29               	movwf	___fldiv@b^0,c
  8195  002C0C  0E00               	movlw	0
  8196  002C0E  6E2A               	movwf	(___fldiv@b+1)^0,c
  8197  002C10  0E00               	movlw	0
  8198  002C12  6E2B               	movwf	(___fldiv@b+2)^0,c
  8199  002C14  0E00               	movlw	0
  8200  002C16  6E2C               	movwf	(___fldiv@b+3)^0,c
  8201  002C18  0E80               	movlw	128
  8202  002C1A  122B               	iorwf	(___fldiv@b+2)^0,f,c
  8203  002C1C  0E7F               	movlw	127
  8204  002C1E  122C               	iorwf	(___fldiv@b+3)^0,f,c
  8205  002C20                     l5448:
  8206  002C20  5039               	movf	___fldiv@sign^0,w,c
  8207  002C22  122C               	iorwf	(___fldiv@b+3)^0,f,c
  8208  002C24  C029  F029         	movff	___fldiv@b,?___fldiv
  8209  002C28  C02A  F02A         	movff	___fldiv@b+1,?___fldiv+1
  8210  002C2C  C02B  F02B         	movff	___fldiv@b+2,?___fldiv+2
  8211  002C30  C02C  F02C         	movff	___fldiv@b+3,?___fldiv+3
  8212  002C34  EF5F  F017         	goto	l790
  8213  002C38                     l5454:
  8214  002C38  5040               	movf	___fldiv@bexp^0,w,c
  8215  002C3A  A4D8               	btfss	status,2,c
  8216  002C3C  EF22  F016         	goto	u6761
  8217  002C40  EF24  F016         	goto	u6760
  8218  002C44                     u6761:
  8219  002C44  EF2E  F016         	goto	l5462
  8220  002C48                     u6760:
  8221  002C48  0E00               	movlw	0
  8222  002C4A  6E29               	movwf	?___fldiv^0,c
  8223  002C4C  0E00               	movlw	0
  8224  002C4E  6E2A               	movwf	(?___fldiv+1)^0,c
  8225  002C50  0E00               	movlw	0
  8226  002C52  6E2B               	movwf	(?___fldiv+2)^0,c
  8227  002C54  0E00               	movlw	0
  8228  002C56  6E2C               	movwf	(?___fldiv+3)^0,c
  8229  002C58  EF5F  F017         	goto	l790
  8230  002C5C                     l5462:
  8231  002C5C  5041               	movf	___fldiv@aexp^0,w,c
  8232  002C5E  C040  F031         	movff	___fldiv@bexp,??___fldiv
  8233  002C62  6A32               	clrf	(??___fldiv+1)^0,c
  8234  002C64  5E31               	subwf	??___fldiv^0,f,c
  8235  002C66  0E00               	movlw	0
  8236  002C68  5A32               	subwfb	(??___fldiv+1)^0,f,c
  8237  002C6A  0E7F               	movlw	127
  8238  002C6C  2431               	addwf	??___fldiv^0,w,c
  8239  002C6E  6E3A               	movwf	___fldiv@new_exp^0,c
  8240  002C70  0E00               	movlw	0
  8241  002C72  2032               	addwfc	(??___fldiv+1)^0,w,c
  8242  002C74  6E3B               	movwf	(___fldiv@new_exp+1)^0,c
  8243  002C76  C029  F035         	movff	___fldiv@b,___fldiv@rem
  8244  002C7A  C02A  F036         	movff	___fldiv@b+1,___fldiv@rem+1
  8245  002C7E  C02B  F037         	movff	___fldiv@b+2,___fldiv@rem+2
  8246  002C82  C02C  F038         	movff	___fldiv@b+3,___fldiv@rem+3
  8247  002C86  0E00               	movlw	0
  8248  002C88  6E29               	movwf	___fldiv@b^0,c
  8249  002C8A  0E00               	movlw	0
  8250  002C8C  6E2A               	movwf	(___fldiv@b+1)^0,c
  8251  002C8E  0E00               	movlw	0
  8252  002C90  6E2B               	movwf	(___fldiv@b+2)^0,c
  8253  002C92  0E00               	movlw	0
  8254  002C94  6E2C               	movwf	(___fldiv@b+3)^0,c
  8255  002C96  0E00               	movlw	0
  8256  002C98  6E3C               	movwf	___fldiv@grs^0,c
  8257  002C9A  0E00               	movlw	0
  8258  002C9C  6E3D               	movwf	(___fldiv@grs+1)^0,c
  8259  002C9E  0E00               	movlw	0
  8260  002CA0  6E3E               	movwf	(___fldiv@grs+2)^0,c
  8261  002CA2  0E00               	movlw	0
  8262  002CA4  6E3F               	movwf	(___fldiv@grs+3)^0,c
  8263  002CA6  0E00               	movlw	0
  8264  002CA8  6E41               	movwf	___fldiv@aexp^0,c
  8265  002CAA  EF8F  F016         	goto	l792
  8266  002CAE                     l5472:
  8267  002CAE  5041               	movf	___fldiv@aexp^0,w,c
  8268  002CB0  B4D8               	btfsc	status,2,c
  8269  002CB2  EF5D  F016         	goto	u6771
  8270  002CB6  EF5F  F016         	goto	u6770
  8271  002CBA                     u6771:
  8272  002CBA  EF76  F016         	goto	l5480
  8273  002CBE                     u6770:
  8274  002CBE  90D8               	bcf	status,0,c
  8275  002CC0  3635               	rlcf	___fldiv@rem^0,f,c
  8276  002CC2  3636               	rlcf	(___fldiv@rem+1)^0,f,c
  8277  002CC4  3637               	rlcf	(___fldiv@rem+2)^0,f,c
  8278  002CC6  3638               	rlcf	(___fldiv@rem+3)^0,f,c
  8279  002CC8  90D8               	bcf	status,0,c
  8280  002CCA  3629               	rlcf	___fldiv@b^0,f,c
  8281  002CCC  362A               	rlcf	(___fldiv@b+1)^0,f,c
  8282  002CCE  362B               	rlcf	(___fldiv@b+2)^0,f,c
  8283  002CD0  362C               	rlcf	(___fldiv@b+3)^0,f,c
  8284  002CD2  AE3F               	btfss	(___fldiv@grs+3)^0,7,c
  8285  002CD4  EF6E  F016         	goto	u6781
  8286  002CD8  EF70  F016         	goto	u6780
  8287  002CDC                     u6781:
  8288  002CDC  EF71  F016         	goto	l795
  8289  002CE0                     u6780:
  8290  002CE0  8029               	bsf	___fldiv@b^0,0,c
  8291  002CE2                     l795:
  8292  002CE2  90D8               	bcf	status,0,c
  8293  002CE4  363C               	rlcf	___fldiv@grs^0,f,c
  8294  002CE6  363D               	rlcf	(___fldiv@grs+1)^0,f,c
  8295  002CE8  363E               	rlcf	(___fldiv@grs+2)^0,f,c
  8296  002CEA  363F               	rlcf	(___fldiv@grs+3)^0,f,c
  8297  002CEC                     l5480:
  8298  002CEC  502D               	movf	___fldiv@a^0,w,c
  8299  002CEE  5C35               	subwf	___fldiv@rem^0,w,c
  8300  002CF0  502E               	movf	(___fldiv@a+1)^0,w,c
  8301  002CF2  5836               	subwfb	(___fldiv@rem+1)^0,w,c
  8302  002CF4  502F               	movf	(___fldiv@a+2)^0,w,c
  8303  002CF6  5837               	subwfb	(___fldiv@rem+2)^0,w,c
  8304  002CF8  5030               	movf	(___fldiv@a+3)^0,w,c
  8305  002CFA  5838               	subwfb	(___fldiv@rem+3)^0,w,c
  8306  002CFC  A0D8               	btfss	status,0,c
  8307  002CFE  EF83  F016         	goto	u6791
  8308  002D02  EF85  F016         	goto	u6790
  8309  002D06                     u6791:
  8310  002D06  EF8E  F016         	goto	l5486
  8311  002D0A                     u6790:
  8312  002D0A  8C3F               	bsf	(___fldiv@grs+3)^0,6,c
  8313  002D0C  502D               	movf	___fldiv@a^0,w,c
  8314  002D0E  5E35               	subwf	___fldiv@rem^0,f,c
  8315  002D10  502E               	movf	(___fldiv@a+1)^0,w,c
  8316  002D12  5A36               	subwfb	(___fldiv@rem+1)^0,f,c
  8317  002D14  502F               	movf	(___fldiv@a+2)^0,w,c
  8318  002D16  5A37               	subwfb	(___fldiv@rem+2)^0,f,c
  8319  002D18  5030               	movf	(___fldiv@a+3)^0,w,c
  8320  002D1A  5A38               	subwfb	(___fldiv@rem+3)^0,f,c
  8321  002D1C                     l5486:
  8322  002D1C  2A41               	incf	___fldiv@aexp^0,f,c
  8323  002D1E                     l792:
  8324  002D1E  0E19               	movlw	25
  8325  002D20  6441               	cpfsgt	___fldiv@aexp^0,c
  8326  002D22  EF95  F016         	goto	u6801
  8327  002D26  EF97  F016         	goto	u6800
  8328  002D2A                     u6801:
  8329  002D2A  EF57  F016         	goto	l5472
  8330  002D2E                     u6800:
  8331  002D2E  5035               	movf	___fldiv@rem^0,w,c
  8332  002D30  1036               	iorwf	(___fldiv@rem+1)^0,w,c
  8333  002D32  1037               	iorwf	(___fldiv@rem+2)^0,w,c
  8334  002D34  1038               	iorwf	(___fldiv@rem+3)^0,w,c
  8335  002D36  B4D8               	btfsc	status,2,c
  8336  002D38  EFA0  F016         	goto	u6811
  8337  002D3C  EFA2  F016         	goto	u6810
  8338  002D40                     u6811:
  8339  002D40  EFBA  F016         	goto	l5498
  8340  002D44                     u6810:
  8341  002D44  803C               	bsf	___fldiv@grs^0,0,c
  8342  002D46  EFBA  F016         	goto	l5498
  8343  002D4A                     l5492:
  8344  002D4A  90D8               	bcf	status,0,c
  8345  002D4C  3629               	rlcf	___fldiv@b^0,f,c
  8346  002D4E  362A               	rlcf	(___fldiv@b+1)^0,f,c
  8347  002D50  362B               	rlcf	(___fldiv@b+2)^0,f,c
  8348  002D52  362C               	rlcf	(___fldiv@b+3)^0,f,c
  8349  002D54  AE3F               	btfss	(___fldiv@grs+3)^0,7,c
  8350  002D56  EFAF  F016         	goto	u6821
  8351  002D5A  EFB1  F016         	goto	u6820
  8352  002D5E                     u6821:
  8353  002D5E  EFB2  F016         	goto	l801
  8354  002D62                     u6820:
  8355  002D62  8029               	bsf	___fldiv@b^0,0,c
  8356  002D64                     l801:
  8357  002D64  90D8               	bcf	status,0,c
  8358  002D66  363C               	rlcf	___fldiv@grs^0,f,c
  8359  002D68  363D               	rlcf	(___fldiv@grs+1)^0,f,c
  8360  002D6A  363E               	rlcf	(___fldiv@grs+2)^0,f,c
  8361  002D6C  363F               	rlcf	(___fldiv@grs+3)^0,f,c
  8362  002D6E  063A               	decf	___fldiv@new_exp^0,f,c
  8363  002D70  A0D8               	btfss	status,0,c
  8364  002D72  063B               	decf	(___fldiv@new_exp+1)^0,f,c
  8365  002D74                     l5498:
  8366  002D74  AE2B               	btfss	(___fldiv@b+2)^0,7,c
  8367  002D76  EFBF  F016         	goto	u6831
  8368  002D7A  EFC1  F016         	goto	u6830
  8369  002D7E                     u6831:
  8370  002D7E  EFA5  F016         	goto	l5492
  8371  002D82                     u6830:
  8372  002D82  0E00               	movlw	0
  8373  002D84  6E41               	movwf	___fldiv@aexp^0,c
  8374  002D86  AE3F               	btfss	(___fldiv@grs+3)^0,7,c
  8375  002D88  EFC8  F016         	goto	u6841
  8376  002D8C  EFCA  F016         	goto	u6840
  8377  002D90                     u6841:
  8378  002D90  EFEE  F016         	goto	l803
  8379  002D94                     u6840:
  8380  002D94  0EFF               	movlw	255
  8381  002D96  143C               	andwf	___fldiv@grs^0,w,c
  8382  002D98  6E31               	movwf	??___fldiv^0,c
  8383  002D9A  0EFF               	movlw	255
  8384  002D9C  143D               	andwf	(___fldiv@grs+1)^0,w,c
  8385  002D9E  6E32               	movwf	(??___fldiv+1)^0,c
  8386  002DA0  0EFF               	movlw	255
  8387  002DA2  143E               	andwf	(___fldiv@grs+2)^0,w,c
  8388  002DA4  6E33               	movwf	(??___fldiv+2)^0,c
  8389  002DA6  0E7F               	movlw	127
  8390  002DA8  143F               	andwf	(___fldiv@grs+3)^0,w,c
  8391  002DAA  6E34               	movwf	(??___fldiv+3)^0,c
  8392  002DAC  5031               	movf	??___fldiv^0,w,c
  8393  002DAE  1032               	iorwf	(??___fldiv+1)^0,w,c
  8394  002DB0  1033               	iorwf	(??___fldiv+2)^0,w,c
  8395  002DB2  1034               	iorwf	(??___fldiv+3)^0,w,c
  8396  002DB4  B4D8               	btfsc	status,2,c
  8397  002DB6  EFDF  F016         	goto	u6851
  8398  002DBA  EFE1  F016         	goto	u6850
  8399  002DBE                     u6851:
  8400  002DBE  EFE5  F016         	goto	l804
  8401  002DC2                     u6850:
  8402  002DC2                     l5506:
  8403  002DC2  0E01               	movlw	1
  8404  002DC4  6E41               	movwf	___fldiv@aexp^0,c
  8405  002DC6  EFEE  F016         	goto	l803
  8406  002DCA                     l804:
  8407  002DCA  A029               	btfss	___fldiv@b^0,0,c
  8408  002DCC  EFEA  F016         	goto	u6861
  8409  002DD0  EFEC  F016         	goto	u6860
  8410  002DD4                     u6861:
  8411  002DD4  EFEE  F016         	goto	l803
  8412  002DD8                     u6860:
  8413  002DD8  EFE1  F016         	goto	l5506
  8414  002DDC                     l803:
  8415  002DDC  5041               	movf	___fldiv@aexp^0,w,c
  8416  002DDE  B4D8               	btfsc	status,2,c
  8417  002DE0  EFF4  F016         	goto	u6871
  8418  002DE4  EFF6  F016         	goto	u6870
  8419  002DE8                     u6871:
  8420  002DE8  EF1A  F017         	goto	l5518
  8421  002DEC                     u6870:
  8422  002DEC  0E01               	movlw	1
  8423  002DEE  2629               	addwf	___fldiv@b^0,f,c
  8424  002DF0  0E00               	movlw	0
  8425  002DF2  222A               	addwfc	(___fldiv@b+1)^0,f,c
  8426  002DF4  222B               	addwfc	(___fldiv@b+2)^0,f,c
  8427  002DF6  222C               	addwfc	(___fldiv@b+3)^0,f,c
  8428  002DF8  A02C               	btfss	(___fldiv@b+3)^0,0,c
  8429  002DFA  EF01  F017         	goto	u6881
  8430  002DFE  EF03  F017         	goto	u6880
  8431  002E02                     u6881:
  8432  002E02  EF1A  F017         	goto	l5518
  8433  002E06                     u6880:
  8434  002E06  C029  F031         	movff	___fldiv@b,??___fldiv
  8435  002E0A  C02A  F032         	movff	___fldiv@b+1,??___fldiv+1
  8436  002E0E  C02B  F033         	movff	___fldiv@b+2,??___fldiv+2
  8437  002E12  C02C  F034         	movff	___fldiv@b+3,??___fldiv+3
  8438  002E16  3434               	rlcf	(??___fldiv+3)^0,w,c
  8439  002E18  3234               	rrcf	(??___fldiv+3)^0,f,c
  8440  002E1A  3233               	rrcf	(??___fldiv+2)^0,f,c
  8441  002E1C  3232               	rrcf	(??___fldiv+1)^0,f,c
  8442  002E1E  3231               	rrcf	??___fldiv^0,f,c
  8443  002E20  C031  F029         	movff	??___fldiv,___fldiv@b
  8444  002E24  C032  F02A         	movff	??___fldiv+1,___fldiv@b+1
  8445  002E28  C033  F02B         	movff	??___fldiv+2,___fldiv@b+2
  8446  002E2C  C034  F02C         	movff	??___fldiv+3,___fldiv@b+3
  8447  002E30  4A3A               	infsnz	___fldiv@new_exp^0,f,c
  8448  002E32  2A3B               	incf	(___fldiv@new_exp+1)^0,f,c
  8449  002E34                     l5518:
  8450  002E34  BE3B               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8451  002E36  EF25  F017         	goto	u6891
  8452  002E3A  503B               	movf	(___fldiv@new_exp+1)^0,w,c
  8453  002E3C  E108               	bnz	u6890
  8454  002E3E  283A               	incf	___fldiv@new_exp^0,w,c
  8455  002E40  A0D8               	btfss	status,0,c
  8456  002E42  EF25  F017         	goto	u6891
  8457  002E46  EF27  F017         	goto	u6890
  8458  002E4A                     u6891:
  8459  002E4A  EF32  F017         	goto	l5522
  8460  002E4E                     u6890:
  8461  002E4E  0E00               	movlw	0
  8462  002E50  6E3B               	movwf	(___fldiv@new_exp+1)^0,c
  8463  002E52  683A               	setf	___fldiv@new_exp^0,c
  8464  002E54  0E00               	movlw	0
  8465  002E56  6E29               	movwf	___fldiv@b^0,c
  8466  002E58  0E00               	movlw	0
  8467  002E5A  6E2A               	movwf	(___fldiv@b+1)^0,c
  8468  002E5C  0E00               	movlw	0
  8469  002E5E  6E2B               	movwf	(___fldiv@b+2)^0,c
  8470  002E60  0E00               	movlw	0
  8471  002E62  6E2C               	movwf	(___fldiv@b+3)^0,c
  8472  002E64                     l5522:
  8473  002E64  BE3B               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8474  002E66  EF3F  F017         	goto	u6900
  8475  002E6A  503B               	movf	(___fldiv@new_exp+1)^0,w,c
  8476  002E6C  E106               	bnz	u6901
  8477  002E6E  043A               	decf	___fldiv@new_exp^0,w,c
  8478  002E70  B0D8               	btfsc	status,0,c
  8479  002E72  EF3D  F017         	goto	u6901
  8480  002E76  EF3F  F017         	goto	u6900
  8481  002E7A                     u6901:
  8482  002E7A  EF4D  F017         	goto	l5526
  8483  002E7E                     u6900:
  8484  002E7E  0E00               	movlw	0
  8485  002E80  6E3B               	movwf	(___fldiv@new_exp+1)^0,c
  8486  002E82  0E00               	movlw	0
  8487  002E84  6E3A               	movwf	___fldiv@new_exp^0,c
  8488  002E86  0E00               	movlw	0
  8489  002E88  6E29               	movwf	___fldiv@b^0,c
  8490  002E8A  0E00               	movlw	0
  8491  002E8C  6E2A               	movwf	(___fldiv@b+1)^0,c
  8492  002E8E  0E00               	movlw	0
  8493  002E90  6E2B               	movwf	(___fldiv@b+2)^0,c
  8494  002E92  0E00               	movlw	0
  8495  002E94  6E2C               	movwf	(___fldiv@b+3)^0,c
  8496  002E96  0E00               	movlw	0
  8497  002E98  6E39               	movwf	___fldiv@sign^0,c
  8498  002E9A                     l5526:
  8499  002E9A  C03A  F040         	movff	___fldiv@new_exp,___fldiv@bexp
  8500  002E9E  A040               	btfss	___fldiv@bexp^0,0,c
  8501  002EA0  EF54  F017         	goto	u6911
  8502  002EA4  EF56  F017         	goto	u6910
  8503  002EA8                     u6911:
  8504  002EA8  EF59  F017         	goto	l5532
  8505  002EAC                     u6910:
  8506  002EAC  8E2B               	bsf	(___fldiv@b+2)^0,7,c
  8507  002EAE  EF5A  F017         	goto	l5534
  8508  002EB2                     l5532:
  8509  002EB2  9E2B               	bcf	(___fldiv@b+2)^0,7,c
  8510  002EB4                     l5534:
  8511  002EB4  90D8               	bcf	status,0,c
  8512  002EB6  3040               	rrcf	___fldiv@bexp^0,w,c
  8513  002EB8  6E2C               	movwf	(___fldiv@b+3)^0,c
  8514  002EBA  EF10  F016         	goto	l5448
  8515  002EBE                     l790:
  8516  002EBE  0012               	return		;funcret
  8517  002EC0                     __end_of___fldiv:
  8518                           	callstack 0
  8519                           
  8520 ;; *************** function ___awmod *****************
  8521 ;; Defined at:
  8522 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awmod.c"
  8523 ;; Parameters:    Size  Location     Type
  8524 ;;  dividend        2    1[COMRAM] int 
  8525 ;;  divisor         2    3[COMRAM] int 
  8526 ;; Auto vars:     Size  Location     Type
  8527 ;;  sign            1    6[COMRAM] unsigned char 
  8528 ;;  counter         1    5[COMRAM] unsigned char 
  8529 ;; Return value:  Size  Location     Type
  8530 ;;                  2    1[COMRAM] int 
  8531 ;; Registers used:
  8532 ;;		wreg, status,2, status,0
  8533 ;; Tracked objects:
  8534 ;;		On entry : 0/0
  8535 ;;		On exit  : 0/0
  8536 ;;		Unchanged: 0/0
  8537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8538 ;;      Params:         4       0       0       0       0       0       0       0       0
  8539 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8540 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8541 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8542 ;;Total ram usage:        6 bytes
  8543 ;; Hardware stack levels used:    1
  8544 ;; Hardware stack levels required when called:    2
  8545 ;; This function calls:
  8546 ;;		Nothing
  8547 ;; This function is called by:
  8548 ;;		_efgtoa
  8549 ;; This function uses a non-reentrant model
  8550 ;;
  8551                           
  8552                           	psect	text23
  8553  00433A                     __ptext23:
  8554                           	callstack 0
  8555  00433A                     ___awmod:
  8556                           	callstack 23
  8557  00433A  0E00               	movlw	0
  8558  00433C  6E07               	movwf	___awmod@sign^0,c
  8559  00433E  BE03               	btfsc	(___awmod@dividend+1)^0,7,c
  8560  004340  EFA6  F021         	goto	u7170
  8561  004344  EFA4  F021         	goto	u7171
  8562  004348                     u7171:
  8563  004348  EFAC  F021         	goto	l5730
  8564  00434C                     u7170:
  8565  00434C  6C02               	negf	___awmod@dividend^0,c
  8566  00434E  1E03               	comf	(___awmod@dividend+1)^0,f,c
  8567  004350  B0D8               	btfsc	status,0,c
  8568  004352  2A03               	incf	(___awmod@dividend+1)^0,f,c
  8569  004354  0E01               	movlw	1
  8570  004356  6E07               	movwf	___awmod@sign^0,c
  8571  004358                     l5730:
  8572  004358  BE05               	btfsc	(___awmod@divisor+1)^0,7,c
  8573  00435A  EFB3  F021         	goto	u7180
  8574  00435E  EFB1  F021         	goto	u7181
  8575  004362                     u7181:
  8576  004362  EFB7  F021         	goto	l5734
  8577  004366                     u7180:
  8578  004366  6C04               	negf	___awmod@divisor^0,c
  8579  004368  1E05               	comf	(___awmod@divisor+1)^0,f,c
  8580  00436A  B0D8               	btfsc	status,0,c
  8581  00436C  2A05               	incf	(___awmod@divisor+1)^0,f,c
  8582  00436E                     l5734:
  8583  00436E  5004               	movf	___awmod@divisor^0,w,c
  8584  004370  1005               	iorwf	(___awmod@divisor+1)^0,w,c
  8585  004372  B4D8               	btfsc	status,2,c
  8586  004374  EFBE  F021         	goto	u7191
  8587  004378  EFC0  F021         	goto	u7190
  8588  00437C                     u7191:
  8589  00437C  EFE4  F021         	goto	l5750
  8590  004380                     u7190:
  8591  004380  0E01               	movlw	1
  8592  004382  6E06               	movwf	___awmod@counter^0,c
  8593  004384  EFC8  F021         	goto	l5740
  8594  004388                     l5738:
  8595  004388  90D8               	bcf	status,0,c
  8596  00438A  3604               	rlcf	___awmod@divisor^0,f,c
  8597  00438C  3605               	rlcf	(___awmod@divisor+1)^0,f,c
  8598  00438E  2A06               	incf	___awmod@counter^0,f,c
  8599  004390                     l5740:
  8600  004390  AE05               	btfss	(___awmod@divisor+1)^0,7,c
  8601  004392  EFCD  F021         	goto	u7201
  8602  004396  EFCF  F021         	goto	u7200
  8603  00439A                     u7201:
  8604  00439A  EFC4  F021         	goto	l5738
  8605  00439E                     u7200:
  8606  00439E                     l5742:
  8607  00439E  5004               	movf	___awmod@divisor^0,w,c
  8608  0043A0  5C02               	subwf	___awmod@dividend^0,w,c
  8609  0043A2  5005               	movf	(___awmod@divisor+1)^0,w,c
  8610  0043A4  5803               	subwfb	(___awmod@dividend+1)^0,w,c
  8611  0043A6  A0D8               	btfss	status,0,c
  8612  0043A8  EFD8  F021         	goto	u7211
  8613  0043AC  EFDA  F021         	goto	u7210
  8614  0043B0                     u7211:
  8615  0043B0  EFDE  F021         	goto	l5746
  8616  0043B4                     u7210:
  8617  0043B4  5004               	movf	___awmod@divisor^0,w,c
  8618  0043B6  5E02               	subwf	___awmod@dividend^0,f,c
  8619  0043B8  5005               	movf	(___awmod@divisor+1)^0,w,c
  8620  0043BA  5A03               	subwfb	(___awmod@dividend+1)^0,f,c
  8621  0043BC                     l5746:
  8622  0043BC  90D8               	bcf	status,0,c
  8623  0043BE  3205               	rrcf	(___awmod@divisor+1)^0,f,c
  8624  0043C0  3204               	rrcf	___awmod@divisor^0,f,c
  8625  0043C2  2E06               	decfsz	___awmod@counter^0,f,c
  8626  0043C4  EFCF  F021         	goto	l5742
  8627  0043C8                     l5750:
  8628  0043C8  5007               	movf	___awmod@sign^0,w,c
  8629  0043CA  B4D8               	btfsc	status,2,c
  8630  0043CC  EFEA  F021         	goto	u7221
  8631  0043D0  EFEC  F021         	goto	u7220
  8632  0043D4                     u7221:
  8633  0043D4  EFF0  F021         	goto	l5754
  8634  0043D8                     u7220:
  8635  0043D8  6C02               	negf	___awmod@dividend^0,c
  8636  0043DA  1E03               	comf	(___awmod@dividend+1)^0,f,c
  8637  0043DC  B0D8               	btfsc	status,0,c
  8638  0043DE  2A03               	incf	(___awmod@dividend+1)^0,f,c
  8639  0043E0                     l5754:
  8640  0043E0  C002  F002         	movff	___awmod@dividend,?___awmod
  8641  0043E4  C003  F003         	movff	___awmod@dividend+1,?___awmod+1
  8642  0043E8  0012               	return		;funcret
  8643  0043EA                     __end_of___awmod:
  8644                           	callstack 0
  8645                           
  8646 ;; *************** function ___awdiv *****************
  8647 ;; Defined at:
  8648 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
  8649 ;; Parameters:    Size  Location     Type
  8650 ;;  dividend        2    1[COMRAM] int 
  8651 ;;  divisor         2    3[COMRAM] int 
  8652 ;; Auto vars:     Size  Location     Type
  8653 ;;  quotient        2    7[COMRAM] int 
  8654 ;;  sign            1    6[COMRAM] unsigned char 
  8655 ;;  counter         1    5[COMRAM] unsigned char 
  8656 ;; Return value:  Size  Location     Type
  8657 ;;                  2    1[COMRAM] int 
  8658 ;; Registers used:
  8659 ;;		wreg, status,2, status,0
  8660 ;; Tracked objects:
  8661 ;;		On entry : 0/0
  8662 ;;		On exit  : 0/0
  8663 ;;		Unchanged: 0/0
  8664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8665 ;;      Params:         4       0       0       0       0       0       0       0       0
  8666 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8667 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8668 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8669 ;;Total ram usage:        8 bytes
  8670 ;; Hardware stack levels used:    1
  8671 ;; Hardware stack levels required when called:    2
  8672 ;; This function calls:
  8673 ;;		Nothing
  8674 ;; This function is called by:
  8675 ;;		_efgtoa
  8676 ;; This function uses a non-reentrant model
  8677 ;;
  8678                           
  8679                           	psect	text24
  8680  004276                     __ptext24:
  8681                           	callstack 0
  8682  004276                     ___awdiv:
  8683                           	callstack 23
  8684  004276  0E00               	movlw	0
  8685  004278  6E07               	movwf	___awdiv@sign^0,c
  8686  00427A  BE05               	btfsc	(___awdiv@divisor+1)^0,7,c
  8687  00427C  EF44  F021         	goto	u7110
  8688  004280  EF42  F021         	goto	u7111
  8689  004284                     u7111:
  8690  004284  EF4A  F021         	goto	l5686
  8691  004288                     u7110:
  8692  004288  6C04               	negf	___awdiv@divisor^0,c
  8693  00428A  1E05               	comf	(___awdiv@divisor+1)^0,f,c
  8694  00428C  B0D8               	btfsc	status,0,c
  8695  00428E  2A05               	incf	(___awdiv@divisor+1)^0,f,c
  8696  004290  0E01               	movlw	1
  8697  004292  6E07               	movwf	___awdiv@sign^0,c
  8698  004294                     l5686:
  8699  004294  BE03               	btfsc	(___awdiv@dividend+1)^0,7,c
  8700  004296  EF51  F021         	goto	u7120
  8701  00429A  EF4F  F021         	goto	u7121
  8702  00429E                     u7121:
  8703  00429E  EF57  F021         	goto	l5692
  8704  0042A2                     u7120:
  8705  0042A2  6C02               	negf	___awdiv@dividend^0,c
  8706  0042A4  1E03               	comf	(___awdiv@dividend+1)^0,f,c
  8707  0042A6  B0D8               	btfsc	status,0,c
  8708  0042A8  2A03               	incf	(___awdiv@dividend+1)^0,f,c
  8709  0042AA  0E01               	movlw	1
  8710  0042AC  1A07               	xorwf	___awdiv@sign^0,f,c
  8711  0042AE                     l5692:
  8712  0042AE  0E00               	movlw	0
  8713  0042B0  6E09               	movwf	(___awdiv@quotient+1)^0,c
  8714  0042B2  0E00               	movlw	0
  8715  0042B4  6E08               	movwf	___awdiv@quotient^0,c
  8716  0042B6  5004               	movf	___awdiv@divisor^0,w,c
  8717  0042B8  1005               	iorwf	(___awdiv@divisor+1)^0,w,c
  8718  0042BA  B4D8               	btfsc	status,2,c
  8719  0042BC  EF62  F021         	goto	u7131
  8720  0042C0  EF64  F021         	goto	u7130
  8721  0042C4                     u7131:
  8722  0042C4  EF8C  F021         	goto	l5714
  8723  0042C8                     u7130:
  8724  0042C8  0E01               	movlw	1
  8725  0042CA  6E06               	movwf	___awdiv@counter^0,c
  8726  0042CC  EF6C  F021         	goto	l5700
  8727  0042D0                     l5698:
  8728  0042D0  90D8               	bcf	status,0,c
  8729  0042D2  3604               	rlcf	___awdiv@divisor^0,f,c
  8730  0042D4  3605               	rlcf	(___awdiv@divisor+1)^0,f,c
  8731  0042D6  2A06               	incf	___awdiv@counter^0,f,c
  8732  0042D8                     l5700:
  8733  0042D8  AE05               	btfss	(___awdiv@divisor+1)^0,7,c
  8734  0042DA  EF71  F021         	goto	u7141
  8735  0042DE  EF73  F021         	goto	u7140
  8736  0042E2                     u7141:
  8737  0042E2  EF68  F021         	goto	l5698
  8738  0042E6                     u7140:
  8739  0042E6                     l5702:
  8740  0042E6  90D8               	bcf	status,0,c
  8741  0042E8  3608               	rlcf	___awdiv@quotient^0,f,c
  8742  0042EA  3609               	rlcf	(___awdiv@quotient+1)^0,f,c
  8743  0042EC  5004               	movf	___awdiv@divisor^0,w,c
  8744  0042EE  5C02               	subwf	___awdiv@dividend^0,w,c
  8745  0042F0  5005               	movf	(___awdiv@divisor+1)^0,w,c
  8746  0042F2  5803               	subwfb	(___awdiv@dividend+1)^0,w,c
  8747  0042F4  A0D8               	btfss	status,0,c
  8748  0042F6  EF7F  F021         	goto	u7151
  8749  0042FA  EF81  F021         	goto	u7150
  8750  0042FE                     u7151:
  8751  0042FE  EF86  F021         	goto	l5710
  8752  004302                     u7150:
  8753  004302  5004               	movf	___awdiv@divisor^0,w,c
  8754  004304  5E02               	subwf	___awdiv@dividend^0,f,c
  8755  004306  5005               	movf	(___awdiv@divisor+1)^0,w,c
  8756  004308  5A03               	subwfb	(___awdiv@dividend+1)^0,f,c
  8757  00430A  8008               	bsf	___awdiv@quotient^0,0,c
  8758  00430C                     l5710:
  8759  00430C  90D8               	bcf	status,0,c
  8760  00430E  3205               	rrcf	(___awdiv@divisor+1)^0,f,c
  8761  004310  3204               	rrcf	___awdiv@divisor^0,f,c
  8762  004312  2E06               	decfsz	___awdiv@counter^0,f,c
  8763  004314  EF73  F021         	goto	l5702
  8764  004318                     l5714:
  8765  004318  5007               	movf	___awdiv@sign^0,w,c
  8766  00431A  B4D8               	btfsc	status,2,c
  8767  00431C  EF92  F021         	goto	u7161
  8768  004320  EF94  F021         	goto	u7160
  8769  004324                     u7161:
  8770  004324  EF98  F021         	goto	l5718
  8771  004328                     u7160:
  8772  004328  6C08               	negf	___awdiv@quotient^0,c
  8773  00432A  1E09               	comf	(___awdiv@quotient+1)^0,f,c
  8774  00432C  B0D8               	btfsc	status,0,c
  8775  00432E  2A09               	incf	(___awdiv@quotient+1)^0,f,c
  8776  004330                     l5718:
  8777  004330  C008  F002         	movff	___awdiv@quotient,?___awdiv
  8778  004334  C009  F003         	movff	___awdiv@quotient+1,?___awdiv+1
  8779  004338  0012               	return		;funcret
  8780  00433A                     __end_of___awdiv:
  8781                           	callstack 0
  8782                           
  8783 ;; *************** function _dtoa *****************
  8784 ;; Defined at:
  8785 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  8786 ;; Parameters:    Size  Location     Type
  8787 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  8788 ;;		 -> sprintf@f(6), 
  8789 ;;  d               8   30[COMRAM] long long 
  8790 ;; Auto vars:     Size  Location     Type
  8791 ;;  n               8   54[COMRAM] long long 
  8792 ;;  i               2   62[COMRAM] int 
  8793 ;;  s               2   52[COMRAM] int 
  8794 ;;  w               2   50[COMRAM] int 
  8795 ;;  p               2   48[COMRAM] int 
  8796 ;; Return value:  Size  Location     Type
  8797 ;;                  2   28[COMRAM] int 
  8798 ;; Registers used:
  8799 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8800 ;; Tracked objects:
  8801 ;;		On entry : 0/0
  8802 ;;		On exit  : 0/0
  8803 ;;		Unchanged: 0/0
  8804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8805 ;;      Params:        10       0       0       0       0       0       0       0       0
  8806 ;;      Locals:        18       0       0       0       0       0       0       0       0
  8807 ;;      Temps:          8       0       0       0       0       0       0       0       0
  8808 ;;      Totals:        36       0       0       0       0       0       0       0       0
  8809 ;;Total ram usage:       36 bytes
  8810 ;; Hardware stack levels used:    1
  8811 ;; Hardware stack levels required when called:    6
  8812 ;; This function calls:
  8813 ;;		___aodiv
  8814 ;;		___aomod
  8815 ;;		_abs
  8816 ;;		_pad
  8817 ;; This function is called by:
  8818 ;;		_vfpfcnvrt
  8819 ;; This function uses a non-reentrant model
  8820 ;;
  8821                           
  8822                           	psect	text25
  8823  002EC0                     __ptext25:
  8824                           	callstack 0
  8825  002EC0                     _dtoa:
  8826                           	callstack 20
  8827  002EC0                     
  8828                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
  8829  002EC0  C01F  F037         	movff	dtoa@d,dtoa@n
  8830  002EC4  C020  F038         	movff	dtoa@d+1,dtoa@n+1
  8831  002EC8  C021  F039         	movff	dtoa@d+2,dtoa@n+2
  8832  002ECC  C022  F03A         	movff	dtoa@d+3,dtoa@n+3
  8833  002ED0  C023  F03B         	movff	dtoa@d+4,dtoa@n+4
  8834  002ED4  C024  F03C         	movff	dtoa@d+5,dtoa@n+5
  8835  002ED8  C025  F03D         	movff	dtoa@d+6,dtoa@n+6
  8836  002EDC  C026  F03E         	movff	dtoa@d+7,dtoa@n+7
  8837  002EE0                     
  8838                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
  8839  002EE0  BE3E               	btfsc	(dtoa@n+7)^0,7,c
  8840  002EE2  EF75  F017         	goto	u7701
  8841  002EE6  EF78  F017         	goto	u7700
  8842  002EEA                     u7701:
  8843  002EEA  0E01               	movlw	1
  8844  002EEC  EF79  F017         	goto	u7710
  8845  002EF0                     u7700:
  8846  002EF0  0E00               	movlw	0
  8847  002EF2                     u7710:
  8848  002EF2  6E35               	movwf	dtoa@s^0,c
  8849  002EF4  6A36               	clrf	(dtoa@s+1)^0,c
  8850                           
  8851                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
  8852  002EF6  5035               	movf	dtoa@s^0,w,c
  8853  002EF8  1036               	iorwf	(dtoa@s+1)^0,w,c
  8854  002EFA  B4D8               	btfsc	status,2,c
  8855  002EFC  EF82  F017         	goto	u7721
  8856  002F00  EF84  F017         	goto	u7720
  8857  002F04                     u7721:
  8858  002F04  EF94  F017         	goto	l5960
  8859  002F08                     u7720:
  8860  002F08                     
  8861                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
  8862  002F08  1E3E               	comf	(dtoa@n+7)^0,f,c
  8863  002F0A  1E3D               	comf	(dtoa@n+6)^0,f,c
  8864  002F0C  1E3C               	comf	(dtoa@n+5)^0,f,c
  8865  002F0E  1E3B               	comf	(dtoa@n+4)^0,f,c
  8866  002F10  1E3A               	comf	(dtoa@n+3)^0,f,c
  8867  002F12  1E39               	comf	(dtoa@n+2)^0,f,c
  8868  002F14  1E38               	comf	(dtoa@n+1)^0,f,c
  8869  002F16  6C37               	negf	dtoa@n^0,c
  8870  002F18  0E00               	movlw	0
  8871  002F1A  2238               	addwfc	(dtoa@n+1)^0,f,c
  8872  002F1C  2239               	addwfc	(dtoa@n+2)^0,f,c
  8873  002F1E  223A               	addwfc	(dtoa@n+3)^0,f,c
  8874  002F20  223B               	addwfc	(dtoa@n+4)^0,f,c
  8875  002F22  223C               	addwfc	(dtoa@n+5)^0,f,c
  8876  002F24  223D               	addwfc	(dtoa@n+6)^0,f,c
  8877  002F26  223E               	addwfc	(dtoa@n+7)^0,f,c
  8878  002F28                     l5960:
  8879                           
  8880                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
  8881  002F28  0100               	movlb	0	; () banked
  8882  002F2A  BFF3               	btfsc	(_prec+1)& (0+255),7,b
  8883  002F2C  EF9A  F017         	goto	u7731
  8884  002F30  EF9C  F017         	goto	u7730
  8885  002F34                     u7731:
  8886  002F34  EF9D  F017         	goto	l5964
  8887  002F38                     u7730:
  8888  002F38                     
  8889                           ; BSR set to: 0
  8890                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
  8891  002F38  93F4               	bcf	_flags& (0+255),1,b
  8892  002F3A                     l5964:
  8893                           
  8894                           ; BSR set to: 0
  8895                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
  8896  002F3A  BFF3               	btfsc	(_prec+1)& (0+255),7,b
  8897  002F3C  EFAA  F017         	goto	u7740
  8898  002F40  51F3               	movf	(_prec+1)& (0+255),w,b
  8899  002F42  E106               	bnz	u7741
  8900  002F44  05F2               	decf	_prec& (0+255),w,b
  8901  002F46  B0D8               	btfsc	status,0,c
  8902  002F48  EFA8  F017         	goto	u7741
  8903  002F4C  EFAA  F017         	goto	u7740
  8904  002F50                     u7741:
  8905  002F50  EFB0  F017         	goto	l940
  8906  002F54                     u7740:
  8907  002F54                     
  8908                           ; BSR set to: 0
  8909  002F54  0E00               	movlw	0
  8910  002F56  6E32               	movwf	(dtoa@p+1)^0,c
  8911  002F58  0E01               	movlw	1
  8912  002F5A  6E31               	movwf	dtoa@p^0,c
  8913  002F5C  EFB4  F017         	goto	l942
  8914  002F60                     l940:
  8915                           
  8916                           ; BSR set to: 0
  8917  002F60  C0F2  F031         	movff	_prec,dtoa@p
  8918  002F64  C0F3  F032         	movff	_prec+1,dtoa@p+1
  8919  002F68                     l942:
  8920                           
  8921                           ; BSR set to: 0
  8922                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
  8923  002F68  C0F0  F033         	movff	_width,dtoa@w
  8924  002F6C  C0F1  F034         	movff	_width+1,dtoa@w+1
  8925  002F70                     
  8926                           ; BSR set to: 0
  8927                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
  8928  002F70  5035               	movf	dtoa@s^0,w,c
  8929  002F72  1036               	iorwf	(dtoa@s+1)^0,w,c
  8930  002F74  A4D8               	btfss	status,2,c
  8931  002F76  EFBF  F017         	goto	u7751
  8932  002F7A  EFC1  F017         	goto	u7750
  8933  002F7E                     u7751:
  8934  002F7E  EFC8  F017         	goto	l5972
  8935  002F82                     u7750:
  8936  002F82                     
  8937                           ; BSR set to: 0
  8938  002F82  A5F4               	btfss	_flags& (0+255),2,b
  8939  002F84  EFC6  F017         	goto	u7761
  8940  002F88  EFC8  F017         	goto	u7760
  8941  002F8C                     u7761:
  8942  002F8C  EFCB  F017         	goto	l5974
  8943  002F90                     u7760:
  8944  002F90                     l5972:
  8945                           
  8946                           ; BSR set to: 0
  8947                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
  8948  002F90  0633               	decf	dtoa@w^0,f,c
  8949  002F92  A0D8               	btfss	status,0,c
  8950  002F94  0634               	decf	(dtoa@w+1)^0,f,c
  8951  002F96                     l5974:
  8952                           
  8953                           ; BSR set to: 0
  8954                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
  8955  002F96  0E00               	movlw	0
  8956  002F98  6E40               	movwf	(dtoa@i+1)^0,c
  8957  002F9A  0E4F               	movlw	79
  8958  002F9C  6E3F               	movwf	dtoa@i^0,c
  8959  002F9E                     
  8960                           ; BSR set to: 0
  8961                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
  8962  002F9E  0E00               	movlw	0
  8963  002FA0  0101               	movlb	1	; () banked
  8964  002FA2  6F57               	movwf	(_dbuf+79)& (0+255),b
  8965                           
  8966                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8967  002FA4  EF50  F018         	goto	l5988
  8968  002FA8                     l5978:
  8969                           
  8970                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
  8971  002FA8  063F               	decf	dtoa@i^0,f,c
  8972  002FAA  A0D8               	btfss	status,0,c
  8973  002FAC  0640               	decf	(dtoa@i+1)^0,f,c
  8974  002FAE                     
  8975                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
  8976  002FAE  0E08               	movlw	low _dbuf
  8977  002FB0  243F               	addwf	dtoa@i^0,w,c
  8978  002FB2  6ED9               	movwf	fsr2l,c
  8979  002FB4  0E01               	movlw	high _dbuf
  8980  002FB6  2040               	addwfc	(dtoa@i+1)^0,w,c
  8981  002FB8  6EDA               	movwf	fsr2h,c
  8982  002FBA  C037  F002         	movff	dtoa@n,___aomod@dividend
  8983  002FBE  C038  F003         	movff	dtoa@n+1,___aomod@dividend+1
  8984  002FC2  C039  F004         	movff	dtoa@n+2,___aomod@dividend+2
  8985  002FC6  C03A  F005         	movff	dtoa@n+3,___aomod@dividend+3
  8986  002FCA  C03B  F006         	movff	dtoa@n+4,___aomod@dividend+4
  8987  002FCE  C03C  F007         	movff	dtoa@n+5,___aomod@dividend+5
  8988  002FD2  C03D  F008         	movff	dtoa@n+6,___aomod@dividend+6
  8989  002FD6  C03E  F009         	movff	dtoa@n+7,___aomod@dividend+7
  8990  002FDA  0E0A               	movlw	10
  8991  002FDC  6E0A               	movwf	___aomod@divisor^0,c
  8992  002FDE  0E00               	movlw	0
  8993  002FE0  6E0B               	movwf	(___aomod@divisor+1)^0,c
  8994  002FE2  0E00               	movlw	0
  8995  002FE4  6E0C               	movwf	(___aomod@divisor+2)^0,c
  8996  002FE6  0E00               	movlw	0
  8997  002FE8  6E0D               	movwf	(___aomod@divisor+3)^0,c
  8998  002FEA  0E00               	movlw	0
  8999  002FEC  6E0E               	movwf	(___aomod@divisor+4)^0,c
  9000  002FEE  0E00               	movlw	0
  9001  002FF0  6E0F               	movwf	(___aomod@divisor+5)^0,c
  9002  002FF2  0E00               	movlw	0
  9003  002FF4  6E10               	movwf	(___aomod@divisor+6)^0,c
  9004  002FF6  0E00               	movlw	0
  9005  002FF8  6E11               	movwf	(___aomod@divisor+7)^0,c
  9006  002FFA  EC41  F01C         	call	___aomod	;wreg free
  9007  002FFE  C002  F027         	movff	?___aomod,??_dtoa
  9008  003002  C003  F028         	movff	?___aomod+1,??_dtoa+1
  9009  003006  C004  F029         	movff	?___aomod+2,??_dtoa+2
  9010  00300A  C005  F02A         	movff	?___aomod+3,??_dtoa+3
  9011  00300E  C006  F02B         	movff	?___aomod+4,??_dtoa+4
  9012  003012  C007  F02C         	movff	?___aomod+5,??_dtoa+5
  9013  003016  C008  F02D         	movff	?___aomod+6,??_dtoa+6
  9014  00301A  C009  F02E         	movff	?___aomod+7,??_dtoa+7
  9015  00301E  C027  F014         	movff	??_dtoa,abs@a
  9016  003022  C029  F015         	movff	??_dtoa+2,abs@a+1
  9017  003026  EC10  F025         	call	_abs	;wreg free
  9018  00302A  5014               	movf	?_abs^0,w,c
  9019  00302C  0F30               	addlw	48
  9020  00302E  6EDF               	movwf	indf2,c
  9021  003030                     
  9022                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
  9023  003030  0631               	decf	dtoa@p^0,f,c
  9024  003032  A0D8               	btfss	status,0,c
  9025  003034  0632               	decf	(dtoa@p+1)^0,f,c
  9026  003036                     
  9027                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
  9028  003036  0633               	decf	dtoa@w^0,f,c
  9029  003038  A0D8               	btfss	status,0,c
  9030  00303A  0634               	decf	(dtoa@w+1)^0,f,c
  9031  00303C                     
  9032                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
  9033  00303C  C037  F002         	movff	dtoa@n,___aodiv@dividend
  9034  003040  C038  F003         	movff	dtoa@n+1,___aodiv@dividend+1
  9035  003044  C039  F004         	movff	dtoa@n+2,___aodiv@dividend+2
  9036  003048  C03A  F005         	movff	dtoa@n+3,___aodiv@dividend+3
  9037  00304C  C03B  F006         	movff	dtoa@n+4,___aodiv@dividend+4
  9038  003050  C03C  F007         	movff	dtoa@n+5,___aodiv@dividend+5
  9039  003054  C03D  F008         	movff	dtoa@n+6,___aodiv@dividend+6
  9040  003058  C03E  F009         	movff	dtoa@n+7,___aodiv@dividend+7
  9041  00305C  0E0A               	movlw	10
  9042  00305E  6E0A               	movwf	___aodiv@divisor^0,c
  9043  003060  0E00               	movlw	0
  9044  003062  6E0B               	movwf	(___aodiv@divisor+1)^0,c
  9045  003064  0E00               	movlw	0
  9046  003066  6E0C               	movwf	(___aodiv@divisor+2)^0,c
  9047  003068  0E00               	movlw	0
  9048  00306A  6E0D               	movwf	(___aodiv@divisor+3)^0,c
  9049  00306C  0E00               	movlw	0
  9050  00306E  6E0E               	movwf	(___aodiv@divisor+4)^0,c
  9051  003070  0E00               	movlw	0
  9052  003072  6E0F               	movwf	(___aodiv@divisor+5)^0,c
  9053  003074  0E00               	movlw	0
  9054  003076  6E10               	movwf	(___aodiv@divisor+6)^0,c
  9055  003078  0E00               	movlw	0
  9056  00307A  6E11               	movwf	(___aodiv@divisor+7)^0,c
  9057  00307C  EC7D  F01B         	call	___aodiv	;wreg free
  9058  003080  C002  F037         	movff	?___aodiv,dtoa@n
  9059  003084  C003  F038         	movff	?___aodiv+1,dtoa@n+1
  9060  003088  C004  F039         	movff	?___aodiv+2,dtoa@n+2
  9061  00308C  C005  F03A         	movff	?___aodiv+3,dtoa@n+3
  9062  003090  C006  F03B         	movff	?___aodiv+4,dtoa@n+4
  9063  003094  C007  F03C         	movff	?___aodiv+5,dtoa@n+5
  9064  003098  C008  F03D         	movff	?___aodiv+6,dtoa@n+6
  9065  00309C  C009  F03E         	movff	?___aodiv+7,dtoa@n+7
  9066  0030A0                     l5988:
  9067                           
  9068                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9069  0030A0  BE40               	btfsc	(dtoa@i+1)^0,7,c
  9070  0030A2  EF5B  F018         	goto	u7771
  9071  0030A6  5040               	movf	(dtoa@i+1)^0,w,c
  9072  0030A8  E108               	bnz	u7770
  9073  0030AA  043F               	decf	dtoa@i^0,w,c
  9074  0030AC  A0D8               	btfss	status,0,c
  9075  0030AE  EF5B  F018         	goto	u7771
  9076  0030B2  EF5D  F018         	goto	u7770
  9077  0030B6                     u7771:
  9078  0030B6  EF8E  F018         	goto	l5998
  9079  0030BA                     u7770:
  9080  0030BA  5037               	movf	dtoa@n^0,w,c
  9081  0030BC  1038               	iorwf	(dtoa@n+1)^0,w,c
  9082  0030BE  1039               	iorwf	(dtoa@n+2)^0,w,c
  9083  0030C0  103A               	iorwf	(dtoa@n+3)^0,w,c
  9084  0030C2  103B               	iorwf	(dtoa@n+4)^0,w,c
  9085  0030C4  103C               	iorwf	(dtoa@n+5)^0,w,c
  9086  0030C6  103D               	iorwf	(dtoa@n+6)^0,w,c
  9087  0030C8  103E               	iorwf	(dtoa@n+7)^0,w,c
  9088  0030CA  A4D8               	btfss	status,2,c
  9089  0030CC  EF6A  F018         	goto	u7781
  9090  0030D0  EF6C  F018         	goto	u7780
  9091  0030D4                     u7781:
  9092  0030D4  EFD4  F017         	goto	l5978
  9093  0030D8                     u7780:
  9094  0030D8  BE32               	btfsc	(dtoa@p+1)^0,7,c
  9095  0030DA  EF79  F018         	goto	u7790
  9096  0030DE  5032               	movf	(dtoa@p+1)^0,w,c
  9097  0030E0  E106               	bnz	u7791
  9098  0030E2  0431               	decf	dtoa@p^0,w,c
  9099  0030E4  B0D8               	btfsc	status,0,c
  9100  0030E6  EF77  F018         	goto	u7791
  9101  0030EA  EF79  F018         	goto	u7790
  9102  0030EE                     u7791:
  9103  0030EE  EFD4  F017         	goto	l5978
  9104  0030F2                     u7790:
  9105  0030F2  BE34               	btfsc	(dtoa@w+1)^0,7,c
  9106  0030F4  EF84  F018         	goto	u7801
  9107  0030F8  5034               	movf	(dtoa@w+1)^0,w,c
  9108  0030FA  E108               	bnz	u7800
  9109  0030FC  0433               	decf	dtoa@w^0,w,c
  9110  0030FE  A0D8               	btfss	status,0,c
  9111  003100  EF84  F018         	goto	u7801
  9112  003104  EF86  F018         	goto	u7800
  9113  003108                     u7801:
  9114  003108  EF8E  F018         	goto	l5998
  9115  00310C                     u7800:
  9116  00310C  0100               	movlb	0	; () banked
  9117  00310E  B3F4               	btfsc	_flags& (0+255),1,b
  9118  003110  EF8C  F018         	goto	u7811
  9119  003114  EF8E  F018         	goto	u7810
  9120  003118                     u7811:
  9121  003118  EFD4  F017         	goto	l5978
  9122  00311C                     u7810:
  9123  00311C                     l5998:
  9124                           
  9125                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
  9126  00311C  5035               	movf	dtoa@s^0,w,c
  9127  00311E  1036               	iorwf	(dtoa@s+1)^0,w,c
  9128  003120  A4D8               	btfss	status,2,c
  9129  003122  EF95  F018         	goto	u7821
  9130  003126  EF97  F018         	goto	u7820
  9131  00312A                     u7821:
  9132  00312A  EF9F  F018         	goto	l6002
  9133  00312E                     u7820:
  9134  00312E  0100               	movlb	0	; () banked
  9135  003130  A5F4               	btfss	_flags& (0+255),2,b
  9136  003132  EF9D  F018         	goto	u7831
  9137  003136  EF9F  F018         	goto	u7830
  9138  00313A                     u7831:
  9139  00313A  EFBD  F018         	goto	l6012
  9140  00313E                     u7830:
  9141  00313E                     l6002:
  9142                           
  9143                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
  9144  00313E  063F               	decf	dtoa@i^0,f,c
  9145  003140  A0D8               	btfss	status,0,c
  9146  003142  0640               	decf	(dtoa@i+1)^0,f,c
  9147  003144                     
  9148                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
  9149  003144  5035               	movf	dtoa@s^0,w,c
  9150  003146  1036               	iorwf	(dtoa@s+1)^0,w,c
  9151  003148  A4D8               	btfss	status,2,c
  9152  00314A  EFA9  F018         	goto	u7841
  9153  00314E  EFAB  F018         	goto	u7840
  9154  003152                     u7841:
  9155  003152  EFB1  F018         	goto	l6008
  9156  003156                     u7840:
  9157  003156  0E00               	movlw	0
  9158  003158  6E30               	movwf	(_dtoa$1291+1)^0,c
  9159  00315A  0E2B               	movlw	43
  9160  00315C  6E2F               	movwf	_dtoa$1291^0,c
  9161  00315E  EFB5  F018         	goto	l6010
  9162  003162                     l6008:
  9163  003162  0E00               	movlw	0
  9164  003164  6E30               	movwf	(_dtoa$1291+1)^0,c
  9165  003166  0E2D               	movlw	45
  9166  003168  6E2F               	movwf	_dtoa$1291^0,c
  9167  00316A                     l6010:
  9168  00316A  0E08               	movlw	low _dbuf
  9169  00316C  243F               	addwf	dtoa@i^0,w,c
  9170  00316E  6ED9               	movwf	fsr2l,c
  9171  003170  0E01               	movlw	high _dbuf
  9172  003172  2040               	addwfc	(dtoa@i+1)^0,w,c
  9173  003174  6EDA               	movwf	fsr2h,c
  9174  003176  C02F  FFDF         	movff	_dtoa$1291,indf2
  9175  00317A                     l6012:
  9176                           
  9177                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
  9178  00317A  C01D  F012         	movff	dtoa@fp,pad@fp
  9179  00317E  C01E  F013         	movff	dtoa@fp+1,pad@fp+1
  9180  003182  0E08               	movlw	low _dbuf
  9181  003184  243F               	addwf	dtoa@i^0,w,c
  9182  003186  6E14               	movwf	pad@buf^0,c
  9183  003188  0E01               	movlw	high _dbuf
  9184  00318A  2040               	addwfc	(dtoa@i+1)^0,w,c
  9185  00318C  6E15               	movwf	(pad@buf+1)^0,c
  9186  00318E  C033  F016         	movff	dtoa@w,pad@p
  9187  003192  C034  F017         	movff	dtoa@w+1,pad@p+1
  9188  003196  ECD8  F020         	call	_pad	;wreg free
  9189  00319A  C012  F01D         	movff	?_pad,?_dtoa
  9190  00319E  C013  F01E         	movff	?_pad+1,?_dtoa+1
  9191  0031A2  0012               	return		;funcret
  9192  0031A4                     __end_of_dtoa:
  9193                           	callstack 0
  9194                           
  9195 ;; *************** function _pad *****************
  9196 ;; Defined at:
  9197 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  9198 ;; Parameters:    Size  Location     Type
  9199 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  9200 ;;		 -> sprintf@f(6), 
  9201 ;;  buf             2   19[COMRAM] PTR unsigned char 
  9202 ;;		 -> dbuf(80), 
  9203 ;;  p               2   21[COMRAM] int 
  9204 ;; Auto vars:     Size  Location     Type
  9205 ;;  w               2   26[COMRAM] int 
  9206 ;;  i               2   24[COMRAM] int 
  9207 ;; Return value:  Size  Location     Type
  9208 ;;                  2   17[COMRAM] int 
  9209 ;; Registers used:
  9210 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9211 ;; Tracked objects:
  9212 ;;		On entry : 0/0
  9213 ;;		On exit  : 0/0
  9214 ;;		Unchanged: 0/0
  9215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9216 ;;      Params:         6       0       0       0       0       0       0       0       0
  9217 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9218 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9219 ;;      Totals:        11       0       0       0       0       0       0       0       0
  9220 ;;Total ram usage:       11 bytes
  9221 ;; Hardware stack levels used:    1
  9222 ;; Hardware stack levels required when called:    5
  9223 ;; This function calls:
  9224 ;;		_fputc
  9225 ;;		_fputs
  9226 ;;		_strlen
  9227 ;; This function is called by:
  9228 ;;		_dtoa
  9229 ;;		_efgtoa
  9230 ;; This function uses a non-reentrant model
  9231 ;;
  9232                           
  9233                           	psect	text26
  9234  0041B0                     __ptext26:
  9235                           	callstack 0
  9236  0041B0                     _pad:
  9237                           	callstack 20
  9238  0041B0                     
  9239                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  9240  0041B0  0100               	movlb	0	; () banked
  9241  0041B2  A1F4               	btfss	_flags& (0+255),0,b
  9242  0041B4  EFDE  F020         	goto	u7391
  9243  0041B8  EFE0  F020         	goto	u7390
  9244  0041BC                     u7391:
  9245  0041BC  EFEA  F020         	goto	l5852
  9246  0041C0                     u7390:
  9247  0041C0                     
  9248                           ; BSR set to: 0
  9249                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  9250  0041C0  C014  F00B         	movff	pad@buf,fputs@s
  9251  0041C4  C015  F00C         	movff	pad@buf+1,fputs@s+1
  9252  0041C8  C012  F00D         	movff	pad@fp,fputs@fp
  9253  0041CC  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  9254  0041D0  ECEE  F024         	call	_fputs	;wreg free
  9255  0041D4                     l5852:
  9256                           
  9257                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  9258  0041D4  BE17               	btfsc	(pad@p+1)^0,7,c
  9259  0041D6  EFEF  F020         	goto	u7401
  9260  0041DA  EFF1  F020         	goto	u7400
  9261  0041DE                     u7401:
  9262  0041DE  EFF7  F020         	goto	l5856
  9263  0041E2                     u7400:
  9264  0041E2  C016  F01B         	movff	pad@p,pad@w
  9265  0041E6  C017  F01C         	movff	pad@p+1,pad@w+1
  9266  0041EA  EFFB  F020         	goto	l929
  9267  0041EE                     l5856:
  9268  0041EE  0E00               	movlw	0
  9269  0041F0  6E1C               	movwf	(pad@w+1)^0,c
  9270  0041F2  0E00               	movlw	0
  9271  0041F4  6E1B               	movwf	pad@w^0,c
  9272  0041F6                     l929:
  9273                           
  9274                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  9275  0041F6  0E00               	movlw	0
  9276  0041F8  6E1A               	movwf	(pad@i+1)^0,c
  9277  0041FA  0E00               	movlw	0
  9278  0041FC  6E19               	movwf	pad@i^0,c
  9279                           
  9280                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  9281  0041FE  EF0D  F021         	goto	l5862
  9282  004202                     l5858:
  9283                           
  9284                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  9285  004202  0E00               	movlw	0
  9286  004204  6E03               	movwf	(fputc@c+1)^0,c
  9287  004206  0E20               	movlw	32
  9288  004208  6E02               	movwf	fputc@c^0,c
  9289  00420A  C012  F004         	movff	pad@fp,fputc@fp
  9290  00420E  C013  F005         	movff	pad@fp+1,fputc@fp+1
  9291  004212  EC73  F020         	call	_fputc	;wreg free
  9292  004216                     
  9293                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  9294  004216  4A19               	infsnz	pad@i^0,f,c
  9295  004218  2A1A               	incf	(pad@i+1)^0,f,c
  9296  00421A                     l5862:
  9297                           
  9298                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  9299  00421A  501B               	movf	pad@w^0,w,c
  9300  00421C  5C19               	subwf	pad@i^0,w,c
  9301  00421E  501A               	movf	(pad@i+1)^0,w,c
  9302  004220  0A80               	xorlw	128
  9303  004222  6E18               	movwf	??_pad^0,c
  9304  004224  501C               	movf	(pad@w+1)^0,w,c
  9305  004226  0A80               	xorlw	128
  9306  004228  5818               	subwfb	??_pad^0,w,c
  9307  00422A  A0D8               	btfss	status,0,c
  9308  00422C  EF1A  F021         	goto	u7411
  9309  004230  EF1C  F021         	goto	u7410
  9310  004234                     u7411:
  9311  004234  EF01  F021         	goto	l5858
  9312  004238                     u7410:
  9313  004238                     
  9314                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  9315  004238  0100               	movlb	0	; () banked
  9316  00423A  B1F4               	btfsc	_flags& (0+255),0,b
  9317  00423C  EF22  F021         	goto	u7421
  9318  004240  EF24  F021         	goto	u7420
  9319  004244                     u7421:
  9320  004244  EF2E  F021         	goto	l5866
  9321  004248                     u7420:
  9322  004248                     
  9323                           ; BSR set to: 0
  9324                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  9325  004248  C014  F00B         	movff	pad@buf,fputs@s
  9326  00424C  C015  F00C         	movff	pad@buf+1,fputs@s+1
  9327  004250  C012  F00D         	movff	pad@fp,fputs@fp
  9328  004254  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  9329  004258  ECEE  F024         	call	_fputs	;wreg free
  9330  00425C                     l5866:
  9331                           
  9332                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
  9333  00425C  C014  F002         	movff	pad@buf,strlen@s
  9334  004260  C015  F003         	movff	pad@buf+1,strlen@s+1
  9335  004264  EC84  F025         	call	_strlen	;wreg free
  9336  004268  501B               	movf	pad@w^0,w,c
  9337  00426A  2402               	addwf	?_strlen^0,w,c
  9338  00426C  6E12               	movwf	?_pad^0,c
  9339  00426E  501C               	movf	(pad@w+1)^0,w,c
  9340  004270  2003               	addwfc	(?_strlen+1)^0,w,c
  9341  004272  6E13               	movwf	(?_pad+1)^0,c
  9342  004274  0012               	return		;funcret
  9343  004276                     __end_of_pad:
  9344                           	callstack 0
  9345                           
  9346 ;; *************** function _strlen *****************
  9347 ;; Defined at:
  9348 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
  9349 ;; Parameters:    Size  Location     Type
  9350 ;;  s               2    1[COMRAM] PTR const unsigned char 
  9351 ;;		 -> dbuf(80), 
  9352 ;; Auto vars:     Size  Location     Type
  9353 ;;  a               2    3[COMRAM] PTR const unsigned char 
  9354 ;;		 -> dbuf(80), 
  9355 ;; Return value:  Size  Location     Type
  9356 ;;                  2    1[COMRAM] unsigned int 
  9357 ;; Registers used:
  9358 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9359 ;; Tracked objects:
  9360 ;;		On entry : 0/0
  9361 ;;		On exit  : 0/0
  9362 ;;		Unchanged: 0/0
  9363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9364 ;;      Params:         2       0       0       0       0       0       0       0       0
  9365 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9366 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9367 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9368 ;;Total ram usage:        4 bytes
  9369 ;; Hardware stack levels used:    1
  9370 ;; Hardware stack levels required when called:    2
  9371 ;; This function calls:
  9372 ;;		Nothing
  9373 ;; This function is called by:
  9374 ;;		_pad
  9375 ;; This function uses a non-reentrant model
  9376 ;;
  9377                           
  9378                           	psect	text27
  9379  004B08                     __ptext27:
  9380                           	callstack 0
  9381  004B08                     _strlen:
  9382                           	callstack 22
  9383  004B08  C002  F004         	movff	strlen@s,strlen@a
  9384  004B0C  C003  F005         	movff	strlen@s+1,strlen@a+1
  9385  004B10  EF8C  F025         	goto	l5308
  9386  004B14                     l5306:
  9387  004B14  4A02               	infsnz	strlen@s^0,f,c
  9388  004B16  2A03               	incf	(strlen@s+1)^0,f,c
  9389  004B18                     l5308:
  9390  004B18  C002  FFD9         	movff	strlen@s,fsr2l
  9391  004B1C  C003  FFDA         	movff	strlen@s+1,fsr2h
  9392  004B20  50DF               	movf	indf2,w,c
  9393  004B22  A4D8               	btfss	status,2,c
  9394  004B24  EF96  F025         	goto	u6531
  9395  004B28  EF98  F025         	goto	u6530
  9396  004B2C                     u6531:
  9397  004B2C  EF8A  F025         	goto	l5306
  9398  004B30                     u6530:
  9399  004B30  5004               	movf	strlen@a^0,w,c
  9400  004B32  5C02               	subwf	strlen@s^0,w,c
  9401  004B34  6E02               	movwf	?_strlen^0,c
  9402  004B36  5005               	movf	(strlen@a+1)^0,w,c
  9403  004B38  5803               	subwfb	(strlen@s+1)^0,w,c
  9404  004B3A  6E03               	movwf	(?_strlen+1)^0,c
  9405  004B3C  0012               	return		;funcret
  9406  004B3E                     __end_of_strlen:
  9407                           	callstack 0
  9408                           
  9409 ;; *************** function _fputs *****************
  9410 ;; Defined at:
  9411 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  9412 ;; Parameters:    Size  Location     Type
  9413 ;;  s               2   10[COMRAM] PTR const unsigned char 
  9414 ;;		 -> dbuf(80), 
  9415 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  9416 ;;		 -> sprintf@f(6), 
  9417 ;; Auto vars:     Size  Location     Type
  9418 ;;  i               2   15[COMRAM] int 
  9419 ;;  c               1   14[COMRAM] unsigned char 
  9420 ;; Return value:  Size  Location     Type
  9421 ;;                  2   10[COMRAM] int 
  9422 ;; Registers used:
  9423 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9424 ;; Tracked objects:
  9425 ;;		On entry : 0/0
  9426 ;;		On exit  : 0/0
  9427 ;;		Unchanged: 0/0
  9428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9429 ;;      Params:         4       0       0       0       0       0       0       0       0
  9430 ;;      Locals:         3       0       0       0       0       0       0       0       0
  9431 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9432 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9433 ;;Total ram usage:        7 bytes
  9434 ;; Hardware stack levels used:    1
  9435 ;; Hardware stack levels required when called:    4
  9436 ;; This function calls:
  9437 ;;		_fputc
  9438 ;; This function is called by:
  9439 ;;		_pad
  9440 ;; This function uses a non-reentrant model
  9441 ;;
  9442                           
  9443                           	psect	text28
  9444  0049DC                     __ptext28:
  9445                           	callstack 0
  9446  0049DC                     _fputs:
  9447                           	callstack 20
  9448  0049DC  0E00               	movlw	0
  9449  0049DE  6E11               	movwf	(fputs@i+1)^0,c
  9450  0049E0  0E00               	movlw	0
  9451  0049E2  6E10               	movwf	fputs@i^0,c
  9452  0049E4  EFFF  F024         	goto	l5302
  9453  0049E8                     l5298:
  9454  0049E8  C00F  F002         	movff	fputs@c,fputc@c
  9455  0049EC  6A03               	clrf	(fputc@c+1)^0,c
  9456  0049EE  C00D  F004         	movff	fputs@fp,fputc@fp
  9457  0049F2  C00E  F005         	movff	fputs@fp+1,fputc@fp+1
  9458  0049F6  EC73  F020         	call	_fputc	;wreg free
  9459  0049FA  4A10               	infsnz	fputs@i^0,f,c
  9460  0049FC  2A11               	incf	(fputs@i+1)^0,f,c
  9461  0049FE                     l5302:
  9462  0049FE  5010               	movf	fputs@i^0,w,c
  9463  004A00  240B               	addwf	fputs@s^0,w,c
  9464  004A02  6ED9               	movwf	fsr2l,c
  9465  004A04  5011               	movf	(fputs@i+1)^0,w,c
  9466  004A06  200C               	addwfc	(fputs@s+1)^0,w,c
  9467  004A08  6EDA               	movwf	fsr2h,c
  9468  004A0A  50DF               	movf	indf2,w,c
  9469  004A0C  6E0F               	movwf	fputs@c^0,c
  9470  004A0E  500F               	movf	fputs@c^0,w,c
  9471  004A10  A4D8               	btfss	status,2,c
  9472  004A12  EF0D  F025         	goto	u6521
  9473  004A16  EF0F  F025         	goto	u6520
  9474  004A1A                     u6521:
  9475  004A1A  EFF4  F024         	goto	l5298
  9476  004A1E                     u6520:
  9477  004A1E  0012               	return		;funcret
  9478  004A20                     __end_of_fputs:
  9479                           	callstack 0
  9480                           
  9481 ;; *************** function _fputc *****************
  9482 ;; Defined at:
  9483 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  9484 ;; Parameters:    Size  Location     Type
  9485 ;;  c               2    1[COMRAM] int 
  9486 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  9487 ;;		 -> sprintf@f(6), 
  9488 ;; Auto vars:     Size  Location     Type
  9489 ;;		None
  9490 ;; Return value:  Size  Location     Type
  9491 ;;                  2    1[COMRAM] int 
  9492 ;; Registers used:
  9493 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9494 ;; Tracked objects:
  9495 ;;		On entry : 0/0
  9496 ;;		On exit  : 0/0
  9497 ;;		Unchanged: 0/0
  9498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9499 ;;      Params:         4       0       0       0       0       0       0       0       0
  9500 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9501 ;;      Temps:          5       0       0       0       0       0       0       0       0
  9502 ;;      Totals:         9       0       0       0       0       0       0       0       0
  9503 ;;Total ram usage:        9 bytes
  9504 ;; Hardware stack levels used:    1
  9505 ;; Hardware stack levels required when called:    3
  9506 ;; This function calls:
  9507 ;;		_putch
  9508 ;; This function is called by:
  9509 ;;		_pad
  9510 ;;		_vfpfcnvrt
  9511 ;;		_fputs
  9512 ;; This function uses a non-reentrant model
  9513 ;;
  9514                           
  9515                           	psect	text29
  9516  0040E6                     __ptext29:
  9517                           	callstack 0
  9518  0040E6                     _fputc:
  9519                           	callstack 23
  9520  0040E6  5004               	movf	fputc@fp^0,w,c
  9521  0040E8  1005               	iorwf	(fputc@fp+1)^0,w,c
  9522  0040EA  B4D8               	btfsc	status,2,c
  9523  0040EC  EF7A  F020         	goto	u6091
  9524  0040F0  EF7C  F020         	goto	u6090
  9525  0040F4                     u6091:
  9526  0040F4  EF85  F020         	goto	l5084
  9527  0040F8                     u6090:
  9528  0040F8  5004               	movf	fputc@fp^0,w,c
  9529  0040FA  1005               	iorwf	(fputc@fp+1)^0,w,c
  9530  0040FC  A4D8               	btfss	status,2,c
  9531  0040FE  EF83  F020         	goto	u6101
  9532  004102  EF85  F020         	goto	u6100
  9533  004106                     u6101:
  9534  004106  EF8A  F020         	goto	l5086
  9535  00410A                     u6100:
  9536  00410A                     l5084:
  9537  00410A  5002               	movf	fputc@c^0,w,c
  9538  00410C  EC0F  F026         	call	_putch
  9539  004110  EFD7  F020         	goto	l1189
  9540  004114                     l5086:
  9541  004114  EE20 F004          	lfsr	2,4
  9542  004118  5004               	movf	fputc@fp^0,w,c
  9543  00411A  26D9               	addwf	fsr2l,f,c
  9544  00411C  5005               	movf	(fputc@fp+1)^0,w,c
  9545  00411E  22DA               	addwfc	fsr2h,f,c
  9546  004120  50DE               	movf	postinc2,w,c
  9547  004122  10DE               	iorwf	postinc2,w,c
  9548  004124  B4D8               	btfsc	status,2,c
  9549  004126  EF97  F020         	goto	u6111
  9550  00412A  EF99  F020         	goto	u6110
  9551  00412E                     u6111:
  9552  00412E  EFB4  F020         	goto	l5090
  9553  004132                     u6110:
  9554  004132  EE20 F004          	lfsr	2,4
  9555  004136  5004               	movf	fputc@fp^0,w,c
  9556  004138  26D9               	addwf	fsr2l,f,c
  9557  00413A  5005               	movf	(fputc@fp+1)^0,w,c
  9558  00413C  22DA               	addwfc	fsr2h,f,c
  9559  00413E  EE10 F002          	lfsr	1,2
  9560  004142  5004               	movf	fputc@fp^0,w,c
  9561  004144  26E1               	addwf	fsr1l,f,c
  9562  004146  5005               	movf	(fputc@fp+1)^0,w,c
  9563  004148  22E2               	addwfc	fsr1h,f,c
  9564  00414A  50DE               	movf	postinc2,w,c
  9565  00414C  5CE6               	subwf	postinc1,w,c
  9566  00414E  50E6               	movf	postinc1,w,c
  9567  004150  0A80               	xorlw	128
  9568  004152  6E0A               	movwf	(??_fputc+4)^0,c
  9569  004154  50DE               	movf	postinc2,w,c
  9570  004156  0A80               	xorlw	128
  9571  004158  580A               	subwfb	(??_fputc+4)^0,w,c
  9572  00415A  B0D8               	btfsc	status,0,c
  9573  00415C  EFB2  F020         	goto	u6121
  9574  004160  EFB4  F020         	goto	u6120
  9575  004164                     u6121:
  9576  004164  EFD7  F020         	goto	l1189
  9577  004168                     u6120:
  9578  004168                     l5090:
  9579  004168  EE20 F002          	lfsr	2,2
  9580  00416C  5004               	movf	fputc@fp^0,w,c
  9581  00416E  26D9               	addwf	fsr2l,f,c
  9582  004170  5005               	movf	(fputc@fp+1)^0,w,c
  9583  004172  22DA               	addwfc	fsr2h,f,c
  9584  004174  CFDE F006          	movff	postinc2,??_fputc
  9585  004178  CFDD F007          	movff	postdec2,??_fputc+1
  9586  00417C  C004  FFD9         	movff	fputc@fp,fsr2l
  9587  004180  C005  FFDA         	movff	fputc@fp+1,fsr2h
  9588  004184  CFDE F008          	movff	postinc2,??_fputc+2
  9589  004188  CFDD F009          	movff	postdec2,??_fputc+3
  9590  00418C  5006               	movf	??_fputc^0,w,c
  9591  00418E  2408               	addwf	(??_fputc+2)^0,w,c
  9592  004190  6ED9               	movwf	fsr2l,c
  9593  004192  5007               	movf	(??_fputc+1)^0,w,c
  9594  004194  2009               	addwfc	(??_fputc+3)^0,w,c
  9595  004196  6EDA               	movwf	fsr2h,c
  9596  004198  C002  FFDF         	movff	fputc@c,indf2
  9597  00419C  EE20 F002          	lfsr	2,2
  9598  0041A0  5004               	movf	fputc@fp^0,w,c
  9599  0041A2  26D9               	addwf	fsr2l,f,c
  9600  0041A4  5005               	movf	(fputc@fp+1)^0,w,c
  9601  0041A6  22DA               	addwfc	fsr2h,f,c
  9602  0041A8  2ADE               	incf	postinc2,f,c
  9603  0041AA  0E00               	movlw	0
  9604  0041AC  22DD               	addwfc	postdec2,f,c
  9605  0041AE                     l1189:
  9606  0041AE  0012               	return		;funcret
  9607  0041B0                     __end_of_fputc:
  9608                           	callstack 0
  9609                           
  9610 ;; *************** function _putch *****************
  9611 ;; Defined at:
  9612 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\putch.c"
  9613 ;; Parameters:    Size  Location     Type
  9614 ;;  c               1    wreg     unsigned char 
  9615 ;; Auto vars:     Size  Location     Type
  9616 ;;  c               1    0[COMRAM] unsigned char 
  9617 ;; Return value:  Size  Location     Type
  9618 ;;                  1    wreg      void 
  9619 ;; Registers used:
  9620 ;;		wreg
  9621 ;; Tracked objects:
  9622 ;;		On entry : 0/0
  9623 ;;		On exit  : 0/0
  9624 ;;		Unchanged: 0/0
  9625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9626 ;;      Params:         0       0       0       0       0       0       0       0       0
  9627 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9628 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9629 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9630 ;;Total ram usage:        0 bytes
  9631 ;; Hardware stack levels used:    1
  9632 ;; Hardware stack levels required when called:    2
  9633 ;; This function calls:
  9634 ;;		Nothing
  9635 ;; This function is called by:
  9636 ;;		_fputc
  9637 ;; This function uses a non-reentrant model
  9638 ;;
  9639                           
  9640                           	psect	text30
  9641  004C1E                     __ptext30:
  9642                           	callstack 0
  9643  004C1E                     _putch:
  9644                           	callstack 23
  9645  004C1E  0012               	return		;funcret
  9646  004C20                     __end_of_putch:
  9647                           	callstack 0
  9648                           
  9649 ;; *************** function _abs *****************
  9650 ;; Defined at:
  9651 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
  9652 ;; Parameters:    Size  Location     Type
  9653 ;;  a               2   19[COMRAM] int 
  9654 ;; Auto vars:     Size  Location     Type
  9655 ;;		None
  9656 ;; Return value:  Size  Location     Type
  9657 ;;                  2   19[COMRAM] int 
  9658 ;; Registers used:
  9659 ;;		wreg, status,2, status,0
  9660 ;; Tracked objects:
  9661 ;;		On entry : 0/0
  9662 ;;		On exit  : 0/0
  9663 ;;		Unchanged: 0/0
  9664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9665 ;;      Params:         2       0       0       0       0       0       0       0       0
  9666 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9667 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9668 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9669 ;;Total ram usage:        4 bytes
  9670 ;; Hardware stack levels used:    1
  9671 ;; Hardware stack levels required when called:    2
  9672 ;; This function calls:
  9673 ;;		Nothing
  9674 ;; This function is called by:
  9675 ;;		_dtoa
  9676 ;; This function uses a non-reentrant model
  9677 ;;
  9678                           
  9679                           	psect	text31
  9680  004A20                     __ptext31:
  9681                           	callstack 0
  9682  004A20                     _abs:
  9683                           	callstack 23
  9684  004A20  BE15               	btfsc	(abs@a+1)^0,7,c
  9685  004A22  EF1D  F025         	goto	u7430
  9686  004A26  5015               	movf	(abs@a+1)^0,w,c
  9687  004A28  E106               	bnz	u7431
  9688  004A2A  0414               	decf	abs@a^0,w,c
  9689  004A2C  B0D8               	btfsc	status,0,c
  9690  004A2E  EF1B  F025         	goto	u7431
  9691  004A32  EF1D  F025         	goto	u7430
  9692  004A36                     u7431:
  9693  004A36  EF2B  F025         	goto	l1110
  9694  004A3A                     u7430:
  9695  004A3A  C014  F016         	movff	abs@a,??_abs
  9696  004A3E  C015  F017         	movff	abs@a+1,??_abs+1
  9697  004A42  1E16               	comf	??_abs^0,f,c
  9698  004A44  1E17               	comf	(??_abs+1)^0,f,c
  9699  004A46  4A16               	infsnz	??_abs^0,f,c
  9700  004A48  2A17               	incf	(??_abs+1)^0,f,c
  9701  004A4A  C016  F014         	movff	??_abs,?_abs
  9702  004A4E  C017  F015         	movff	??_abs+1,?_abs+1
  9703  004A52  EF2F  F025         	goto	l1113
  9704  004A56                     l1110:
  9705  004A56  C014  F014         	movff	abs@a,?_abs
  9706  004A5A  C015  F015         	movff	abs@a+1,?_abs+1
  9707  004A5E                     l1113:
  9708  004A5E  0012               	return		;funcret
  9709  004A60                     __end_of_abs:
  9710                           	callstack 0
  9711                           
  9712 ;; *************** function ___aomod *****************
  9713 ;; Defined at:
  9714 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
  9715 ;; Parameters:    Size  Location     Type
  9716 ;;  dividend        8    1[COMRAM] long long 
  9717 ;;  divisor         8    9[COMRAM] long long 
  9718 ;; Auto vars:     Size  Location     Type
  9719 ;;  sign            1   18[COMRAM] unsigned char 
  9720 ;;  counter         1   17[COMRAM] unsigned char 
  9721 ;; Return value:  Size  Location     Type
  9722 ;;                  8    1[COMRAM] long long 
  9723 ;; Registers used:
  9724 ;;		wreg, status,2, status,0
  9725 ;; Tracked objects:
  9726 ;;		On entry : 0/0
  9727 ;;		On exit  : 0/0
  9728 ;;		Unchanged: 0/0
  9729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9730 ;;      Params:        16       0       0       0       0       0       0       0       0
  9731 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9732 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9733 ;;      Totals:        18       0       0       0       0       0       0       0       0
  9734 ;;Total ram usage:       18 bytes
  9735 ;; Hardware stack levels used:    1
  9736 ;; Hardware stack levels required when called:    2
  9737 ;; This function calls:
  9738 ;;		Nothing
  9739 ;; This function is called by:
  9740 ;;		_dtoa
  9741 ;; This function uses a non-reentrant model
  9742 ;;
  9743                           
  9744                           	psect	text32
  9745  003882                     __ptext32:
  9746                           	callstack 0
  9747  003882                     ___aomod:
  9748                           	callstack 23
  9749  003882  0E00               	movlw	0
  9750  003884  6E13               	movwf	___aomod@sign^0,c
  9751  003886  BE09               	btfsc	(___aomod@dividend+7)^0,7,c
  9752  003888  EF4A  F01C         	goto	u6630
  9753  00388C  EF48  F01C         	goto	u6631
  9754  003890                     u6631:
  9755  003890  EF5C  F01C         	goto	l5376
  9756  003894                     u6630:
  9757  003894  1E09               	comf	(___aomod@dividend+7)^0,f,c
  9758  003896  1E08               	comf	(___aomod@dividend+6)^0,f,c
  9759  003898  1E07               	comf	(___aomod@dividend+5)^0,f,c
  9760  00389A  1E06               	comf	(___aomod@dividend+4)^0,f,c
  9761  00389C  1E05               	comf	(___aomod@dividend+3)^0,f,c
  9762  00389E  1E04               	comf	(___aomod@dividend+2)^0,f,c
  9763  0038A0  1E03               	comf	(___aomod@dividend+1)^0,f,c
  9764  0038A2  6C02               	negf	___aomod@dividend^0,c
  9765  0038A4  0E00               	movlw	0
  9766  0038A6  2203               	addwfc	(___aomod@dividend+1)^0,f,c
  9767  0038A8  2204               	addwfc	(___aomod@dividend+2)^0,f,c
  9768  0038AA  2205               	addwfc	(___aomod@dividend+3)^0,f,c
  9769  0038AC  2206               	addwfc	(___aomod@dividend+4)^0,f,c
  9770  0038AE  2207               	addwfc	(___aomod@dividend+5)^0,f,c
  9771  0038B0  2208               	addwfc	(___aomod@dividend+6)^0,f,c
  9772  0038B2  2209               	addwfc	(___aomod@dividend+7)^0,f,c
  9773  0038B4  0E01               	movlw	1
  9774  0038B6  6E13               	movwf	___aomod@sign^0,c
  9775  0038B8                     l5376:
  9776  0038B8  BE11               	btfsc	(___aomod@divisor+7)^0,7,c
  9777  0038BA  EF63  F01C         	goto	u6640
  9778  0038BE  EF61  F01C         	goto	u6641
  9779  0038C2                     u6641:
  9780  0038C2  EF73  F01C         	goto	l5380
  9781  0038C6                     u6640:
  9782  0038C6  1E11               	comf	(___aomod@divisor+7)^0,f,c
  9783  0038C8  1E10               	comf	(___aomod@divisor+6)^0,f,c
  9784  0038CA  1E0F               	comf	(___aomod@divisor+5)^0,f,c
  9785  0038CC  1E0E               	comf	(___aomod@divisor+4)^0,f,c
  9786  0038CE  1E0D               	comf	(___aomod@divisor+3)^0,f,c
  9787  0038D0  1E0C               	comf	(___aomod@divisor+2)^0,f,c
  9788  0038D2  1E0B               	comf	(___aomod@divisor+1)^0,f,c
  9789  0038D4  6C0A               	negf	___aomod@divisor^0,c
  9790  0038D6  0E00               	movlw	0
  9791  0038D8  220B               	addwfc	(___aomod@divisor+1)^0,f,c
  9792  0038DA  220C               	addwfc	(___aomod@divisor+2)^0,f,c
  9793  0038DC  220D               	addwfc	(___aomod@divisor+3)^0,f,c
  9794  0038DE  220E               	addwfc	(___aomod@divisor+4)^0,f,c
  9795  0038E0  220F               	addwfc	(___aomod@divisor+5)^0,f,c
  9796  0038E2  2210               	addwfc	(___aomod@divisor+6)^0,f,c
  9797  0038E4  2211               	addwfc	(___aomod@divisor+7)^0,f,c
  9798  0038E6                     l5380:
  9799  0038E6  500A               	movf	___aomod@divisor^0,w,c
  9800  0038E8  100B               	iorwf	(___aomod@divisor+1)^0,w,c
  9801  0038EA  100C               	iorwf	(___aomod@divisor+2)^0,w,c
  9802  0038EC  100D               	iorwf	(___aomod@divisor+3)^0,w,c
  9803  0038EE  100E               	iorwf	(___aomod@divisor+4)^0,w,c
  9804  0038F0  100F               	iorwf	(___aomod@divisor+5)^0,w,c
  9805  0038F2  1010               	iorwf	(___aomod@divisor+6)^0,w,c
  9806  0038F4  1011               	iorwf	(___aomod@divisor+7)^0,w,c
  9807  0038F6  B4D8               	btfsc	status,2,c
  9808  0038F8  EF80  F01C         	goto	u6651
  9809  0038FC  EF82  F01C         	goto	u6650
  9810  003900                     u6651:
  9811  003900  EFCA  F01C         	goto	l5396
  9812  003904                     u6650:
  9813  003904  0E01               	movlw	1
  9814  003906  6E12               	movwf	___aomod@counter^0,c
  9815  003908  EF90  F01C         	goto	l5386
  9816  00390C                     l5384:
  9817  00390C  90D8               	bcf	status,0,c
  9818  00390E  360A               	rlcf	___aomod@divisor^0,f,c
  9819  003910  360B               	rlcf	(___aomod@divisor+1)^0,f,c
  9820  003912  360C               	rlcf	(___aomod@divisor+2)^0,f,c
  9821  003914  360D               	rlcf	(___aomod@divisor+3)^0,f,c
  9822  003916  360E               	rlcf	(___aomod@divisor+4)^0,f,c
  9823  003918  360F               	rlcf	(___aomod@divisor+5)^0,f,c
  9824  00391A  3610               	rlcf	(___aomod@divisor+6)^0,f,c
  9825  00391C  3611               	rlcf	(___aomod@divisor+7)^0,f,c
  9826  00391E  2A12               	incf	___aomod@counter^0,f,c
  9827  003920                     l5386:
  9828  003920  AE11               	btfss	(___aomod@divisor+7)^0,7,c
  9829  003922  EF95  F01C         	goto	u6661
  9830  003926  EF97  F01C         	goto	u6660
  9831  00392A                     u6661:
  9832  00392A  EF86  F01C         	goto	l5384
  9833  00392E                     u6660:
  9834  00392E                     l5388:
  9835  00392E  500A               	movf	___aomod@divisor^0,w,c
  9836  003930  5C02               	subwf	___aomod@dividend^0,w,c
  9837  003932  500B               	movf	(___aomod@divisor+1)^0,w,c
  9838  003934  5803               	subwfb	(___aomod@dividend+1)^0,w,c
  9839  003936  500C               	movf	(___aomod@divisor+2)^0,w,c
  9840  003938  5804               	subwfb	(___aomod@dividend+2)^0,w,c
  9841  00393A  500D               	movf	(___aomod@divisor+3)^0,w,c
  9842  00393C  5805               	subwfb	(___aomod@dividend+3)^0,w,c
  9843  00393E  500E               	movf	(___aomod@divisor+4)^0,w,c
  9844  003940  5806               	subwfb	(___aomod@dividend+4)^0,w,c
  9845  003942  500F               	movf	(___aomod@divisor+5)^0,w,c
  9846  003944  5807               	subwfb	(___aomod@dividend+5)^0,w,c
  9847  003946  5010               	movf	(___aomod@divisor+6)^0,w,c
  9848  003948  5808               	subwfb	(___aomod@dividend+6)^0,w,c
  9849  00394A  5011               	movf	(___aomod@divisor+7)^0,w,c
  9850  00394C  5809               	subwfb	(___aomod@dividend+7)^0,w,c
  9851  00394E  A0D8               	btfss	status,0,c
  9852  003950  EFAC  F01C         	goto	u6671
  9853  003954  EFAE  F01C         	goto	u6670
  9854  003958                     u6671:
  9855  003958  EFBE  F01C         	goto	l5392
  9856  00395C                     u6670:
  9857  00395C  500A               	movf	___aomod@divisor^0,w,c
  9858  00395E  5E02               	subwf	___aomod@dividend^0,f,c
  9859  003960  500B               	movf	(___aomod@divisor+1)^0,w,c
  9860  003962  5A03               	subwfb	(___aomod@dividend+1)^0,f,c
  9861  003964  500C               	movf	(___aomod@divisor+2)^0,w,c
  9862  003966  5A04               	subwfb	(___aomod@dividend+2)^0,f,c
  9863  003968  500D               	movf	(___aomod@divisor+3)^0,w,c
  9864  00396A  5A05               	subwfb	(___aomod@dividend+3)^0,f,c
  9865  00396C  500E               	movf	(___aomod@divisor+4)^0,w,c
  9866  00396E  5A06               	subwfb	(___aomod@dividend+4)^0,f,c
  9867  003970  500F               	movf	(___aomod@divisor+5)^0,w,c
  9868  003972  5A07               	subwfb	(___aomod@dividend+5)^0,f,c
  9869  003974  5010               	movf	(___aomod@divisor+6)^0,w,c
  9870  003976  5A08               	subwfb	(___aomod@dividend+6)^0,f,c
  9871  003978  5011               	movf	(___aomod@divisor+7)^0,w,c
  9872  00397A  5A09               	subwfb	(___aomod@dividend+7)^0,f,c
  9873  00397C                     l5392:
  9874  00397C  90D8               	bcf	status,0,c
  9875  00397E  3211               	rrcf	(___aomod@divisor+7)^0,f,c
  9876  003980  3210               	rrcf	(___aomod@divisor+6)^0,f,c
  9877  003982  320F               	rrcf	(___aomod@divisor+5)^0,f,c
  9878  003984  320E               	rrcf	(___aomod@divisor+4)^0,f,c
  9879  003986  320D               	rrcf	(___aomod@divisor+3)^0,f,c
  9880  003988  320C               	rrcf	(___aomod@divisor+2)^0,f,c
  9881  00398A  320B               	rrcf	(___aomod@divisor+1)^0,f,c
  9882  00398C  320A               	rrcf	___aomod@divisor^0,f,c
  9883  00398E  2E12               	decfsz	___aomod@counter^0,f,c
  9884  003990  EF97  F01C         	goto	l5388
  9885  003994                     l5396:
  9886  003994  5013               	movf	___aomod@sign^0,w,c
  9887  003996  B4D8               	btfsc	status,2,c
  9888  003998  EFD0  F01C         	goto	u6681
  9889  00399C  EFD2  F01C         	goto	u6680
  9890  0039A0                     u6681:
  9891  0039A0  EFE2  F01C         	goto	l5400
  9892  0039A4                     u6680:
  9893  0039A4  1E09               	comf	(___aomod@dividend+7)^0,f,c
  9894  0039A6  1E08               	comf	(___aomod@dividend+6)^0,f,c
  9895  0039A8  1E07               	comf	(___aomod@dividend+5)^0,f,c
  9896  0039AA  1E06               	comf	(___aomod@dividend+4)^0,f,c
  9897  0039AC  1E05               	comf	(___aomod@dividend+3)^0,f,c
  9898  0039AE  1E04               	comf	(___aomod@dividend+2)^0,f,c
  9899  0039B0  1E03               	comf	(___aomod@dividend+1)^0,f,c
  9900  0039B2  6C02               	negf	___aomod@dividend^0,c
  9901  0039B4  0E00               	movlw	0
  9902  0039B6  2203               	addwfc	(___aomod@dividend+1)^0,f,c
  9903  0039B8  2204               	addwfc	(___aomod@dividend+2)^0,f,c
  9904  0039BA  2205               	addwfc	(___aomod@dividend+3)^0,f,c
  9905  0039BC  2206               	addwfc	(___aomod@dividend+4)^0,f,c
  9906  0039BE  2207               	addwfc	(___aomod@dividend+5)^0,f,c
  9907  0039C0  2208               	addwfc	(___aomod@dividend+6)^0,f,c
  9908  0039C2  2209               	addwfc	(___aomod@dividend+7)^0,f,c
  9909  0039C4                     l5400:
  9910  0039C4  C002  F002         	movff	___aomod@dividend,?___aomod
  9911  0039C8  C003  F003         	movff	___aomod@dividend+1,?___aomod+1
  9912  0039CC  C004  F004         	movff	___aomod@dividend+2,?___aomod+2
  9913  0039D0  C005  F005         	movff	___aomod@dividend+3,?___aomod+3
  9914  0039D4  C006  F006         	movff	___aomod@dividend+4,?___aomod+4
  9915  0039D8  C007  F007         	movff	___aomod@dividend+5,?___aomod+5
  9916  0039DC  C008  F008         	movff	___aomod@dividend+6,?___aomod+6
  9917  0039E0  C009  F009         	movff	___aomod@dividend+7,?___aomod+7
  9918  0039E4  0012               	return		;funcret
  9919  0039E6                     __end_of___aomod:
  9920                           	callstack 0
  9921                           
  9922 ;; *************** function ___aodiv *****************
  9923 ;; Defined at:
  9924 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
  9925 ;; Parameters:    Size  Location     Type
  9926 ;;  dividend        8    1[COMRAM] long long 
  9927 ;;  divisor         8    9[COMRAM] long long 
  9928 ;; Auto vars:     Size  Location     Type
  9929 ;;  quotient        8   19[COMRAM] long long 
  9930 ;;  sign            1   18[COMRAM] unsigned char 
  9931 ;;  counter         1   17[COMRAM] unsigned char 
  9932 ;; Return value:  Size  Location     Type
  9933 ;;                  8    1[COMRAM] long long 
  9934 ;; Registers used:
  9935 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9936 ;; Tracked objects:
  9937 ;;		On entry : 0/0
  9938 ;;		On exit  : 0/0
  9939 ;;		Unchanged: 0/0
  9940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9941 ;;      Params:        16       0       0       0       0       0       0       0       0
  9942 ;;      Locals:        10       0       0       0       0       0       0       0       0
  9943 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9944 ;;      Totals:        26       0       0       0       0       0       0       0       0
  9945 ;;Total ram usage:       26 bytes
  9946 ;; Hardware stack levels used:    1
  9947 ;; Hardware stack levels required when called:    2
  9948 ;; This function calls:
  9949 ;;		Nothing
  9950 ;; This function is called by:
  9951 ;;		_dtoa
  9952 ;; This function uses a non-reentrant model
  9953 ;;
  9954                           
  9955                           	psect	text33
  9956  0036FA                     __ptext33:
  9957                           	callstack 0
  9958  0036FA                     ___aodiv:
  9959                           	callstack 23
  9960  0036FA  0E00               	movlw	0
  9961  0036FC  6E13               	movwf	___aodiv@sign^0,c
  9962  0036FE  BE11               	btfsc	(___aodiv@divisor+7)^0,7,c
  9963  003700  EF86  F01B         	goto	u6560
  9964  003704  EF84  F01B         	goto	u6561
  9965  003708                     u6561:
  9966  003708  EF98  F01B         	goto	l5332
  9967  00370C                     u6560:
  9968  00370C  1E11               	comf	(___aodiv@divisor+7)^0,f,c
  9969  00370E  1E10               	comf	(___aodiv@divisor+6)^0,f,c
  9970  003710  1E0F               	comf	(___aodiv@divisor+5)^0,f,c
  9971  003712  1E0E               	comf	(___aodiv@divisor+4)^0,f,c
  9972  003714  1E0D               	comf	(___aodiv@divisor+3)^0,f,c
  9973  003716  1E0C               	comf	(___aodiv@divisor+2)^0,f,c
  9974  003718  1E0B               	comf	(___aodiv@divisor+1)^0,f,c
  9975  00371A  6C0A               	negf	___aodiv@divisor^0,c
  9976  00371C  0E00               	movlw	0
  9977  00371E  220B               	addwfc	(___aodiv@divisor+1)^0,f,c
  9978  003720  220C               	addwfc	(___aodiv@divisor+2)^0,f,c
  9979  003722  220D               	addwfc	(___aodiv@divisor+3)^0,f,c
  9980  003724  220E               	addwfc	(___aodiv@divisor+4)^0,f,c
  9981  003726  220F               	addwfc	(___aodiv@divisor+5)^0,f,c
  9982  003728  2210               	addwfc	(___aodiv@divisor+6)^0,f,c
  9983  00372A  2211               	addwfc	(___aodiv@divisor+7)^0,f,c
  9984  00372C  0E01               	movlw	1
  9985  00372E  6E13               	movwf	___aodiv@sign^0,c
  9986  003730                     l5332:
  9987  003730  BE09               	btfsc	(___aodiv@dividend+7)^0,7,c
  9988  003732  EF9F  F01B         	goto	u6570
  9989  003736  EF9D  F01B         	goto	u6571
  9990  00373A                     u6571:
  9991  00373A  EFB1  F01B         	goto	l5338
  9992  00373E                     u6570:
  9993  00373E  1E09               	comf	(___aodiv@dividend+7)^0,f,c
  9994  003740  1E08               	comf	(___aodiv@dividend+6)^0,f,c
  9995  003742  1E07               	comf	(___aodiv@dividend+5)^0,f,c
  9996  003744  1E06               	comf	(___aodiv@dividend+4)^0,f,c
  9997  003746  1E05               	comf	(___aodiv@dividend+3)^0,f,c
  9998  003748  1E04               	comf	(___aodiv@dividend+2)^0,f,c
  9999  00374A  1E03               	comf	(___aodiv@dividend+1)^0,f,c
 10000  00374C  6C02               	negf	___aodiv@dividend^0,c
 10001  00374E  0E00               	movlw	0
 10002  003750  2203               	addwfc	(___aodiv@dividend+1)^0,f,c
 10003  003752  2204               	addwfc	(___aodiv@dividend+2)^0,f,c
 10004  003754  2205               	addwfc	(___aodiv@dividend+3)^0,f,c
 10005  003756  2206               	addwfc	(___aodiv@dividend+4)^0,f,c
 10006  003758  2207               	addwfc	(___aodiv@dividend+5)^0,f,c
 10007  00375A  2208               	addwfc	(___aodiv@dividend+6)^0,f,c
 10008  00375C  2209               	addwfc	(___aodiv@dividend+7)^0,f,c
 10009  00375E  0E01               	movlw	1
 10010  003760  1A13               	xorwf	___aodiv@sign^0,f,c
 10011  003762                     l5338:
 10012  003762  EE20  F014         	lfsr	2,___aodiv@quotient
 10013  003766  0E07               	movlw	7
 10014  003768                     u6581:
 10015  003768  6ADE               	clrf	postinc2,c
 10016  00376A  06E8               	decf	wreg,f,c
 10017  00376C  E2FD               	bc	u6581
 10018  00376E  500A               	movf	___aodiv@divisor^0,w,c
 10019  003770  100B               	iorwf	(___aodiv@divisor+1)^0,w,c
 10020  003772  100C               	iorwf	(___aodiv@divisor+2)^0,w,c
 10021  003774  100D               	iorwf	(___aodiv@divisor+3)^0,w,c
 10022  003776  100E               	iorwf	(___aodiv@divisor+4)^0,w,c
 10023  003778  100F               	iorwf	(___aodiv@divisor+5)^0,w,c
 10024  00377A  1010               	iorwf	(___aodiv@divisor+6)^0,w,c
 10025  00377C  1011               	iorwf	(___aodiv@divisor+7)^0,w,c
 10026  00377E  B4D8               	btfsc	status,2,c
 10027  003780  EFC4  F01B         	goto	u6591
 10028  003784  EFC6  F01B         	goto	u6590
 10029  003788                     u6591:
 10030  003788  EF18  F01C         	goto	l5360
 10031  00378C                     u6590:
 10032  00378C  0E01               	movlw	1
 10033  00378E  6E12               	movwf	___aodiv@counter^0,c
 10034  003790  EFD4  F01B         	goto	l5346
 10035  003794                     l5344:
 10036  003794  90D8               	bcf	status,0,c
 10037  003796  360A               	rlcf	___aodiv@divisor^0,f,c
 10038  003798  360B               	rlcf	(___aodiv@divisor+1)^0,f,c
 10039  00379A  360C               	rlcf	(___aodiv@divisor+2)^0,f,c
 10040  00379C  360D               	rlcf	(___aodiv@divisor+3)^0,f,c
 10041  00379E  360E               	rlcf	(___aodiv@divisor+4)^0,f,c
 10042  0037A0  360F               	rlcf	(___aodiv@divisor+5)^0,f,c
 10043  0037A2  3610               	rlcf	(___aodiv@divisor+6)^0,f,c
 10044  0037A4  3611               	rlcf	(___aodiv@divisor+7)^0,f,c
 10045  0037A6  2A12               	incf	___aodiv@counter^0,f,c
 10046  0037A8                     l5346:
 10047  0037A8  AE11               	btfss	(___aodiv@divisor+7)^0,7,c
 10048  0037AA  EFD9  F01B         	goto	u6601
 10049  0037AE  EFDB  F01B         	goto	u6600
 10050  0037B2                     u6601:
 10051  0037B2  EFCA  F01B         	goto	l5344
 10052  0037B6                     u6600:
 10053  0037B6                     l5348:
 10054  0037B6  90D8               	bcf	status,0,c
 10055  0037B8  3614               	rlcf	___aodiv@quotient^0,f,c
 10056  0037BA  3615               	rlcf	(___aodiv@quotient+1)^0,f,c
 10057  0037BC  3616               	rlcf	(___aodiv@quotient+2)^0,f,c
 10058  0037BE  3617               	rlcf	(___aodiv@quotient+3)^0,f,c
 10059  0037C0  3618               	rlcf	(___aodiv@quotient+4)^0,f,c
 10060  0037C2  3619               	rlcf	(___aodiv@quotient+5)^0,f,c
 10061  0037C4  361A               	rlcf	(___aodiv@quotient+6)^0,f,c
 10062  0037C6  361B               	rlcf	(___aodiv@quotient+7)^0,f,c
 10063  0037C8  500A               	movf	___aodiv@divisor^0,w,c
 10064  0037CA  5C02               	subwf	___aodiv@dividend^0,w,c
 10065  0037CC  500B               	movf	(___aodiv@divisor+1)^0,w,c
 10066  0037CE  5803               	subwfb	(___aodiv@dividend+1)^0,w,c
 10067  0037D0  500C               	movf	(___aodiv@divisor+2)^0,w,c
 10068  0037D2  5804               	subwfb	(___aodiv@dividend+2)^0,w,c
 10069  0037D4  500D               	movf	(___aodiv@divisor+3)^0,w,c
 10070  0037D6  5805               	subwfb	(___aodiv@dividend+3)^0,w,c
 10071  0037D8  500E               	movf	(___aodiv@divisor+4)^0,w,c
 10072  0037DA  5806               	subwfb	(___aodiv@dividend+4)^0,w,c
 10073  0037DC  500F               	movf	(___aodiv@divisor+5)^0,w,c
 10074  0037DE  5807               	subwfb	(___aodiv@dividend+5)^0,w,c
 10075  0037E0  5010               	movf	(___aodiv@divisor+6)^0,w,c
 10076  0037E2  5808               	subwfb	(___aodiv@dividend+6)^0,w,c
 10077  0037E4  5011               	movf	(___aodiv@divisor+7)^0,w,c
 10078  0037E6  5809               	subwfb	(___aodiv@dividend+7)^0,w,c
 10079  0037E8  A0D8               	btfss	status,0,c
 10080  0037EA  EFF9  F01B         	goto	u6611
 10081  0037EE  EFFB  F01B         	goto	u6610
 10082  0037F2                     u6611:
 10083  0037F2  EF0C  F01C         	goto	l5356
 10084  0037F6                     u6610:
 10085  0037F6  500A               	movf	___aodiv@divisor^0,w,c
 10086  0037F8  5E02               	subwf	___aodiv@dividend^0,f,c
 10087  0037FA  500B               	movf	(___aodiv@divisor+1)^0,w,c
 10088  0037FC  5A03               	subwfb	(___aodiv@dividend+1)^0,f,c
 10089  0037FE  500C               	movf	(___aodiv@divisor+2)^0,w,c
 10090  003800  5A04               	subwfb	(___aodiv@dividend+2)^0,f,c
 10091  003802  500D               	movf	(___aodiv@divisor+3)^0,w,c
 10092  003804  5A05               	subwfb	(___aodiv@dividend+3)^0,f,c
 10093  003806  500E               	movf	(___aodiv@divisor+4)^0,w,c
 10094  003808  5A06               	subwfb	(___aodiv@dividend+4)^0,f,c
 10095  00380A  500F               	movf	(___aodiv@divisor+5)^0,w,c
 10096  00380C  5A07               	subwfb	(___aodiv@dividend+5)^0,f,c
 10097  00380E  5010               	movf	(___aodiv@divisor+6)^0,w,c
 10098  003810  5A08               	subwfb	(___aodiv@dividend+6)^0,f,c
 10099  003812  5011               	movf	(___aodiv@divisor+7)^0,w,c
 10100  003814  5A09               	subwfb	(___aodiv@dividend+7)^0,f,c
 10101  003816  8014               	bsf	___aodiv@quotient^0,0,c
 10102  003818                     l5356:
 10103  003818  90D8               	bcf	status,0,c
 10104  00381A  3211               	rrcf	(___aodiv@divisor+7)^0,f,c
 10105  00381C  3210               	rrcf	(___aodiv@divisor+6)^0,f,c
 10106  00381E  320F               	rrcf	(___aodiv@divisor+5)^0,f,c
 10107  003820  320E               	rrcf	(___aodiv@divisor+4)^0,f,c
 10108  003822  320D               	rrcf	(___aodiv@divisor+3)^0,f,c
 10109  003824  320C               	rrcf	(___aodiv@divisor+2)^0,f,c
 10110  003826  320B               	rrcf	(___aodiv@divisor+1)^0,f,c
 10111  003828  320A               	rrcf	___aodiv@divisor^0,f,c
 10112  00382A  2E12               	decfsz	___aodiv@counter^0,f,c
 10113  00382C  EFDB  F01B         	goto	l5348
 10114  003830                     l5360:
 10115  003830  5013               	movf	___aodiv@sign^0,w,c
 10116  003832  B4D8               	btfsc	status,2,c
 10117  003834  EF1E  F01C         	goto	u6621
 10118  003838  EF20  F01C         	goto	u6620
 10119  00383C                     u6621:
 10120  00383C  EF30  F01C         	goto	l5364
 10121  003840                     u6620:
 10122  003840  1E1B               	comf	(___aodiv@quotient+7)^0,f,c
 10123  003842  1E1A               	comf	(___aodiv@quotient+6)^0,f,c
 10124  003844  1E19               	comf	(___aodiv@quotient+5)^0,f,c
 10125  003846  1E18               	comf	(___aodiv@quotient+4)^0,f,c
 10126  003848  1E17               	comf	(___aodiv@quotient+3)^0,f,c
 10127  00384A  1E16               	comf	(___aodiv@quotient+2)^0,f,c
 10128  00384C  1E15               	comf	(___aodiv@quotient+1)^0,f,c
 10129  00384E  6C14               	negf	___aodiv@quotient^0,c
 10130  003850  0E00               	movlw	0
 10131  003852  2215               	addwfc	(___aodiv@quotient+1)^0,f,c
 10132  003854  2216               	addwfc	(___aodiv@quotient+2)^0,f,c
 10133  003856  2217               	addwfc	(___aodiv@quotient+3)^0,f,c
 10134  003858  2218               	addwfc	(___aodiv@quotient+4)^0,f,c
 10135  00385A  2219               	addwfc	(___aodiv@quotient+5)^0,f,c
 10136  00385C  221A               	addwfc	(___aodiv@quotient+6)^0,f,c
 10137  00385E  221B               	addwfc	(___aodiv@quotient+7)^0,f,c
 10138  003860                     l5364:
 10139  003860  C014  F002         	movff	___aodiv@quotient,?___aodiv
 10140  003864  C015  F003         	movff	___aodiv@quotient+1,?___aodiv+1
 10141  003868  C016  F004         	movff	___aodiv@quotient+2,?___aodiv+2
 10142  00386C  C017  F005         	movff	___aodiv@quotient+3,?___aodiv+3
 10143  003870  C018  F006         	movff	___aodiv@quotient+4,?___aodiv+4
 10144  003874  C019  F007         	movff	___aodiv@quotient+5,?___aodiv+5
 10145  003878  C01A  F008         	movff	___aodiv@quotient+6,?___aodiv+6
 10146  00387C  C01B  F009         	movff	___aodiv@quotient+7,?___aodiv+7
 10147  003880  0012               	return		;funcret
 10148  003882                     __end_of___aodiv:
 10149                           	callstack 0
 10150                           
 10151 ;; *************** function _atoi *****************
 10152 ;; Defined at:
 10153 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\atoi.c"
 10154 ;; Parameters:    Size  Location     Type
 10155 ;;  s               2    8[COMRAM] PTR const unsigned char 
 10156 ;;		 -> STR_23(15), STR_22(3), STR_18(10), STR_17(3), 
 10157 ;;		 -> STR_13(16), STR_12(16), STR_11(3), STR_7(3), 
 10158 ;;		 -> STR_6(3), 
 10159 ;; Auto vars:     Size  Location     Type
 10160 ;;  n               2   21[COMRAM] int 
 10161 ;;  neg             2   14[COMRAM] int 
 10162 ;; Return value:  Size  Location     Type
 10163 ;;                  2    8[COMRAM] int 
 10164 ;; Registers used:
 10165 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10166 ;; Tracked objects:
 10167 ;;		On entry : 0/0
 10168 ;;		On exit  : 0/0
 10169 ;;		Unchanged: 0/0
 10170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10171 ;;      Params:         2       0       0       0       0       0       0       0       0
 10172 ;;      Locals:         9       0       0       0       0       0       0       0       0
 10173 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10174 ;;      Totals:        15       0       0       0       0       0       0       0       0
 10175 ;;Total ram usage:       15 bytes
 10176 ;; Hardware stack levels used:    1
 10177 ;; Hardware stack levels required when called:    3
 10178 ;; This function calls:
 10179 ;;		___wmul
 10180 ;;		_isdigit
 10181 ;;		_isspace
 10182 ;; This function is called by:
 10183 ;;		_vfpfcnvrt
 10184 ;; This function uses a non-reentrant model
 10185 ;;
 10186                           
 10187                           	psect	text34
 10188  00356A                     __ptext34:
 10189                           	callstack 0
 10190  00356A                     _atoi:
 10191                           	callstack 23
 10192  00356A  0E00               	movlw	0
 10193  00356C  6E17               	movwf	(atoi@n+1)^0,c
 10194  00356E  0E00               	movlw	0
 10195  003570  6E16               	movwf	atoi@n^0,c
 10196  003572  0E00               	movlw	0
 10197  003574  6E10               	movwf	(atoi@neg+1)^0,c
 10198  003576  0E00               	movlw	0
 10199  003578  6E0F               	movwf	atoi@neg^0,c
 10200  00357A  EFC1  F01A         	goto	l6318
 10201  00357E                     l6316:
 10202  00357E  4A09               	infsnz	atoi@s^0,f,c
 10203  003580  2A0A               	incf	(atoi@s+1)^0,f,c
 10204  003582                     l6318:
 10205  003582  0E01               	movlw	1
 10206  003584  6E15               	movwf	_atoi$1383^0,c
 10207  003586  C009  FFF6         	movff	atoi@s,tblptrl
 10208  00358A  C00A  FFF7         	movff	atoi@s+1,tblptrh
 10209  00358E                     	if	0	;tblptru may be non-zero
 10210  00358E                     	endif
 10211  00358E                     	if	0	;tblptru may be non-zero
 10212  00358E                     	endif
 10213  00358E  0008               	tblrd		*
 10214  003590  50F5               	movf	tablat,w,c
 10215  003592  0A20               	xorlw	32
 10216  003594  B4D8               	btfsc	status,2,c
 10217  003596  EFCF  F01A         	goto	u8371
 10218  00359A  EFD1  F01A         	goto	u8370
 10219  00359E                     u8371:
 10220  00359E  EFEE  F01A         	goto	l6326
 10221  0035A2                     u8370:
 10222  0035A2  0EF7               	movlw	247
 10223  0035A4  6E0B               	movwf	??_atoi^0,c
 10224  0035A6  0EFF               	movlw	255
 10225  0035A8  6E0C               	movwf	(??_atoi+1)^0,c
 10226  0035AA  C009  FFF6         	movff	atoi@s,tblptrl
 10227  0035AE  C00A  FFF7         	movff	atoi@s+1,tblptrh
 10228  0035B2                     	if	0	;tblptru may be non-zero
 10229  0035B2                     	endif
 10230  0035B2                     	if	0	;tblptru may be non-zero
 10231  0035B2                     	endif
 10232  0035B2  0008               	tblrd		*
 10233  0035B4  50F5               	movf	tablat,w,c
 10234  0035B6  6E0D               	movwf	(??_atoi+2)^0,c
 10235  0035B8  6A0E               	clrf	(??_atoi+3)^0,c
 10236  0035BA  500B               	movf	??_atoi^0,w,c
 10237  0035BC  260D               	addwf	(??_atoi+2)^0,f,c
 10238  0035BE  500C               	movf	(??_atoi+1)^0,w,c
 10239  0035C0  220E               	addwfc	(??_atoi+3)^0,f,c
 10240  0035C2  500E               	movf	(??_atoi+3)^0,w,c
 10241  0035C4  E109               	bnz	u8380
 10242  0035C6  0E05               	movlw	5
 10243  0035C8  5C0D               	subwf	(??_atoi+2)^0,w,c
 10244  0035CA  A0D8               	btfss	status,0,c
 10245  0035CC  EFEA  F01A         	goto	u8381
 10246  0035D0  EFEC  F01A         	goto	u8380
 10247  0035D4                     u8381:
 10248  0035D4  EFEE  F01A         	goto	l6326
 10249  0035D8                     u8380:
 10250  0035D8  0E00               	movlw	0
 10251  0035DA  6E15               	movwf	_atoi$1383^0,c
 10252  0035DC                     l6326:
 10253  0035DC  C015  F011         	movff	_atoi$1383,_atoi$1382
 10254  0035E0  6A12               	clrf	(_atoi$1382+1)^0,c
 10255  0035E2  5011               	movf	_atoi$1382^0,w,c
 10256  0035E4  1012               	iorwf	(_atoi$1382+1)^0,w,c
 10257  0035E6  A4D8               	btfss	status,2,c
 10258  0035E8  EFF8  F01A         	goto	u8391
 10259  0035EC  EFFA  F01A         	goto	u8390
 10260  0035F0                     u8391:
 10261  0035F0  EFBF  F01A         	goto	l6316
 10262  0035F4                     u8390:
 10263  0035F4  EF04  F01B         	goto	l6336
 10264  0035F8                     l6332:
 10265  0035F8  0E00               	movlw	0
 10266  0035FA  6E10               	movwf	(atoi@neg+1)^0,c
 10267  0035FC  0E01               	movlw	1
 10268  0035FE  6E0F               	movwf	atoi@neg^0,c
 10269  003600                     l6334:
 10270  003600  4A09               	infsnz	atoi@s^0,f,c
 10271  003602  2A0A               	incf	(atoi@s+1)^0,f,c
 10272  003604  EF39  F01B         	goto	l6342
 10273  003608                     l6336:
 10274  003608  C009  FFF6         	movff	atoi@s,tblptrl
 10275  00360C  C00A  FFF7         	movff	atoi@s+1,tblptrh
 10276  003610                     	if	0	;tblptru may be non-zero
 10277  003610                     	endif
 10278  003610                     	if	0	;tblptru may be non-zero
 10279  003610                     	endif
 10280  003610  0008               	tblrd		*
 10281  003612  50F5               	movf	tablat,w,c
 10282  003614  6E0B               	movwf	??_atoi^0,c
 10283  003616  6A0C               	clrf	(??_atoi+1)^0,c
 10284                           
 10285                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10286                           ; Switch size 1, requested type "simple"
 10287                           ; Number of cases is 1, Range of values is 0 to 0
 10288                           ; switch strategies available:
 10289                           ; Name         Instructions Cycles
 10290                           ; simple_byte            4     3 (average)
 10291                           ;	Chosen strategy is simple_byte
 10292  003618  500C               	movf	(??_atoi+1)^0,w,c
 10293  00361A  0A00               	xorlw	0	; case 0
 10294  00361C  B4D8               	btfsc	status,2,c
 10295  00361E  EF13  F01B         	goto	l6784
 10296  003622  EF39  F01B         	goto	l6342
 10297  003626                     l6784:
 10298                           
 10299                           ; Switch size 1, requested type "simple"
 10300                           ; Number of cases is 2, Range of values is 43 to 45
 10301                           ; switch strategies available:
 10302                           ; Name         Instructions Cycles
 10303                           ; simple_byte            7     4 (average)
 10304                           ;	Chosen strategy is simple_byte
 10305  003626  500B               	movf	??_atoi^0,w,c
 10306  003628  0A2B               	xorlw	43	; case 43
 10307  00362A  B4D8               	btfsc	status,2,c
 10308  00362C  EF00  F01B         	goto	l6334
 10309  003630  0A06               	xorlw	6	; case 45
 10310  003632  B4D8               	btfsc	status,2,c
 10311  003634  EFFC  F01A         	goto	l6332
 10312  003638  EF39  F01B         	goto	l6342
 10313  00363C                     l6338:
 10314  00363C  C016  F002         	movff	atoi@n,___wmul@multiplier
 10315  003640  C017  F003         	movff	atoi@n+1,___wmul@multiplier+1
 10316  003644  0E00               	movlw	0
 10317  003646  6E05               	movwf	(___wmul@multiplicand+1)^0,c
 10318  003648  0E0A               	movlw	10
 10319  00364A  6E04               	movwf	___wmul@multiplicand^0,c
 10320  00364C  EC9F  F025         	call	___wmul	;wreg free
 10321  003650  C009  FFF6         	movff	atoi@s,tblptrl
 10322  003654  C00A  FFF7         	movff	atoi@s+1,tblptrh
 10323  003658                     	if	0	;tblptru may be non-zero
 10324  003658                     	endif
 10325  003658                     	if	0	;tblptru may be non-zero
 10326  003658                     	endif
 10327  003658  0008               	tblrd		*
 10328  00365A  50F5               	movf	tablat,w,c
 10329  00365C  5E02               	subwf	?___wmul^0,f,c
 10330  00365E  0E00               	movlw	0
 10331  003660  5A03               	subwfb	(?___wmul+1)^0,f,c
 10332  003662  0E30               	movlw	48
 10333  003664  2402               	addwf	?___wmul^0,w,c
 10334  003666  6E16               	movwf	atoi@n^0,c
 10335  003668  0E00               	movlw	0
 10336  00366A  2003               	addwfc	(?___wmul+1)^0,w,c
 10337  00366C  6E17               	movwf	(atoi@n+1)^0,c
 10338  00366E  EF00  F01B         	goto	l6334
 10339  003672                     l6342:
 10340  003672  0ED0               	movlw	208
 10341  003674  6E0B               	movwf	??_atoi^0,c
 10342  003676  0EFF               	movlw	255
 10343  003678  6E0C               	movwf	(??_atoi+1)^0,c
 10344  00367A  C009  FFF6         	movff	atoi@s,tblptrl
 10345  00367E  C00A  FFF7         	movff	atoi@s+1,tblptrh
 10346  003682                     	if	0	;tblptru may be non-zero
 10347  003682                     	endif
 10348  003682                     	if	0	;tblptru may be non-zero
 10349  003682                     	endif
 10350  003682  0008               	tblrd		*
 10351  003684  50F5               	movf	tablat,w,c
 10352  003686  6E0D               	movwf	(??_atoi+2)^0,c
 10353  003688  6A0E               	clrf	(??_atoi+3)^0,c
 10354  00368A  500B               	movf	??_atoi^0,w,c
 10355  00368C  260D               	addwf	(??_atoi+2)^0,f,c
 10356  00368E  500C               	movf	(??_atoi+1)^0,w,c
 10357  003690  220E               	addwfc	(??_atoi+3)^0,f,c
 10358  003692  500E               	movf	(??_atoi+3)^0,w,c
 10359  003694  E10A               	bnz	u8400
 10360  003696  0E0A               	movlw	10
 10361  003698  5C0D               	subwf	(??_atoi+2)^0,w,c
 10362  00369A  A0D8               	btfss	status,0,c
 10363  00369C  EF52  F01B         	goto	u8401
 10364  0036A0  EF55  F01B         	goto	u8400
 10365  0036A4                     u8401:
 10366  0036A4  0E01               	movlw	1
 10367  0036A6  EF56  F01B         	goto	u8410
 10368  0036AA                     u8400:
 10369  0036AA  0E00               	movlw	0
 10370  0036AC                     u8410:
 10371  0036AC  6E13               	movwf	_atoi$1384^0,c
 10372  0036AE  6A14               	clrf	(_atoi$1384+1)^0,c
 10373  0036B0  5013               	movf	_atoi$1384^0,w,c
 10374  0036B2  1014               	iorwf	(_atoi$1384+1)^0,w,c
 10375  0036B4  A4D8               	btfss	status,2,c
 10376  0036B6  EF5F  F01B         	goto	u8421
 10377  0036BA  EF61  F01B         	goto	u8420
 10378  0036BE                     u8421:
 10379  0036BE  EF1E  F01B         	goto	l6338
 10380  0036C2                     u8420:
 10381  0036C2  500F               	movf	atoi@neg^0,w,c
 10382  0036C4  1010               	iorwf	(atoi@neg+1)^0,w,c
 10383  0036C6  A4D8               	btfss	status,2,c
 10384  0036C8  EF68  F01B         	goto	u8431
 10385  0036CC  EF6A  F01B         	goto	u8430
 10386  0036D0                     u8431:
 10387  0036D0  EF78  F01B         	goto	l1141
 10388  0036D4                     u8430:
 10389  0036D4  C016  F00B         	movff	atoi@n,??_atoi
 10390  0036D8  C017  F00C         	movff	atoi@n+1,??_atoi+1
 10391  0036DC  1E0B               	comf	??_atoi^0,f,c
 10392  0036DE  1E0C               	comf	(??_atoi+1)^0,f,c
 10393  0036E0  4A0B               	infsnz	??_atoi^0,f,c
 10394  0036E2  2A0C               	incf	(??_atoi+1)^0,f,c
 10395  0036E4  C00B  F009         	movff	??_atoi,?_atoi
 10396  0036E8  C00C  F00A         	movff	??_atoi+1,?_atoi+1
 10397  0036EC  EF7C  F01B         	goto	l1144
 10398  0036F0                     l1141:
 10399  0036F0  C016  F009         	movff	atoi@n,?_atoi
 10400  0036F4  C017  F00A         	movff	atoi@n+1,?_atoi+1
 10401  0036F8                     l1144:
 10402  0036F8  0012               	return		;funcret
 10403  0036FA                     __end_of_atoi:
 10404                           	callstack 0
 10405                           
 10406 ;; *************** function _isspace *****************
 10407 ;; Defined at:
 10408 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isspace.c"
 10409 ;; Parameters:    Size  Location     Type
 10410 ;;  c               2    1[COMRAM] int 
 10411 ;; Auto vars:     Size  Location     Type
 10412 ;;		None
 10413 ;; Return value:  Size  Location     Type
 10414 ;;                  2    1[COMRAM] int 
 10415 ;; Registers used:
 10416 ;;		wreg, status,2, status,0
 10417 ;; Tracked objects:
 10418 ;;		On entry : 0/0
 10419 ;;		On exit  : 0/0
 10420 ;;		Unchanged: 0/0
 10421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10422 ;;      Params:         2       0       0       0       0       0       0       0       0
 10423 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10424 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10425 ;;      Totals:         7       0       0       0       0       0       0       0       0
 10426 ;;Total ram usage:        7 bytes
 10427 ;; Hardware stack levels used:    1
 10428 ;; Hardware stack levels required when called:    2
 10429 ;; This function calls:
 10430 ;;		Nothing
 10431 ;; This function is called by:
 10432 ;;		_atoi
 10433 ;; This function uses a non-reentrant model
 10434 ;;
 10435                           
 10436                           	psect	text35
 10437  0048FE                     __ptext35:
 10438                           	callstack 0
 10439  0048FE                     _isspace:
 10440                           	callstack 23
 10441  0048FE  0E01               	movlw	1
 10442  004900  6E08               	movwf	_isspace$1413^0,c
 10443  004902  0E20               	movlw	32
 10444  004904  1802               	xorwf	isspace@c^0,w,c
 10445  004906  1003               	iorwf	(isspace@c+1)^0,w,c
 10446  004908  B4D8               	btfsc	status,2,c
 10447  00490A  EF89  F024         	goto	u7681
 10448  00490E  EF8B  F024         	goto	u7680
 10449  004912                     u7681:
 10450  004912  EFA4  F024         	goto	l5950
 10451  004916                     u7680:
 10452  004916  0EF7               	movlw	247
 10453  004918  6E04               	movwf	??_isspace^0,c
 10454  00491A  0EFF               	movlw	255
 10455  00491C  6E05               	movwf	(??_isspace+1)^0,c
 10456  00491E  C002  F006         	movff	isspace@c,??_isspace+2
 10457  004922  C003  F007         	movff	isspace@c+1,??_isspace+3
 10458  004926  5004               	movf	??_isspace^0,w,c
 10459  004928  2606               	addwf	(??_isspace+2)^0,f,c
 10460  00492A  5005               	movf	(??_isspace+1)^0,w,c
 10461  00492C  2207               	addwfc	(??_isspace+3)^0,f,c
 10462  00492E  5007               	movf	(??_isspace+3)^0,w,c
 10463  004930  E109               	bnz	u7690
 10464  004932  0E05               	movlw	5
 10465  004934  5C06               	subwf	(??_isspace+2)^0,w,c
 10466  004936  A0D8               	btfss	status,0,c
 10467  004938  EFA0  F024         	goto	u7691
 10468  00493C  EFA2  F024         	goto	u7690
 10469  004940                     u7691:
 10470  004940  EFA4  F024         	goto	l5950
 10471  004944                     u7690:
 10472  004944  0E00               	movlw	0
 10473  004946  6E08               	movwf	_isspace$1413^0,c
 10474  004948                     l5950:
 10475  004948  C008  F002         	movff	_isspace$1413,?_isspace
 10476  00494C  6A03               	clrf	(?_isspace+1)^0,c
 10477  00494E  0012               	return		;funcret
 10478  004950                     __end_of_isspace:
 10479                           	callstack 0
 10480                           
 10481 ;; *************** function _isdigit *****************
 10482 ;; Defined at:
 10483 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isdigit.c"
 10484 ;; Parameters:    Size  Location     Type
 10485 ;;  c               2    1[COMRAM] int 
 10486 ;; Auto vars:     Size  Location     Type
 10487 ;;		None
 10488 ;; Return value:  Size  Location     Type
 10489 ;;                  2    1[COMRAM] int 
 10490 ;; Registers used:
 10491 ;;		wreg, status,2, status,0
 10492 ;; Tracked objects:
 10493 ;;		On entry : 0/0
 10494 ;;		On exit  : 0/0
 10495 ;;		Unchanged: 0/0
 10496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10497 ;;      Params:         2       0       0       0       0       0       0       0       0
 10498 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10499 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10500 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10501 ;;Total ram usage:        6 bytes
 10502 ;; Hardware stack levels used:    1
 10503 ;; Hardware stack levels required when called:    2
 10504 ;; This function calls:
 10505 ;;		Nothing
 10506 ;; This function is called by:
 10507 ;;		_vfpfcnvrt
 10508 ;;		_atoi
 10509 ;; This function uses a non-reentrant model
 10510 ;;
 10511                           
 10512                           	psect	text36
 10513  004AD0                     __ptext36:
 10514                           	callstack 0
 10515  004AD0                     _isdigit:
 10516                           	callstack 24
 10517  004AD0  0ED0               	movlw	208
 10518  004AD2  6E04               	movwf	??_isdigit^0,c
 10519  004AD4  0EFF               	movlw	255
 10520  004AD6  6E05               	movwf	(??_isdigit+1)^0,c
 10521  004AD8  C002  F006         	movff	isdigit@c,??_isdigit+2
 10522  004ADC  C003  F007         	movff	isdigit@c+1,??_isdigit+3
 10523  004AE0  5004               	movf	??_isdigit^0,w,c
 10524  004AE2  2606               	addwf	(??_isdigit+2)^0,f,c
 10525  004AE4  5005               	movf	(??_isdigit+1)^0,w,c
 10526  004AE6  2207               	addwfc	(??_isdigit+3)^0,f,c
 10527  004AE8  5007               	movf	(??_isdigit+3)^0,w,c
 10528  004AEA  E10A               	bnz	u7660
 10529  004AEC  0E0A               	movlw	10
 10530  004AEE  5C06               	subwf	(??_isdigit+2)^0,w,c
 10531  004AF0  A0D8               	btfss	status,0,c
 10532  004AF2  EF7D  F025         	goto	u7661
 10533  004AF6  EF80  F025         	goto	u7660
 10534  004AFA                     u7661:
 10535  004AFA  0E01               	movlw	1
 10536  004AFC  EF81  F025         	goto	u7670
 10537  004B00                     u7660:
 10538  004B00  0E00               	movlw	0
 10539  004B02                     u7670:
 10540  004B02  6E02               	movwf	?_isdigit^0,c
 10541  004B04  6A03               	clrf	(?_isdigit+1)^0,c
 10542  004B06  0012               	return		;funcret
 10543  004B08                     __end_of_isdigit:
 10544                           	callstack 0
 10545                           
 10546 ;; *************** function ___wmul *****************
 10547 ;; Defined at:
 10548 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
 10549 ;; Parameters:    Size  Location     Type
 10550 ;;  multiplier      2    1[COMRAM] unsigned int 
 10551 ;;  multiplicand    2    3[COMRAM] unsigned int 
 10552 ;; Auto vars:     Size  Location     Type
 10553 ;;  product         2    5[COMRAM] unsigned int 
 10554 ;; Return value:  Size  Location     Type
 10555 ;;                  2    1[COMRAM] unsigned int 
 10556 ;; Registers used:
 10557 ;;		wreg, status,2, status,0, prodl, prodh
 10558 ;; Tracked objects:
 10559 ;;		On entry : 0/0
 10560 ;;		On exit  : 0/0
 10561 ;;		Unchanged: 0/0
 10562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10563 ;;      Params:         4       0       0       0       0       0       0       0       0
 10564 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10565 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10566 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10567 ;;Total ram usage:        6 bytes
 10568 ;; Hardware stack levels used:    1
 10569 ;; Hardware stack levels required when called:    2
 10570 ;; This function calls:
 10571 ;;		Nothing
 10572 ;; This function is called by:
 10573 ;;		_atoi
 10574 ;; This function uses a non-reentrant model
 10575 ;;
 10576                           
 10577                           	psect	text37
 10578  004B3E                     __ptext37:
 10579                           	callstack 0
 10580  004B3E                     ___wmul:
 10581                           	callstack 23
 10582  004B3E  5002               	movf	___wmul@multiplier^0,w,c
 10583  004B40  0204               	mulwf	___wmul@multiplicand^0,c
 10584  004B42  CFF3 F006          	movff	prodl,___wmul@product
 10585  004B46  CFF4 F007          	movff	prodh,___wmul@product+1
 10586  004B4A  5002               	movf	___wmul@multiplier^0,w,c
 10587  004B4C  0205               	mulwf	(___wmul@multiplicand+1)^0,c
 10588  004B4E  50F3               	movf	243,w,c
 10589  004B50  2607               	addwf	(___wmul@product+1)^0,f,c
 10590  004B52  5003               	movf	(___wmul@multiplier+1)^0,w,c
 10591  004B54  0204               	mulwf	___wmul@multiplicand^0,c
 10592  004B56  50F3               	movf	243,w,c
 10593  004B58  2607               	addwf	(___wmul@product+1)^0,f,c
 10594  004B5A  C006  F002         	movff	___wmul@product,?___wmul
 10595  004B5E  C007  F003         	movff	___wmul@product+1,?___wmul+1
 10596  004B62  0012               	return		;funcret
 10597  004B64                     __end_of___wmul:
 10598                           	callstack 0
 10599                           
 10600 ;; *************** function ___xxtofl *****************
 10601 ;; Defined at:
 10602 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\xxtofl.c"
 10603 ;; Parameters:    Size  Location     Type
 10604 ;;  sign            1    wreg     unsigned char 
 10605 ;;  val             4    1[COMRAM] long 
 10606 ;; Auto vars:     Size  Location     Type
 10607 ;;  sign            1    9[COMRAM] unsigned char 
 10608 ;;  arg             4   11[COMRAM] unsigned long 
 10609 ;;  exp             1   10[COMRAM] unsigned char 
 10610 ;; Return value:  Size  Location     Type
 10611 ;;                  4    1[COMRAM] unsigned char 
 10612 ;; Registers used:
 10613 ;;		wreg, status,2, status,0
 10614 ;; Tracked objects:
 10615 ;;		On entry : 0/0
 10616 ;;		On exit  : 0/0
 10617 ;;		Unchanged: 0/0
 10618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10619 ;;      Params:         4       0       0       0       0       0       0       0       0
 10620 ;;      Locals:         6       0       0       0       0       0       0       0       0
 10621 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10622 ;;      Totals:        14       0       0       0       0       0       0       0       0
 10623 ;;Total ram usage:       14 bytes
 10624 ;; Hardware stack levels used:    1
 10625 ;; Hardware stack levels required when called:    2
 10626 ;; This function calls:
 10627 ;;		Nothing
 10628 ;; This function is called by:
 10629 ;;		_MenuP
 10630 ;;		_UART_Init
 10631 ;; This function uses a non-reentrant model
 10632 ;;
 10633                           
 10634                           	psect	text38
 10635  0033B6                     __ptext38:
 10636                           	callstack 0
 10637  0033B6                     ___xxtofl:
 10638                           	callstack 27
 10639                           
 10640                           ;incstack = 0
 10641                           ;___xxtofl@sign stored from wreg
 10642  0033B6  6E0A               	movwf	___xxtofl@sign^0,c
 10643  0033B8  500A               	movf	___xxtofl@sign^0,w,c
 10644  0033BA  B4D8               	btfsc	status,2,c
 10645  0033BC  EFE2  F019         	goto	u5751
 10646  0033C0  EFE4  F019         	goto	u5750
 10647  0033C4                     u5751:
 10648  0033C4  EF06  F01A         	goto	l863
 10649  0033C8                     u5750:
 10650  0033C8  BE05               	btfsc	(___xxtofl@val+3)^0,7,c
 10651  0033CA  EFEB  F019         	goto	u5760
 10652  0033CE  EFE9  F019         	goto	u5761
 10653  0033D2                     u5761:
 10654  0033D2  EF06  F01A         	goto	l863
 10655  0033D6                     u5760:
 10656  0033D6  C002  F006         	movff	___xxtofl@val,??___xxtofl
 10657  0033DA  C003  F007         	movff	___xxtofl@val+1,??___xxtofl+1
 10658  0033DE  C004  F008         	movff	___xxtofl@val+2,??___xxtofl+2
 10659  0033E2  C005  F009         	movff	___xxtofl@val+3,??___xxtofl+3
 10660  0033E6  1E06               	comf	??___xxtofl^0,f,c
 10661  0033E8  1E07               	comf	(??___xxtofl+1)^0,f,c
 10662  0033EA  1E08               	comf	(??___xxtofl+2)^0,f,c
 10663  0033EC  1E09               	comf	(??___xxtofl+3)^0,f,c
 10664  0033EE  2A06               	incf	??___xxtofl^0,f,c
 10665  0033F0  0E00               	movlw	0
 10666  0033F2  2207               	addwfc	(??___xxtofl+1)^0,f,c
 10667  0033F4  2208               	addwfc	(??___xxtofl+2)^0,f,c
 10668  0033F6  2209               	addwfc	(??___xxtofl+3)^0,f,c
 10669  0033F8  C006  F00C         	movff	??___xxtofl,___xxtofl@arg
 10670  0033FC  C007  F00D         	movff	??___xxtofl+1,___xxtofl@arg+1
 10671  003400  C008  F00E         	movff	??___xxtofl+2,___xxtofl@arg+2
 10672  003404  C009  F00F         	movff	??___xxtofl+3,___xxtofl@arg+3
 10673  003408  EF0E  F01A         	goto	l4716
 10674  00340C                     l863:
 10675  00340C  C002  F00C         	movff	___xxtofl@val,___xxtofl@arg
 10676  003410  C003  F00D         	movff	___xxtofl@val+1,___xxtofl@arg+1
 10677  003414  C004  F00E         	movff	___xxtofl@val+2,___xxtofl@arg+2
 10678  003418  C005  F00F         	movff	___xxtofl@val+3,___xxtofl@arg+3
 10679  00341C                     l4716:
 10680  00341C  5002               	movf	___xxtofl@val^0,w,c
 10681  00341E  1003               	iorwf	(___xxtofl@val+1)^0,w,c
 10682  003420  1004               	iorwf	(___xxtofl@val+2)^0,w,c
 10683  003422  1005               	iorwf	(___xxtofl@val+3)^0,w,c
 10684  003424  A4D8               	btfss	status,2,c
 10685  003426  EF17  F01A         	goto	u5771
 10686  00342A  EF19  F01A         	goto	u5770
 10687  00342E                     u5771:
 10688  00342E  EF23  F01A         	goto	l4722
 10689  003432                     u5770:
 10690  003432  0E00               	movlw	0
 10691  003434  6E02               	movwf	?___xxtofl^0,c
 10692  003436  0E00               	movlw	0
 10693  003438  6E03               	movwf	(?___xxtofl+1)^0,c
 10694  00343A  0E00               	movlw	0
 10695  00343C  6E04               	movwf	(?___xxtofl+2)^0,c
 10696  00343E  0E00               	movlw	0
 10697  003440  6E05               	movwf	(?___xxtofl+3)^0,c
 10698  003442  EFB4  F01A         	goto	l866
 10699  003446                     l4722:
 10700  003446  0E96               	movlw	150
 10701  003448  6E0B               	movwf	___xxtofl@exp^0,c
 10702  00344A  EF2D  F01A         	goto	l4726
 10703  00344E                     l4724:
 10704  00344E  2A0B               	incf	___xxtofl@exp^0,f,c
 10705  003450  90D8               	bcf	status,0,c
 10706  003452  320F               	rrcf	(___xxtofl@arg+3)^0,f,c
 10707  003454  320E               	rrcf	(___xxtofl@arg+2)^0,f,c
 10708  003456  320D               	rrcf	(___xxtofl@arg+1)^0,f,c
 10709  003458  320C               	rrcf	___xxtofl@arg^0,f,c
 10710  00345A                     l4726:
 10711  00345A  0E00               	movlw	0
 10712  00345C  140C               	andwf	___xxtofl@arg^0,w,c
 10713  00345E  6E06               	movwf	??___xxtofl^0,c
 10714  003460  0E00               	movlw	0
 10715  003462  140D               	andwf	(___xxtofl@arg+1)^0,w,c
 10716  003464  6E07               	movwf	(??___xxtofl+1)^0,c
 10717  003466  0E00               	movlw	0
 10718  003468  140E               	andwf	(___xxtofl@arg+2)^0,w,c
 10719  00346A  6E08               	movwf	(??___xxtofl+2)^0,c
 10720  00346C  0EFE               	movlw	254
 10721  00346E  140F               	andwf	(___xxtofl@arg+3)^0,w,c
 10722  003470  6E09               	movwf	(??___xxtofl+3)^0,c
 10723  003472  5006               	movf	??___xxtofl^0,w,c
 10724  003474  1007               	iorwf	(??___xxtofl+1)^0,w,c
 10725  003476  1008               	iorwf	(??___xxtofl+2)^0,w,c
 10726  003478  1009               	iorwf	(??___xxtofl+3)^0,w,c
 10727  00347A  A4D8               	btfss	status,2,c
 10728  00347C  EF42  F01A         	goto	u5781
 10729  003480  EF44  F01A         	goto	u5780
 10730  003484                     u5781:
 10731  003484  EF27  F01A         	goto	l4724
 10732  003488                     u5780:
 10733  003488  EF52  F01A         	goto	l870
 10734  00348C                     l4728:
 10735  00348C  2A0B               	incf	___xxtofl@exp^0,f,c
 10736  00348E  0E01               	movlw	1
 10737  003490  260C               	addwf	___xxtofl@arg^0,f,c
 10738  003492  0E00               	movlw	0
 10739  003494  220D               	addwfc	(___xxtofl@arg+1)^0,f,c
 10740  003496  220E               	addwfc	(___xxtofl@arg+2)^0,f,c
 10741  003498  220F               	addwfc	(___xxtofl@arg+3)^0,f,c
 10742  00349A  90D8               	bcf	status,0,c
 10743  00349C  320F               	rrcf	(___xxtofl@arg+3)^0,f,c
 10744  00349E  320E               	rrcf	(___xxtofl@arg+2)^0,f,c
 10745  0034A0  320D               	rrcf	(___xxtofl@arg+1)^0,f,c
 10746  0034A2  320C               	rrcf	___xxtofl@arg^0,f,c
 10747  0034A4                     l870:
 10748  0034A4  0E00               	movlw	0
 10749  0034A6  140C               	andwf	___xxtofl@arg^0,w,c
 10750  0034A8  6E06               	movwf	??___xxtofl^0,c
 10751  0034AA  0E00               	movlw	0
 10752  0034AC  140D               	andwf	(___xxtofl@arg+1)^0,w,c
 10753  0034AE  6E07               	movwf	(??___xxtofl+1)^0,c
 10754  0034B0  0E00               	movlw	0
 10755  0034B2  140E               	andwf	(___xxtofl@arg+2)^0,w,c
 10756  0034B4  6E08               	movwf	(??___xxtofl+2)^0,c
 10757  0034B6  0EFF               	movlw	255
 10758  0034B8  140F               	andwf	(___xxtofl@arg+3)^0,w,c
 10759  0034BA  6E09               	movwf	(??___xxtofl+3)^0,c
 10760  0034BC  5006               	movf	??___xxtofl^0,w,c
 10761  0034BE  1007               	iorwf	(??___xxtofl+1)^0,w,c
 10762  0034C0  1008               	iorwf	(??___xxtofl+2)^0,w,c
 10763  0034C2  1009               	iorwf	(??___xxtofl+3)^0,w,c
 10764  0034C4  A4D8               	btfss	status,2,c
 10765  0034C6  EF67  F01A         	goto	u5791
 10766  0034CA  EF69  F01A         	goto	u5790
 10767  0034CE                     u5791:
 10768  0034CE  EF46  F01A         	goto	l4728
 10769  0034D2                     u5790:
 10770  0034D2  EF71  F01A         	goto	l4736
 10771  0034D6                     l4734:
 10772  0034D6  060B               	decf	___xxtofl@exp^0,f,c
 10773  0034D8  90D8               	bcf	status,0,c
 10774  0034DA  360C               	rlcf	___xxtofl@arg^0,f,c
 10775  0034DC  360D               	rlcf	(___xxtofl@arg+1)^0,f,c
 10776  0034DE  360E               	rlcf	(___xxtofl@arg+2)^0,f,c
 10777  0034E0  360F               	rlcf	(___xxtofl@arg+3)^0,f,c
 10778  0034E2                     l4736:
 10779  0034E2  BE0E               	btfsc	(___xxtofl@arg+2)^0,7,c
 10780  0034E4  EF76  F01A         	goto	u5801
 10781  0034E8  EF78  F01A         	goto	u5800
 10782  0034EC                     u5801:
 10783  0034EC  EF80  F01A         	goto	l877
 10784  0034F0                     u5800:
 10785  0034F0  0E02               	movlw	2
 10786  0034F2  600B               	cpfslt	___xxtofl@exp^0,c
 10787  0034F4  EF7E  F01A         	goto	u5811
 10788  0034F8  EF80  F01A         	goto	u5810
 10789  0034FC                     u5811:
 10790  0034FC  EF6B  F01A         	goto	l4734
 10791  003500                     u5810:
 10792  003500                     l877:
 10793  003500  B00B               	btfsc	___xxtofl@exp^0,0,c
 10794  003502  EF85  F01A         	goto	u5821
 10795  003506  EF87  F01A         	goto	u5820
 10796  00350A                     u5821:
 10797  00350A  EF88  F01A         	goto	l4742
 10798  00350E                     u5820:
 10799  00350E  9E0E               	bcf	(___xxtofl@arg+2)^0,7,c
 10800  003510                     l4742:
 10801  003510  90D8               	bcf	status,0,c
 10802  003512  320B               	rrcf	___xxtofl@exp^0,f,c
 10803  003514  C00B  F006         	movff	___xxtofl@exp,??___xxtofl
 10804  003518  6A07               	clrf	(??___xxtofl+1)^0,c
 10805  00351A  6A08               	clrf	(??___xxtofl+2)^0,c
 10806  00351C  6A09               	clrf	(??___xxtofl+3)^0,c
 10807  00351E  C006  F009         	movff	??___xxtofl,??___xxtofl+3
 10808  003522  6A08               	clrf	(??___xxtofl+2)^0,c
 10809  003524  6A07               	clrf	(??___xxtofl+1)^0,c
 10810  003526  6A06               	clrf	??___xxtofl^0,c
 10811  003528  5006               	movf	??___xxtofl^0,w,c
 10812  00352A  120C               	iorwf	___xxtofl@arg^0,f,c
 10813  00352C  5007               	movf	(??___xxtofl+1)^0,w,c
 10814  00352E  120D               	iorwf	(___xxtofl@arg+1)^0,f,c
 10815  003530  5008               	movf	(??___xxtofl+2)^0,w,c
 10816  003532  120E               	iorwf	(___xxtofl@arg+2)^0,f,c
 10817  003534  5009               	movf	(??___xxtofl+3)^0,w,c
 10818  003536  120F               	iorwf	(___xxtofl@arg+3)^0,f,c
 10819  003538  500A               	movf	___xxtofl@sign^0,w,c
 10820  00353A  B4D8               	btfsc	status,2,c
 10821  00353C  EFA2  F01A         	goto	u5831
 10822  003540  EFA4  F01A         	goto	u5830
 10823  003544                     u5831:
 10824  003544  EFAC  F01A         	goto	l4752
 10825  003548                     u5830:
 10826  003548  BE05               	btfsc	(___xxtofl@val+3)^0,7,c
 10827  00354A  EFAB  F01A         	goto	u5840
 10828  00354E  EFA9  F01A         	goto	u5841
 10829  003552                     u5841:
 10830  003552  EFAC  F01A         	goto	l4752
 10831  003556                     u5840:
 10832  003556  8E0F               	bsf	(___xxtofl@arg+3)^0,7,c
 10833  003558                     l4752:
 10834  003558  C00C  F002         	movff	___xxtofl@arg,?___xxtofl
 10835  00355C  C00D  F003         	movff	___xxtofl@arg+1,?___xxtofl+1
 10836  003560  C00E  F004         	movff	___xxtofl@arg+2,?___xxtofl+2
 10837  003564  C00F  F005         	movff	___xxtofl@arg+3,?___xxtofl+3
 10838  003568                     l866:
 10839  003568  0012               	return		;funcret
 10840  00356A                     __end_of___xxtofl:
 10841                           	callstack 0
 10842                           
 10843 ;; *************** function _LCD_Out *****************
 10844 ;; Defined at:
 10845 ;;		line 122 in file "LIBRERIA_LCD.c"
 10846 ;; Parameters:    Size  Location     Type
 10847 ;;  y               1    wreg     unsigned char 
 10848 ;;  x               1    9[COMRAM] unsigned char 
 10849 ;;  text            2   10[COMRAM] PTR unsigned char 
 10850 ;;		 -> STR_24(21), STR_21(9), STR_20(9), STR_19(18), 
 10851 ;;		 -> STR_16(9), STR_15(9), STR_14(18), aux(20), 
 10852 ;;		 -> STR_10(9), STR_9(9), STR_8(21), txt(10), 
 10853 ;;		 -> STR_5(9), STR_4(11), STR_3(11), STR_2(17), 
 10854 ;;		 -> STR_1(18), 
 10855 ;; Auto vars:     Size  Location     Type
 10856 ;;  y               1   12[COMRAM] unsigned char 
 10857 ;; Return value:  Size  Location     Type
 10858 ;;                  1    wreg      void 
 10859 ;; Registers used:
 10860 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10861 ;; Tracked objects:
 10862 ;;		On entry : 0/0
 10863 ;;		On exit  : 0/0
 10864 ;;		Unchanged: 0/0
 10865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10866 ;;      Params:         3       0       0       0       0       0       0       0       0
 10867 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10868 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10869 ;;      Totals:         4       0       0       0       0       0       0       0       0
 10870 ;;Total ram usage:        4 bytes
 10871 ;; Hardware stack levels used:    1
 10872 ;; Hardware stack levels required when called:    5
 10873 ;; This function calls:
 10874 ;;		_LCD_Chr_Cp
 10875 ;;		_LCD_XY
 10876 ;; This function is called by:
 10877 ;;		_MenuP
 10878 ;;		_LCD_LIMPIA_FILA
 10879 ;; This function uses a non-reentrant model
 10880 ;;
 10881                           
 10882                           	psect	text39
 10883  00466A                     __ptext39:
 10884                           	callstack 0
 10885  00466A                     _LCD_Out:
 10886                           	callstack 24
 10887                           
 10888                           ;incstack = 0
 10889                           ;LCD_Out@y stored from wreg
 10890  00466A  6E0D               	movwf	LCD_Out@y^0,c
 10891  00466C                     
 10892                           ;LIBRERIA_LCD.c: 123:     LCD_XY(y,x);
 10893  00466C  C00A  F006         	movff	LCD_Out@x,LCD_XY@x
 10894  004670  500D               	movf	LCD_Out@y^0,w,c
 10895  004672  ECF4  F022         	call	_LCD_XY
 10896  004676                     
 10897                           ;LIBRERIA_LCD.c: 124:     LATDbits.LATD2=1;
 10898  004676  848C               	bsf	140,2,c	;volatile
 10899                           
 10900                           ;LIBRERIA_LCD.c: 125:     while(*text){
 10901  004678  EF52  F023         	goto	l4688
 10902  00467C                     l4684:
 10903                           
 10904                           ;LIBRERIA_LCD.c: 126:         LCD_Chr_Cp(*text);
 10905  00467C  C00B  FFF6         	movff	LCD_Out@text,tblptrl
 10906  004680  C00C  FFF7         	movff	LCD_Out@text+1,tblptrh
 10907  004684  6AF8               	clrf	tblptru,c
 10908  004686  0E07               	movlw	(high __ramtop+-1)
 10909  004688  64F7               	cpfsgt	tblptrh,c
 10910  00468A  D003               	bra	u5727
 10911  00468C  0008               	tblrd		*
 10912  00468E  50F5               	movf	tablat,w,c
 10913  004690  D005               	bra	u5720
 10914  004692                     u5727:
 10915  004692  CFF6 FFE1          	movff	tblptrl,fsr1l
 10916  004696  CFF7 FFE2          	movff	tblptrh,fsr1h
 10917  00469A  50E7               	movf	indf1,w,c
 10918  00469C                     u5720:
 10919  00469C  EC00  F026         	call	_LCD_Chr_Cp
 10920  0046A0                     
 10921                           ;LIBRERIA_LCD.c: 127:         text++;
 10922  0046A0  4A0B               	infsnz	LCD_Out@text^0,f,c
 10923  0046A2  2A0C               	incf	(LCD_Out@text+1)^0,f,c
 10924  0046A4                     l4688:
 10925                           
 10926                           ;LIBRERIA_LCD.c: 125:     while(*text){
 10927  0046A4  C00B  FFF6         	movff	LCD_Out@text,tblptrl
 10928  0046A8  C00C  FFF7         	movff	LCD_Out@text+1,tblptrh
 10929  0046AC  6AF8               	clrf	tblptru,c
 10930  0046AE  0E07               	movlw	(high __ramtop+-1)
 10931  0046B0  64F7               	cpfsgt	tblptrh,c
 10932  0046B2  D003               	bra	u5737
 10933  0046B4  0008               	tblrd		*
 10934  0046B6  50F5               	movf	tablat,w,c
 10935  0046B8  D005               	bra	u5730
 10936  0046BA                     u5737:
 10937  0046BA  CFF6 FFE1          	movff	tblptrl,fsr1l
 10938  0046BE  CFF7 FFE2          	movff	tblptrh,fsr1h
 10939  0046C2  50E7               	movf	indf1,w,c
 10940  0046C4                     u5730:
 10941  0046C4  0900               	iorlw	0
 10942  0046C6  A4D8               	btfss	status,2,c
 10943  0046C8  EF68  F023         	goto	u5741
 10944  0046CC  EF6A  F023         	goto	u5740
 10945  0046D0                     u5741:
 10946  0046D0  EF3E  F023         	goto	l4684
 10947  0046D4                     u5740:
 10948  0046D4  0012               	return		;funcret
 10949  0046D6                     __end_of_LCD_Out:
 10950                           	callstack 0
 10951                           
 10952 ;; *************** function _LCD_Chr_Cp *****************
 10953 ;; Defined at:
 10954 ;;		line 81 in file "LIBRERIA_LCD.c"
 10955 ;; Parameters:    Size  Location     Type
 10956 ;;  letra           1    wreg     unsigned char 
 10957 ;; Auto vars:     Size  Location     Type
 10958 ;;  letra           1    4[COMRAM] unsigned char 
 10959 ;; Return value:  Size  Location     Type
 10960 ;;                  1    wreg      void 
 10961 ;; Registers used:
 10962 ;;		wreg, status,2, status,0, cstack
 10963 ;; Tracked objects:
 10964 ;;		On entry : 0/0
 10965 ;;		On exit  : 0/0
 10966 ;;		Unchanged: 0/0
 10967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10968 ;;      Params:         0       0       0       0       0       0       0       0       0
 10969 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10970 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10971 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10972 ;;Total ram usage:        1 bytes
 10973 ;; Hardware stack levels used:    1
 10974 ;; Hardware stack levels required when called:    3
 10975 ;; This function calls:
 10976 ;;		_enviar_dato
 10977 ;; This function is called by:
 10978 ;;		_LCD_Out
 10979 ;;		_LCD_Out_Cp
 10980 ;; This function uses a non-reentrant model
 10981 ;;
 10982                           
 10983                           	psect	text40
 10984  004C00                     __ptext40:
 10985                           	callstack 0
 10986  004C00                     _LCD_Chr_Cp:
 10987                           	callstack 25
 10988                           
 10989                           ;incstack = 0
 10990                           ;LCD_Chr_Cp@letra stored from wreg
 10991  004C00  6E05               	movwf	LCD_Chr_Cp@letra^0,c
 10992  004C02                     
 10993                           ;LIBRERIA_LCD.c: 82:     LATDbits.LATD2=1;
 10994  004C02  848C               	bsf	140,2,c	;volatile
 10995  004C04                     
 10996                           ;LIBRERIA_LCD.c: 83:     enviar_dato(letra);
 10997  004C04  5005               	movf	LCD_Chr_Cp@letra^0,w,c
 10998  004C06  ECF3  F01C         	call	_enviar_dato
 10999  004C0A                     
 11000                           ;LIBRERIA_LCD.c: 84:     LATDbits.LATD2=0;
 11001  004C0A  948C               	bcf	140,2,c	;volatile
 11002  004C0C  0012               	return		;funcret
 11003  004C0E                     __end_of_LCD_Chr_Cp:
 11004                           	callstack 0
 11005                           
 11006 ;; *************** function _LCD_Chr *****************
 11007 ;; Defined at:
 11008 ;;		line 107 in file "LIBRERIA_LCD.c"
 11009 ;; Parameters:    Size  Location     Type
 11010 ;;  y               1    wreg     unsigned char 
 11011 ;;  x               1    9[COMRAM] unsigned char 
 11012 ;;  letra           1   10[COMRAM] unsigned char 
 11013 ;; Auto vars:     Size  Location     Type
 11014 ;;  y               1   11[COMRAM] unsigned char 
 11015 ;; Return value:  Size  Location     Type
 11016 ;;                  1    wreg      void 
 11017 ;; Registers used:
 11018 ;;		wreg, status,2, status,0, cstack
 11019 ;; Tracked objects:
 11020 ;;		On entry : 0/0
 11021 ;;		On exit  : 0/0
 11022 ;;		Unchanged: 0/0
 11023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11024 ;;      Params:         2       0       0       0       0       0       0       0       0
 11025 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11026 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11027 ;;      Totals:         3       0       0       0       0       0       0       0       0
 11028 ;;Total ram usage:        3 bytes
 11029 ;; Hardware stack levels used:    1
 11030 ;; Hardware stack levels required when called:    5
 11031 ;; This function calls:
 11032 ;;		_LCD_XY
 11033 ;;		_enviar_dato
 11034 ;; This function is called by:
 11035 ;;		_MenuP
 11036 ;; This function uses a non-reentrant model
 11037 ;;
 11038                           
 11039                           	psect	text41
 11040  004BA4                     __ptext41:
 11041                           	callstack 0
 11042  004BA4                     _LCD_Chr:
 11043                           	callstack 24
 11044                           
 11045                           ;incstack = 0
 11046                           ;LCD_Chr@y stored from wreg
 11047  004BA4  6E0C               	movwf	LCD_Chr@y^0,c
 11048  004BA6                     
 11049                           ;LIBRERIA_LCD.c: 108:     LCD_XY(y,x);
 11050  004BA6  C00A  F006         	movff	LCD_Chr@x,LCD_XY@x
 11051  004BAA  500C               	movf	LCD_Chr@y^0,w,c
 11052  004BAC  ECF4  F022         	call	_LCD_XY
 11053  004BB0                     
 11054                           ;LIBRERIA_LCD.c: 109:     LATDbits.LATD2=1;
 11055  004BB0  848C               	bsf	140,2,c	;volatile
 11056                           
 11057                           ;LIBRERIA_LCD.c: 110:     enviar_dato(letra);
 11058  004BB2  500B               	movf	LCD_Chr@letra^0,w,c
 11059  004BB4  ECF3  F01C         	call	_enviar_dato
 11060  004BB8                     
 11061                           ;LIBRERIA_LCD.c: 111:     LATDbits.LATD2=0;
 11062  004BB8  948C               	bcf	140,2,c	;volatile
 11063  004BBA  0012               	return		;funcret
 11064  004BBC                     __end_of_LCD_Chr:
 11065                           	callstack 0
 11066                           
 11067 ;; *************** function _LCD_XY *****************
 11068 ;; Defined at:
 11069 ;;		line 95 in file "LIBRERIA_LCD.c"
 11070 ;; Parameters:    Size  Location     Type
 11071 ;;  y               1    wreg     unsigned char 
 11072 ;;  x               1    5[COMRAM] unsigned char 
 11073 ;; Auto vars:     Size  Location     Type
 11074 ;;  y               1    8[COMRAM] unsigned char 
 11075 ;; Return value:  Size  Location     Type
 11076 ;;                  1    wreg      void 
 11077 ;; Registers used:
 11078 ;;		wreg, status,2, status,0, cstack
 11079 ;; Tracked objects:
 11080 ;;		On entry : 0/0
 11081 ;;		On exit  : 0/0
 11082 ;;		Unchanged: 0/0
 11083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11084 ;;      Params:         1       0       0       0       0       0       0       0       0
 11085 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11086 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11087 ;;      Totals:         4       0       0       0       0       0       0       0       0
 11088 ;;Total ram usage:        4 bytes
 11089 ;; Hardware stack levels used:    1
 11090 ;; Hardware stack levels required when called:    4
 11091 ;; This function calls:
 11092 ;;		_LCD_Cmd
 11093 ;; This function is called by:
 11094 ;;		_LCD_Chr
 11095 ;;		_LCD_Out
 11096 ;; This function uses a non-reentrant model
 11097 ;;
 11098                           
 11099                           	psect	text42
 11100  0045E8                     __ptext42:
 11101                           	callstack 0
 11102  0045E8                     _LCD_XY:
 11103                           	callstack 24
 11104                           
 11105                           ;incstack = 0
 11106                           ;LCD_XY@y stored from wreg
 11107  0045E8  6E09               	movwf	LCD_XY@y^0,c
 11108  0045EA                     
 11109                           ;LIBRERIA_LCD.c: 97:     switch(y){
 11110  0045EA  EF0F  F023         	goto	l4648
 11111  0045EE                     l4638:
 11112  0045EE  5006               	movf	LCD_XY@x^0,w,c
 11113  0045F0  0F7F               	addlw	127
 11114  0045F2  EC07  F026         	call	_LCD_Cmd
 11115  0045F6  EF2C  F023         	goto	l4650
 11116  0045FA                     l4640:
 11117  0045FA  5006               	movf	LCD_XY@x^0,w,c
 11118  0045FC  0FBF               	addlw	191
 11119  0045FE  EC07  F026         	call	_LCD_Cmd
 11120  004602  EF2C  F023         	goto	l4650
 11121  004606                     l4642:
 11122  004606  5006               	movf	LCD_XY@x^0,w,c
 11123  004608  0F93               	addlw	147
 11124  00460A  EC07  F026         	call	_LCD_Cmd
 11125  00460E  EF2C  F023         	goto	l4650
 11126  004612                     l4644:
 11127  004612  5006               	movf	LCD_XY@x^0,w,c
 11128  004614  0FD3               	addlw	211
 11129  004616  EC07  F026         	call	_LCD_Cmd
 11130  00461A  EF2C  F023         	goto	l4650
 11131  00461E                     l4648:
 11132  00461E  5009               	movf	LCD_XY@y^0,w,c
 11133  004620  6E07               	movwf	??_LCD_XY^0,c
 11134  004622  6A08               	clrf	(??_LCD_XY+1)^0,c
 11135                           
 11136                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11137                           ; Switch size 1, requested type "simple"
 11138                           ; Number of cases is 1, Range of values is 0 to 0
 11139                           ; switch strategies available:
 11140                           ; Name         Instructions Cycles
 11141                           ; simple_byte            4     3 (average)
 11142                           ;	Chosen strategy is simple_byte
 11143  004624  5008               	movf	(??_LCD_XY+1)^0,w,c
 11144  004626  0A00               	xorlw	0	; case 0
 11145  004628  B4D8               	btfsc	status,2,c
 11146  00462A  EF19  F023         	goto	l6786
 11147  00462E  EF2C  F023         	goto	l4650
 11148  004632                     l6786:
 11149                           
 11150                           ; Switch size 1, requested type "simple"
 11151                           ; Number of cases is 4, Range of values is 1 to 4
 11152                           ; switch strategies available:
 11153                           ; Name         Instructions Cycles
 11154                           ; simple_byte           13     7 (average)
 11155                           ;	Chosen strategy is simple_byte
 11156  004632  5007               	movf	??_LCD_XY^0,w,c
 11157  004634  0A01               	xorlw	1	; case 1
 11158  004636  B4D8               	btfsc	status,2,c
 11159  004638  EFF7  F022         	goto	l4638
 11160  00463C  0A03               	xorlw	3	; case 2
 11161  00463E  B4D8               	btfsc	status,2,c
 11162  004640  EFFD  F022         	goto	l4640
 11163  004644  0A01               	xorlw	1	; case 3
 11164  004646  B4D8               	btfsc	status,2,c
 11165  004648  EF03  F023         	goto	l4642
 11166  00464C  0A07               	xorlw	7	; case 4
 11167  00464E  B4D8               	btfsc	status,2,c
 11168  004650  EF09  F023         	goto	l4644
 11169  004654  EF2C  F023         	goto	l4650
 11170  004658                     l4650:
 11171                           
 11172                           ;LIBRERIA_LCD.c: 103:     _delay((unsigned long)((100)*(4000000L/4000.0)));
 11173  004658  0E82               	movlw	130
 11174  00465A  6E07               	movwf	??_LCD_XY^0,c
 11175  00465C  0EDE               	movlw	222
 11176  00465E                     u8947:
 11177  00465E  2EE8               	decfsz	wreg,f,c
 11178  004660  D7FE               	bra	u8947
 11179  004662  2E07               	decfsz	??_LCD_XY^0,f,c
 11180  004664  D7FC               	bra	u8947
 11181  004666                     
 11182                           ;LIBRERIA_LCD.c: 104:     LATDbits.LATD2=0;
 11183  004666  948C               	bcf	140,2,c	;volatile
 11184  004668  0012               	return		;funcret
 11185  00466A                     __end_of_LCD_XY:
 11186                           	callstack 0
 11187                           
 11188 ;; *************** function _LCD_Cmd *****************
 11189 ;; Defined at:
 11190 ;;		line 88 in file "LIBRERIA_LCD.c"
 11191 ;; Parameters:    Size  Location     Type
 11192 ;;  cmd             1    wreg     unsigned char 
 11193 ;; Auto vars:     Size  Location     Type
 11194 ;;  cmd             1    4[COMRAM] unsigned char 
 11195 ;; Return value:  Size  Location     Type
 11196 ;;                  1    wreg      void 
 11197 ;; Registers used:
 11198 ;;		wreg, status,2, status,0, cstack
 11199 ;; Tracked objects:
 11200 ;;		On entry : 0/0
 11201 ;;		On exit  : 0/0
 11202 ;;		Unchanged: 0/0
 11203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11204 ;;      Params:         0       0       0       0       0       0       0       0       0
 11205 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11206 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11207 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11208 ;;Total ram usage:        1 bytes
 11209 ;; Hardware stack levels used:    1
 11210 ;; Hardware stack levels required when called:    3
 11211 ;; This function calls:
 11212 ;;		_enviar_dato
 11213 ;; This function is called by:
 11214 ;;		_MenuP
 11215 ;;		_main
 11216 ;;		_LCD_XY
 11217 ;; This function uses a non-reentrant model
 11218 ;;
 11219                           
 11220                           	psect	text43
 11221  004C0E                     __ptext43:
 11222                           	callstack 0
 11223  004C0E                     _LCD_Cmd:
 11224                           	callstack 24
 11225                           
 11226                           ;incstack = 0
 11227                           ;LCD_Cmd@cmd stored from wreg
 11228  004C0E  6E05               	movwf	LCD_Cmd@cmd^0,c
 11229  004C10                     
 11230                           ;LIBRERIA_LCD.c: 89:     LATDbits.LATD2=0;
 11231  004C10  948C               	bcf	140,2,c	;volatile
 11232  004C12                     
 11233                           ;LIBRERIA_LCD.c: 90:     enviar_dato(cmd);
 11234  004C12  5005               	movf	LCD_Cmd@cmd^0,w,c
 11235  004C14  ECF3  F01C         	call	_enviar_dato
 11236  004C18                     
 11237                           ;LIBRERIA_LCD.c: 91:     LATDbits.LATD2=0;
 11238  004C18  948C               	bcf	140,2,c	;volatile
 11239  004C1A  0012               	return		;funcret
 11240  004C1C                     __end_of_LCD_Cmd:
 11241                           	callstack 0
 11242                           
 11243 ;; *************** function _ADC_Read *****************
 11244 ;; Defined at:
 11245 ;;		line 30 in file "./LIBRERIA_ADC.h"
 11246 ;; Parameters:    Size  Location     Type
 11247 ;;  miCanal         1    wreg     unsigned char 
 11248 ;; Auto vars:     Size  Location     Type
 11249 ;;  miCanal         1    7[COMRAM] unsigned char 
 11250 ;;  miConver        2    5[COMRAM] int 
 11251 ;; Return value:  Size  Location     Type
 11252 ;;                  2    1[COMRAM] int 
 11253 ;; Registers used:
 11254 ;;		wreg, status,2, status,0
 11255 ;; Tracked objects:
 11256 ;;		On entry : 0/0
 11257 ;;		On exit  : 0/0
 11258 ;;		Unchanged: 0/0
 11259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11260 ;;      Params:         2       0       0       0       0       0       0       0       0
 11261 ;;      Locals:         3       0       0       0       0       0       0       0       0
 11262 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11263 ;;      Totals:         7       0       0       0       0       0       0       0       0
 11264 ;;Total ram usage:        7 bytes
 11265 ;; Hardware stack levels used:    1
 11266 ;; Hardware stack levels required when called:    2
 11267 ;; This function calls:
 11268 ;;		Nothing
 11269 ;; This function is called by:
 11270 ;;		_MenuP
 11271 ;; This function uses a non-reentrant model
 11272 ;;
 11273                           
 11274                           	psect	text44
 11275  004996                     __ptext44:
 11276                           	callstack 0
 11277  004996                     _ADC_Read:
 11278                           	callstack 27
 11279                           
 11280                           ;incstack = 0
 11281                           ;ADC_Read@miCanal stored from wreg
 11282  004996  6E08               	movwf	ADC_Read@miCanal^0,c
 11283  004998                     
 11284                           ;./LIBRERIA_ADC.h: 31:     int miConver;;./LIBRERIA_ADC.h: 32:      ADCON0bits.CHS=miCan
      +                          al;
 11285  004998  C008  F004         	movff	ADC_Read@miCanal,??_ADC_Read
 11286  00499C  4604               	rlncf	??_ADC_Read^0,f,c
 11287  00499E  4604               	rlncf	??_ADC_Read^0,f,c
 11288  0049A0  50C2               	movf	194,w,c	;volatile
 11289  0049A2  1804               	xorwf	??_ADC_Read^0,w,c
 11290  0049A4  0BC3               	andlw	-61
 11291  0049A6  1804               	xorwf	??_ADC_Read^0,w,c
 11292  0049A8  6EC2               	movwf	194,c	;volatile
 11293  0049AA                     
 11294                           ;./LIBRERIA_ADC.h: 33:      ADCON0bits.ADON = 1;
 11295  0049AA  80C2               	bsf	194,0,c	;volatile
 11296  0049AC                     
 11297                           ;./LIBRERIA_ADC.h: 34:      ADCON0bits.GO_nDONE = 1;
 11298  0049AC  82C2               	bsf	194,1,c	;volatile
 11299  0049AE                     l48:
 11300  0049AE  B2C2               	btfsc	194,1,c	;volatile
 11301  0049B0  EFDC  F024         	goto	u5711
 11302  0049B4  EFDE  F024         	goto	u5710
 11303  0049B8                     u5711:
 11304  0049B8  EFD7  F024         	goto	l48
 11305  0049BC                     u5710:
 11306  0049BC                     
 11307                           ;./LIBRERIA_ADC.h: 36:      miConver = ADRESH<<8 | ADRESL;
 11308  0049BC  50C3               	movf	195,w,c	;volatile
 11309  0049BE  CFC4 F004          	movff	4036,??_ADC_Read	;volatile
 11310  0049C2  6A05               	clrf	(??_ADC_Read+1)^0,c
 11311  0049C4  C004  F005         	movff	??_ADC_Read,??_ADC_Read+1
 11312  0049C8  6A04               	clrf	??_ADC_Read^0,c
 11313  0049CA  1004               	iorwf	??_ADC_Read^0,w,c
 11314  0049CC  6E06               	movwf	ADC_Read@miConver^0,c
 11315  0049CE  5005               	movf	(??_ADC_Read+1)^0,w,c
 11316  0049D0  6E07               	movwf	(ADC_Read@miConver+1)^0,c
 11317  0049D2                     
 11318                           ;./LIBRERIA_ADC.h: 37:      return miConver;
 11319  0049D2  C006  F002         	movff	ADC_Read@miConver,?_ADC_Read
 11320  0049D6  C007  F003         	movff	ADC_Read@miConver+1,?_ADC_Read+1
 11321  0049DA  0012               	return		;funcret
 11322  0049DC                     __end_of_ADC_Read:
 11323                           	callstack 0
 11324                           
 11325 ;; *************** function _LCD_Init *****************
 11326 ;; Defined at:
 11327 ;;		line 5 in file "LIBRERIA_LCD.c"
 11328 ;; Parameters:    Size  Location     Type
 11329 ;;		None
 11330 ;; Auto vars:     Size  Location     Type
 11331 ;;		None
 11332 ;; Return value:  Size  Location     Type
 11333 ;;                  1    wreg      void 
 11334 ;; Registers used:
 11335 ;;		wreg, status,2, status,0, cstack
 11336 ;; Tracked objects:
 11337 ;;		On entry : 0/0
 11338 ;;		On exit  : 0/0
 11339 ;;		Unchanged: 0/0
 11340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11341 ;;      Params:         0       0       0       0       0       0       0       0       0
 11342 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11343 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11344 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11345 ;;Total ram usage:        1 bytes
 11346 ;; Hardware stack levels used:    1
 11347 ;; Hardware stack levels required when called:    3
 11348 ;; This function calls:
 11349 ;;		_enviar_dato
 11350 ;; This function is called by:
 11351 ;;		_main
 11352 ;; This function uses a non-reentrant model
 11353 ;;
 11354                           
 11355                           	psect	text45
 11356  0043EA                     __ptext45:
 11357                           	callstack 0
 11358  0043EA                     _LCD_Init:
 11359                           	callstack 27
 11360  0043EA                     
 11361                           ;LIBRERIA_LCD.c: 7:     TRISDbits.RD2=0;
 11362  0043EA  9495               	bcf	149,2,c	;volatile
 11363                           
 11364                           ;LIBRERIA_LCD.c: 8:     TRISDbits.RD3=0;
 11365  0043EC  9695               	bcf	149,3,c	;volatile
 11366                           
 11367                           ;LIBRERIA_LCD.c: 9:     TRISDbits.RD4=0;
 11368  0043EE  9895               	bcf	149,4,c	;volatile
 11369                           
 11370                           ;LIBRERIA_LCD.c: 10:     TRISDbits.RD5=0;
 11371  0043F0  9A95               	bcf	149,5,c	;volatile
 11372                           
 11373                           ;LIBRERIA_LCD.c: 11:     TRISDbits.RD6=0;
 11374  0043F2  9C95               	bcf	149,6,c	;volatile
 11375                           
 11376                           ;LIBRERIA_LCD.c: 12:     TRISDbits.RD7=0;
 11377  0043F4  9E95               	bcf	149,7,c	;volatile
 11378                           
 11379                           ;LIBRERIA_LCD.c: 13:     LATDbits.LATD2=0;
 11380  0043F6  948C               	bcf	140,2,c	;volatile
 11381  0043F8                     
 11382                           ;LIBRERIA_LCD.c: 14:     _delay((unsigned long)((15)*(4000000L/4000.0)));
 11383  0043F8  0E14               	movlw	20
 11384  0043FA  6E05               	movwf	??_LCD_Init^0,c
 11385  0043FC  0E7A               	movlw	122
 11386  0043FE                     u8957:
 11387  0043FE  2EE8               	decfsz	wreg,f,c
 11388  004400  D7FE               	bra	u8957
 11389  004402  2E05               	decfsz	??_LCD_Init^0,f,c
 11390  004404  D7FC               	bra	u8957
 11391  004406                     
 11392                           ;LIBRERIA_LCD.c: 16:     enviar_dato(0x30);
 11393  004406  0E30               	movlw	48
 11394  004408  ECF3  F01C         	call	_enviar_dato
 11395  00440C                     
 11396                           ;LIBRERIA_LCD.c: 17:     _delay((unsigned long)((5)*(4000000L/4000.0)));
 11397  00440C  0E07               	movlw	7
 11398  00440E  6E05               	movwf	??_LCD_Init^0,c
 11399  004410  0E7D               	movlw	125
 11400  004412                     u8967:
 11401  004412  2EE8               	decfsz	wreg,f,c
 11402  004414  D7FE               	bra	u8967
 11403  004416  2E05               	decfsz	??_LCD_Init^0,f,c
 11404  004418  D7FC               	bra	u8967
 11405  00441A  F000               	nop	
 11406                           
 11407                           ;LIBRERIA_LCD.c: 18:     enviar_dato(0x30);
 11408  00441C  0E30               	movlw	48
 11409  00441E  ECF3  F01C         	call	_enviar_dato
 11410  004422                     
 11411                           ;LIBRERIA_LCD.c: 19:     _delay((unsigned long)((100)*(4000000L/4000000.0)));
 11412  004422  0E21               	movlw	33
 11413  004424                     u8977:
 11414  004424  2EE8               	decfsz	wreg,f,c
 11415  004426  D7FE               	bra	u8977
 11416  004428  F000               	nop	
 11417  00442A                     
 11418                           ;LIBRERIA_LCD.c: 20:     enviar_dato(0x32);
 11419  00442A  0E32               	movlw	50
 11420  00442C  ECF3  F01C         	call	_enviar_dato
 11421                           
 11422                           ;LIBRERIA_LCD.c: 21:     _delay((unsigned long)((100)*(4000000L/4000000.0)));
 11423  004430  0E21               	movlw	33
 11424  004432                     u8987:
 11425  004432  2EE8               	decfsz	wreg,f,c
 11426  004434  D7FE               	bra	u8987
 11427  004436  F000               	nop	
 11428                           
 11429                           ;LIBRERIA_LCD.c: 24:     _delay((unsigned long)((100)*(4000000L/4000000.0)));
 11430  004438  0E21               	movlw	33
 11431  00443A                     u8997:
 11432  00443A  2EE8               	decfsz	wreg,f,c
 11433  00443C  D7FE               	bra	u8997
 11434  00443E  F000               	nop	
 11435  004440                     
 11436                           ;LIBRERIA_LCD.c: 25:     enviar_dato(0x2B);
 11437  004440  0E2B               	movlw	43
 11438  004442  ECF3  F01C         	call	_enviar_dato
 11439  004446                     
 11440                           ;LIBRERIA_LCD.c: 26:     _delay((unsigned long)((100)*(4000000L/4000000.0)));
 11441  004446  0E21               	movlw	33
 11442  004448                     u9007:
 11443  004448  2EE8               	decfsz	wreg,f,c
 11444  00444A  D7FE               	bra	u9007
 11445  00444C  F000               	nop	
 11446                           
 11447                           ;LIBRERIA_LCD.c: 27:     enviar_dato(0x08);
 11448  00444E  0E08               	movlw	8
 11449  004450  ECF3  F01C         	call	_enviar_dato
 11450  004454                     
 11451                           ;LIBRERIA_LCD.c: 28:     _delay((unsigned long)((100)*(4000000L/4000000.0)));
 11452  004454  0E21               	movlw	33
 11453  004456                     u9017:
 11454  004456  2EE8               	decfsz	wreg,f,c
 11455  004458  D7FE               	bra	u9017
 11456  00445A  F000               	nop	
 11457  00445C                     
 11458                           ;LIBRERIA_LCD.c: 29:     enviar_dato(0x0F);
 11459  00445C  0E0F               	movlw	15
 11460  00445E  ECF3  F01C         	call	_enviar_dato
 11461                           
 11462                           ;LIBRERIA_LCD.c: 30:     _delay((unsigned long)((100)*(4000000L/4000000.0)));
 11463  004462  0E21               	movlw	33
 11464  004464                     u9027:
 11465  004464  2EE8               	decfsz	wreg,f,c
 11466  004466  D7FE               	bra	u9027
 11467  004468  F000               	nop	
 11468  00446A                     
 11469                           ;LIBRERIA_LCD.c: 31:     enviar_dato(0x01);
 11470  00446A  0E01               	movlw	1
 11471  00446C  ECF3  F01C         	call	_enviar_dato
 11472  004470                     
 11473                           ;LIBRERIA_LCD.c: 32:     _delay((unsigned long)((100)*(4000000L/4000000.0)));
 11474  004470  0E21               	movlw	33
 11475  004472                     u9037:
 11476  004472  2EE8               	decfsz	wreg,f,c
 11477  004474  D7FE               	bra	u9037
 11478  004476  F000               	nop	
 11479                           
 11480                           ;LIBRERIA_LCD.c: 33:     enviar_dato(0x06);
 11481  004478  0E06               	movlw	6
 11482  00447A  ECF3  F01C         	call	_enviar_dato
 11483  00447E                     
 11484                           ;LIBRERIA_LCD.c: 34:     _delay((unsigned long)((100)*(4000000L/4000000.0)));
 11485  00447E  0E21               	movlw	33
 11486  004480                     u9047:
 11487  004480  2EE8               	decfsz	wreg,f,c
 11488  004482  D7FE               	bra	u9047
 11489  004484  F000               	nop	
 11490  004486                     
 11491                           ;LIBRERIA_LCD.c: 36:     enviar_dato(0x0F);
 11492  004486  0E0F               	movlw	15
 11493  004488  ECF3  F01C         	call	_enviar_dato
 11494                           
 11495                           ;LIBRERIA_LCD.c: 37:     _delay((unsigned long)((100)*(4000000L/4000000.0)));
 11496  00448C  0E21               	movlw	33
 11497  00448E                     u9057:
 11498  00448E  2EE8               	decfsz	wreg,f,c
 11499  004490  D7FE               	bra	u9057
 11500  004492  F000               	nop	
 11501  004494  0012               	return		;funcret
 11502  004496                     __end_of_LCD_Init:
 11503                           	callstack 0
 11504                           
 11505 ;; *************** function _enviar_dato *****************
 11506 ;; Defined at:
 11507 ;;		line 42 in file "LIBRERIA_LCD.c"
 11508 ;; Parameters:    Size  Location     Type
 11509 ;;  cmd             1    wreg     unsigned char 
 11510 ;; Auto vars:     Size  Location     Type
 11511 ;;  cmd             1    3[COMRAM] unsigned char 
 11512 ;; Return value:  Size  Location     Type
 11513 ;;                  1    wreg      void 
 11514 ;; Registers used:
 11515 ;;		wreg, status,2, status,0
 11516 ;; Tracked objects:
 11517 ;;		On entry : 0/0
 11518 ;;		On exit  : 0/0
 11519 ;;		Unchanged: 0/0
 11520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11521 ;;      Params:         0       0       0       0       0       0       0       0       0
 11522 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11523 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11524 ;;      Totals:         3       0       0       0       0       0       0       0       0
 11525 ;;Total ram usage:        3 bytes
 11526 ;; Hardware stack levels used:    1
 11527 ;; Hardware stack levels required when called:    2
 11528 ;; This function calls:
 11529 ;;		Nothing
 11530 ;; This function is called by:
 11531 ;;		_LCD_Init
 11532 ;;		_LCD_Chr_Cp
 11533 ;;		_LCD_Cmd
 11534 ;;		_LCD_Chr
 11535 ;; This function uses a non-reentrant model
 11536 ;;
 11537                           
 11538                           	psect	text46
 11539  0039E6                     __ptext46:
 11540                           	callstack 0
 11541  0039E6                     _enviar_dato:
 11542                           	callstack 24
 11543                           
 11544                           ;incstack = 0
 11545                           ;enviar_dato@cmd stored from wreg
 11546  0039E6  6E04               	movwf	enviar_dato@cmd^0,c
 11547  0039E8                     
 11548                           ;LIBRERIA_LCD.c: 43:     TRISDbits.RD4=0;
 11549  0039E8  9895               	bcf	149,4,c	;volatile
 11550                           
 11551                           ;LIBRERIA_LCD.c: 44:     TRISDbits.RD5=0;
 11552  0039EA  9A95               	bcf	149,5,c	;volatile
 11553                           
 11554                           ;LIBRERIA_LCD.c: 45:     TRISDbits.RD6=0;
 11555  0039EC  9C95               	bcf	149,6,c	;volatile
 11556                           
 11557                           ;LIBRERIA_LCD.c: 46:     TRISDbits.RD7=0;
 11558  0039EE  9E95               	bcf	149,7,c	;volatile
 11559                           
 11560                           ;LIBRERIA_LCD.c: 47:     LATDbits.LATD4=0;
 11561  0039F0  988C               	bcf	140,4,c	;volatile
 11562                           
 11563                           ;LIBRERIA_LCD.c: 48:     LATDbits.LATD5=0;
 11564  0039F2  9A8C               	bcf	140,5,c	;volatile
 11565                           
 11566                           ;LIBRERIA_LCD.c: 49:     LATDbits.LATD6=0;
 11567  0039F4  9C8C               	bcf	140,6,c	;volatile
 11568                           
 11569                           ;LIBRERIA_LCD.c: 50:     LATDbits.LATD7=0;
 11570  0039F6  9E8C               	bcf	140,7,c	;volatile
 11571                           
 11572                           ;LIBRERIA_LCD.c: 52:     LATDbits.LATD3=0;
 11573  0039F8  968C               	bcf	140,3,c	;volatile
 11574  0039FA                     
 11575                           ;LIBRERIA_LCD.c: 53:     _delay((unsigned long)((100)*(4000000L/4000000.0)));
 11576  0039FA  0E21               	movlw	33
 11577  0039FC                     u9067:
 11578  0039FC  2EE8               	decfsz	wreg,f,c
 11579  0039FE  D7FE               	bra	u9067
 11580  003A00  F000               	nop	
 11581  003A02                     
 11582                           ;LIBRERIA_LCD.c: 55:     LATDbits.LATD4=(cmd>>4)&0x01;
 11583  003A02  C004  F002         	movff	enviar_dato@cmd,??_enviar_dato
 11584  003A06  3A02               	swapf	??_enviar_dato^0,f,c
 11585  003A08  0E0F               	movlw	15
 11586  003A0A  1602               	andwf	??_enviar_dato^0,f,c
 11587  003A0C  0E01               	movlw	1
 11588  003A0E  1602               	andwf	??_enviar_dato^0,f,c
 11589  003A10  3A02               	swapf	??_enviar_dato^0,f,c
 11590  003A12  508C               	movf	140,w,c	;volatile
 11591  003A14  1802               	xorwf	??_enviar_dato^0,w,c
 11592  003A16  0BEF               	andlw	-17
 11593  003A18  1802               	xorwf	??_enviar_dato^0,w,c
 11594  003A1A  6E8C               	movwf	140,c	;volatile
 11595  003A1C                     
 11596                           ;LIBRERIA_LCD.c: 56:     LATDbits.LATD5=(cmd>>5)&0x01;
 11597  003A1C  C004  F002         	movff	enviar_dato@cmd,??_enviar_dato
 11598  003A20  0E05               	movlw	5
 11599  003A22  6E03               	movwf	(??_enviar_dato+1)^0,c
 11600  003A24                     u4675:
 11601  003A24  90D8               	bcf	status,0,c
 11602  003A26  3202               	rrcf	??_enviar_dato^0,f,c
 11603  003A28  2E03               	decfsz	(??_enviar_dato+1)^0,f,c
 11604  003A2A  EF12  F01D         	goto	u4675
 11605  003A2E  0E01               	movlw	1
 11606  003A30  1602               	andwf	??_enviar_dato^0,f,c
 11607  003A32  3A02               	swapf	??_enviar_dato^0,f,c
 11608  003A34  4602               	rlncf	??_enviar_dato^0,f,c
 11609  003A36  508C               	movf	140,w,c	;volatile
 11610  003A38  1802               	xorwf	??_enviar_dato^0,w,c
 11611  003A3A  0BDF               	andlw	-33
 11612  003A3C  1802               	xorwf	??_enviar_dato^0,w,c
 11613  003A3E  6E8C               	movwf	140,c	;volatile
 11614  003A40                     
 11615                           ;LIBRERIA_LCD.c: 57:     LATDbits.LATD6=(cmd>>6)&0x01;
 11616  003A40  C004  F002         	movff	enviar_dato@cmd,??_enviar_dato
 11617  003A44  0E06               	movlw	6
 11618  003A46  6E03               	movwf	(??_enviar_dato+1)^0,c
 11619  003A48                     u4685:
 11620  003A48  90D8               	bcf	status,0,c
 11621  003A4A  3202               	rrcf	??_enviar_dato^0,f,c
 11622  003A4C  2E03               	decfsz	(??_enviar_dato+1)^0,f,c
 11623  003A4E  EF24  F01D         	goto	u4685
 11624  003A52  0E01               	movlw	1
 11625  003A54  1602               	andwf	??_enviar_dato^0,f,c
 11626  003A56  3A02               	swapf	??_enviar_dato^0,f,c
 11627  003A58  4602               	rlncf	??_enviar_dato^0,f,c
 11628  003A5A  4602               	rlncf	??_enviar_dato^0,f,c
 11629  003A5C  508C               	movf	140,w,c	;volatile
 11630  003A5E  1802               	xorwf	??_enviar_dato^0,w,c
 11631  003A60  0BBF               	andlw	-65
 11632  003A62  1802               	xorwf	??_enviar_dato^0,w,c
 11633  003A64  6E8C               	movwf	140,c	;volatile
 11634  003A66                     
 11635                           ;LIBRERIA_LCD.c: 58:     LATDbits.LATD7=(cmd>>7)&0x01;
 11636  003A66  6A02               	clrf	??_enviar_dato^0,c
 11637  003A68  AE04               	btfss	enviar_dato@cmd^0,7,c
 11638  003A6A  D001               	bra	u4695
 11639  003A6C  2A02               	incf	??_enviar_dato^0,f,c
 11640  003A6E                     u4695:
 11641  003A6E  0E01               	movlw	1
 11642  003A70  1602               	andwf	??_enviar_dato^0,f,c
 11643  003A72  3202               	rrcf	??_enviar_dato^0,f,c
 11644  003A74  3202               	rrcf	??_enviar_dato^0,f,c
 11645  003A76  508C               	movf	140,w,c	;volatile
 11646  003A78  1802               	xorwf	??_enviar_dato^0,w,c
 11647  003A7A  0B7F               	andlw	-129
 11648  003A7C  1802               	xorwf	??_enviar_dato^0,w,c
 11649  003A7E  6E8C               	movwf	140,c	;volatile
 11650  003A80                     
 11651                           ;LIBRERIA_LCD.c: 60:     LATDbits.LATD3=1;
 11652  003A80  868C               	bsf	140,3,c	;volatile
 11653  003A82                     
 11654                           ;LIBRERIA_LCD.c: 61:     _delay((unsigned long)((100)*(4000000L/4000000.0)));
 11655  003A82  0E21               	movlw	33
 11656  003A84                     u9077:
 11657  003A84  2EE8               	decfsz	wreg,f,c
 11658  003A86  D7FE               	bra	u9077
 11659  003A88  F000               	nop	
 11660  003A8A                     
 11661                           ;LIBRERIA_LCD.c: 62:     LATDbits.LATD3=0;
 11662  003A8A  968C               	bcf	140,3,c	;volatile
 11663  003A8C                     
 11664                           ;LIBRERIA_LCD.c: 64:     LATDbits.LATD4= cmd&0x01;
 11665  003A8C  C004  F002         	movff	enviar_dato@cmd,??_enviar_dato
 11666  003A90  0E01               	movlw	1
 11667  003A92  1602               	andwf	??_enviar_dato^0,f,c
 11668  003A94  3A02               	swapf	??_enviar_dato^0,f,c
 11669  003A96  508C               	movf	140,w,c	;volatile
 11670  003A98  1802               	xorwf	??_enviar_dato^0,w,c
 11671  003A9A  0BEF               	andlw	-17
 11672  003A9C  1802               	xorwf	??_enviar_dato^0,w,c
 11673  003A9E  6E8C               	movwf	140,c	;volatile
 11674  003AA0                     
 11675                           ;LIBRERIA_LCD.c: 65:     LATDbits.LATD5=(cmd&0x0F)>>1;
 11676  003AA0  C004  F002         	movff	enviar_dato@cmd,??_enviar_dato
 11677  003AA4  90D8               	bcf	status,0,c
 11678  003AA6  3202               	rrcf	??_enviar_dato^0,f,c
 11679  003AA8  0E07               	movlw	7
 11680  003AAA  1602               	andwf	??_enviar_dato^0,f,c
 11681  003AAC  3A02               	swapf	??_enviar_dato^0,f,c
 11682  003AAE  4602               	rlncf	??_enviar_dato^0,f,c
 11683  003AB0  508C               	movf	140,w,c	;volatile
 11684  003AB2  1802               	xorwf	??_enviar_dato^0,w,c
 11685  003AB4  0BDF               	andlw	-33
 11686  003AB6  1802               	xorwf	??_enviar_dato^0,w,c
 11687  003AB8  6E8C               	movwf	140,c	;volatile
 11688  003ABA                     
 11689                           ;LIBRERIA_LCD.c: 66:     LATDbits.LATD6=(cmd&0x0F)>>2;
 11690  003ABA  C004  F002         	movff	enviar_dato@cmd,??_enviar_dato
 11691  003ABE  90D8               	bcf	status,0,c
 11692  003AC0  3202               	rrcf	??_enviar_dato^0,f,c
 11693  003AC2  90D8               	bcf	status,0,c
 11694  003AC4  3202               	rrcf	??_enviar_dato^0,f,c
 11695  003AC6  0E03               	movlw	3
 11696  003AC8  1602               	andwf	??_enviar_dato^0,f,c
 11697  003ACA  3A02               	swapf	??_enviar_dato^0,f,c
 11698  003ACC  4602               	rlncf	??_enviar_dato^0,f,c
 11699  003ACE  4602               	rlncf	??_enviar_dato^0,f,c
 11700  003AD0  508C               	movf	140,w,c	;volatile
 11701  003AD2  1802               	xorwf	??_enviar_dato^0,w,c
 11702  003AD4  0BBF               	andlw	-65
 11703  003AD6  1802               	xorwf	??_enviar_dato^0,w,c
 11704  003AD8  6E8C               	movwf	140,c	;volatile
 11705  003ADA                     
 11706                           ;LIBRERIA_LCD.c: 67:     LATDbits.LATD7=(cmd&0x0F)>>3;
 11707  003ADA  C004  F002         	movff	enviar_dato@cmd,??_enviar_dato
 11708  003ADE  90D8               	bcf	status,0,c
 11709  003AE0  3202               	rrcf	??_enviar_dato^0,f,c
 11710  003AE2  90D8               	bcf	status,0,c
 11711  003AE4  3202               	rrcf	??_enviar_dato^0,f,c
 11712  003AE6  90D8               	bcf	status,0,c
 11713  003AE8  3202               	rrcf	??_enviar_dato^0,f,c
 11714  003AEA  0E01               	movlw	1
 11715  003AEC  1602               	andwf	??_enviar_dato^0,f,c
 11716  003AEE  3202               	rrcf	??_enviar_dato^0,f,c
 11717  003AF0  3202               	rrcf	??_enviar_dato^0,f,c
 11718  003AF2  508C               	movf	140,w,c	;volatile
 11719  003AF4  1802               	xorwf	??_enviar_dato^0,w,c
 11720  003AF6  0B7F               	andlw	-129
 11721  003AF8  1802               	xorwf	??_enviar_dato^0,w,c
 11722  003AFA  6E8C               	movwf	140,c	;volatile
 11723  003AFC                     
 11724                           ;LIBRERIA_LCD.c: 69:     LATDbits.LATD3=1;
 11725  003AFC  868C               	bsf	140,3,c	;volatile
 11726  003AFE                     
 11727                           ;LIBRERIA_LCD.c: 70:     _delay((unsigned long)((100)*(4000000L/4000000.0)));
 11728  003AFE  0E21               	movlw	33
 11729  003B00                     u9087:
 11730  003B00  2EE8               	decfsz	wreg,f,c
 11731  003B02  D7FE               	bra	u9087
 11732  003B04  F000               	nop	
 11733  003B06                     
 11734                           ;LIBRERIA_LCD.c: 71:     LATDbits.LATD3=0;
 11735  003B06  968C               	bcf	140,3,c	;volatile
 11736  003B08                     
 11737                           ;LIBRERIA_LCD.c: 73:     TRISDbits.RD4=1;
 11738  003B08  8895               	bsf	149,4,c	;volatile
 11739  003B0A                     
 11740                           ;LIBRERIA_LCD.c: 74:     TRISDbits.RD5=1;
 11741  003B0A  8A95               	bsf	149,5,c	;volatile
 11742  003B0C                     
 11743                           ;LIBRERIA_LCD.c: 75:     TRISDbits.RD6=1;
 11744  003B0C  8C95               	bsf	149,6,c	;volatile
 11745  003B0E                     
 11746                           ;LIBRERIA_LCD.c: 76:     TRISDbits.RD7=1;
 11747  003B0E  8E95               	bsf	149,7,c	;volatile
 11748  003B10  0012               	return		;funcret
 11749  003B12                     __end_of_enviar_dato:
 11750                           	callstack 0
 11751                           
 11752 ;; *************** function _ADC_Init *****************
 11753 ;; Defined at:
 11754 ;;		line 24 in file "./LIBRERIA_ADC.h"
 11755 ;; Parameters:    Size  Location     Type
 11756 ;;  kTad            2    1[COMRAM] int 
 11757 ;;  kTosc           2    3[COMRAM] int 
 11758 ;; Auto vars:     Size  Location     Type
 11759 ;;		None
 11760 ;; Return value:  Size  Location     Type
 11761 ;;                  1    wreg      void 
 11762 ;; Registers used:
 11763 ;;		wreg, status,2, status,0
 11764 ;; Tracked objects:
 11765 ;;		On entry : 0/0
 11766 ;;		On exit  : 0/0
 11767 ;;		Unchanged: 0/0
 11768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11769 ;;      Params:         4       0       0       0       0       0       0       0       0
 11770 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11771 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11772 ;;      Totals:         5       0       0       0       0       0       0       0       0
 11773 ;;Total ram usage:        5 bytes
 11774 ;; Hardware stack levels used:    1
 11775 ;; Hardware stack levels required when called:    2
 11776 ;; This function calls:
 11777 ;;		Nothing
 11778 ;; This function is called by:
 11779 ;;		_main
 11780 ;; This function uses a non-reentrant model
 11781 ;;
 11782                           
 11783                           	psect	text47
 11784  004B64                     __ptext47:
 11785                           	callstack 0
 11786  004B64                     _ADC_Init:
 11787                           	callstack 28
 11788  004B64                     
 11789                           ;./LIBRERIA_ADC.h: 25:     ADCON2bits.ACQT =kTad;
 11790  004B64  C002  F006         	movff	ADC_Init@kTad,??_ADC_Init
 11791  004B68  4606               	rlncf	??_ADC_Init^0,f,c
 11792  004B6A  4606               	rlncf	??_ADC_Init^0,f,c
 11793  004B6C  4606               	rlncf	??_ADC_Init^0,f,c
 11794  004B6E  50C0               	movf	192,w,c	;volatile
 11795  004B70  1806               	xorwf	??_ADC_Init^0,w,c
 11796  004B72  0BC7               	andlw	-57
 11797  004B74  1806               	xorwf	??_ADC_Init^0,w,c
 11798  004B76  6EC0               	movwf	192,c	;volatile
 11799                           
 11800                           ;./LIBRERIA_ADC.h: 26:     ADCON2bits.ADCS =kTosc;
 11801  004B78  50C0               	movf	192,w,c	;volatile
 11802  004B7A  1804               	xorwf	ADC_Init@kTosc^0,w,c
 11803  004B7C  0BF8               	andlw	-8
 11804  004B7E  1804               	xorwf	ADC_Init@kTosc^0,w,c
 11805  004B80  6EC0               	movwf	192,c	;volatile
 11806  004B82                     
 11807                           ;./LIBRERIA_ADC.h: 27:     ADCON2bits.ADFM = 1;
 11808  004B82  8EC0               	bsf	192,7,c	;volatile
 11809  004B84  0012               	return		;funcret
 11810  004B86                     __end_of_ADC_Init:
 11811                           	callstack 0
 11812                           
 11813 ;; *************** function _nombre *****************
 11814 ;; Defined at:
 11815 ;;		line 135 in file "main.c"
 11816 ;; Parameters:    Size  Location     Type
 11817 ;;		None
 11818 ;; Auto vars:     Size  Location     Type
 11819 ;;		None
 11820 ;; Return value:  Size  Location     Type
 11821 ;;                  1    wreg      void 
 11822 ;; Registers used:
 11823 ;;		wreg, status,2, status,0, cstack
 11824 ;; Tracked objects:
 11825 ;;		On entry : 0/0
 11826 ;;		On exit  : 0/0
 11827 ;;		Unchanged: 0/0
 11828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11829 ;;      Params:         0       0       0       0       0       0       0       0       0
 11830 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11831 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11832 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11833 ;;Total ram usage:        0 bytes
 11834 ;; Hardware stack levels used:    1
 11835 ;; Hardware stack levels required when called:    1
 11836 ;; This function calls:
 11837 ;;		_UART_Read
 11838 ;;		i2_UART_Wrrite_Chr
 11839 ;; This function is called by:
 11840 ;;		Interrupt level 2
 11841 ;; This function uses a non-reentrant model
 11842 ;;
 11843                           
 11844                           	psect	intcode
 11845  000008                     __pintcode:
 11846                           	callstack 0
 11847  000008                     _nombre:
 11848                           	callstack 20
 11849                           
 11850                           ;incstack = 0
 11851  000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 11852  00000A  ED9B  F01F         	call	int_func,f	;refresh shadow registers
 11853                           
 11854                           	psect	intcode_body
 11855  003F36                     __pintcode_body:
 11856                           	callstack 20
 11857  003F36                     int_func:
 11858                           	callstack 20
 11859  003F36  0006               	pop		; remove dummy address from shadow register refresh
 11860  003F38                     
 11861                           ;main.c: 136:     if(PIR1bits.RCIF==1){
 11862  003F38  AA9E               	btfss	158,5,c	;volatile
 11863  003F3A  EFA1  F01F         	goto	i2u601_41
 11864  003F3E  EFA3  F01F         	goto	i2u601_40
 11865  003F42                     i2u601_41:
 11866  003F42  EF06  F020         	goto	i2l112
 11867  003F46                     i2u601_40:
 11868  003F46                     
 11869                           ;main.c: 137:         t=UART_Read();
 11870  003F46  ECDE  F025         	call	_UART_Read	;wreg free
 11871  003F4A  6E5C               	movwf	_t^0,c
 11872  003F4C                     
 11873                           ;main.c: 138:         PIR1bits.RCIF=0;
 11874  003F4C  9A9E               	bcf	158,5,c	;volatile
 11875  003F4E                     
 11876                           ;main.c: 141:         if(t=='1'||t=='2'||t=='3'||t=='4'||t=='5'||t=='6'){
 11877  003F4E  0E31               	movlw	49
 11878  003F50  185C               	xorwf	_t^0,w,c
 11879  003F52  B4D8               	btfsc	status,2,c
 11880  003F54  EFAE  F01F         	goto	i2u602_41
 11881  003F58  EFB0  F01F         	goto	i2u602_40
 11882  003F5C                     i2u602_41:
 11883  003F5C  EFDD  F01F         	goto	i2l4980
 11884  003F60                     i2u602_40:
 11885  003F60  0E32               	movlw	50
 11886  003F62  185C               	xorwf	_t^0,w,c
 11887  003F64  B4D8               	btfsc	status,2,c
 11888  003F66  EFB7  F01F         	goto	i2u603_41
 11889  003F6A  EFB9  F01F         	goto	i2u603_40
 11890  003F6E                     i2u603_41:
 11891  003F6E  EFDD  F01F         	goto	i2l4980
 11892  003F72                     i2u603_40:
 11893  003F72  0E33               	movlw	51
 11894  003F74  185C               	xorwf	_t^0,w,c
 11895  003F76  B4D8               	btfsc	status,2,c
 11896  003F78  EFC0  F01F         	goto	i2u604_41
 11897  003F7C  EFC2  F01F         	goto	i2u604_40
 11898  003F80                     i2u604_41:
 11899  003F80  EFDD  F01F         	goto	i2l4980
 11900  003F84                     i2u604_40:
 11901  003F84  0E34               	movlw	52
 11902  003F86  185C               	xorwf	_t^0,w,c
 11903  003F88  B4D8               	btfsc	status,2,c
 11904  003F8A  EFC9  F01F         	goto	i2u605_41
 11905  003F8E  EFCB  F01F         	goto	i2u605_40
 11906  003F92                     i2u605_41:
 11907  003F92  EFDD  F01F         	goto	i2l4980
 11908  003F96                     i2u605_40:
 11909  003F96  0E35               	movlw	53
 11910  003F98  185C               	xorwf	_t^0,w,c
 11911  003F9A  B4D8               	btfsc	status,2,c
 11912  003F9C  EFD2  F01F         	goto	i2u606_41
 11913  003FA0  EFD4  F01F         	goto	i2u606_40
 11914  003FA4                     i2u606_41:
 11915  003FA4  EFDD  F01F         	goto	i2l4980
 11916  003FA8                     i2u606_40:
 11917  003FA8  0E36               	movlw	54
 11918  003FAA  185C               	xorwf	_t^0,w,c
 11919  003FAC  A4D8               	btfss	status,2,c
 11920  003FAE  EFDB  F01F         	goto	i2u607_41
 11921  003FB2  EFDD  F01F         	goto	i2u607_40
 11922  003FB6                     i2u607_41:
 11923  003FB6  EFEE  F01F         	goto	i2l4982
 11924  003FBA                     i2u607_40:
 11925  003FBA                     i2l4980:
 11926                           
 11927                           ;main.c: 142:         UART_Wrrite_Chr(' ');
 11928  003FBA  0E20               	movlw	32
 11929  003FBC  ECF5  F025         	call	i2_UART_Wrrite_Chr
 11930                           
 11931                           ;main.c: 143:         UART_Wrrite_Chr('O');
 11932  003FC0  0E4F               	movlw	79
 11933  003FC2  ECF5  F025         	call	i2_UART_Wrrite_Chr
 11934                           
 11935                           ;main.c: 144:         UART_Wrrite_Chr('K');
 11936  003FC6  0E4B               	movlw	75
 11937  003FC8  ECF5  F025         	call	i2_UART_Wrrite_Chr
 11938                           
 11939                           ;main.c: 145:         UART_Wrrite_Chr(10);
 11940  003FCC  0E0A               	movlw	10
 11941  003FCE  ECF5  F025         	call	i2_UART_Wrrite_Chr
 11942                           
 11943                           ;main.c: 146:         UART_Wrrite_Chr(13);
 11944  003FD2  0E0D               	movlw	13
 11945  003FD4  ECF5  F025         	call	i2_UART_Wrrite_Chr
 11946                           
 11947                           ;main.c: 147:         }
 11948  003FD8  EF06  F020         	goto	i2l112
 11949  003FDC                     i2l4982:
 11950                           
 11951                           ;main.c: 149:         UART_Wrrite_Chr(' ');
 11952  003FDC  0E20               	movlw	32
 11953  003FDE  ECF5  F025         	call	i2_UART_Wrrite_Chr
 11954                           
 11955                           ;main.c: 150:         UART_Wrrite_Chr('E');
 11956  003FE2  0E45               	movlw	69
 11957  003FE4  ECF5  F025         	call	i2_UART_Wrrite_Chr
 11958                           
 11959                           ;main.c: 151:         UART_Wrrite_Chr('R');
 11960  003FE8  0E52               	movlw	82
 11961  003FEA  ECF5  F025         	call	i2_UART_Wrrite_Chr
 11962                           
 11963                           ;main.c: 152:         UART_Wrrite_Chr('R');
 11964  003FEE  0E52               	movlw	82
 11965  003FF0  ECF5  F025         	call	i2_UART_Wrrite_Chr
 11966                           
 11967                           ;main.c: 153:         UART_Wrrite_Chr('O');
 11968  003FF4  0E4F               	movlw	79
 11969  003FF6  ECF5  F025         	call	i2_UART_Wrrite_Chr
 11970                           
 11971                           ;main.c: 154:         UART_Wrrite_Chr('R');
 11972  003FFA  0E52               	movlw	82
 11973  003FFC  ECF5  F025         	call	i2_UART_Wrrite_Chr
 11974                           
 11975                           ;main.c: 155:         UART_Wrrite_Chr(10);
 11976  004000  0E0A               	movlw	10
 11977  004002  ECF5  F025         	call	i2_UART_Wrrite_Chr
 11978                           
 11979                           ;main.c: 156:         UART_Wrrite_Chr(13);
 11980  004006  0E0D               	movlw	13
 11981  004008  ECF5  F025         	call	i2_UART_Wrrite_Chr
 11982  00400C                     i2l112:
 11983  00400C  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 11984  00400E  0011               	retfie		f
 11985  004010                     __end_of_nombre:
 11986                           	callstack 0
 11987                           
 11988 ;; *************** function i2_UART_Wrrite_Chr *****************
 11989 ;; Defined at:
 11990 ;;		line 21 in file "UART_LIB.c"
 11991 ;; Parameters:    Size  Location     Type
 11992 ;;  letra           1    wreg     unsigned char 
 11993 ;; Auto vars:     Size  Location     Type
 11994 ;;  letra           1    0[COMRAM] unsigned char 
 11995 ;; Return value:  Size  Location     Type
 11996 ;;                  1    wreg      void 
 11997 ;; Registers used:
 11998 ;;		wreg
 11999 ;; Tracked objects:
 12000 ;;		On entry : 0/0
 12001 ;;		On exit  : 0/0
 12002 ;;		Unchanged: 0/0
 12003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12004 ;;      Params:         0       0       0       0       0       0       0       0       0
 12005 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12006 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12007 ;;      Totals:         1       0       0       0       0       0       0       0       0
 12008 ;;Total ram usage:        1 bytes
 12009 ;; Hardware stack levels used:    1
 12010 ;; This function calls:
 12011 ;;		Nothing
 12012 ;; This function is called by:
 12013 ;;		_nombre
 12014 ;; This function uses a non-reentrant model
 12015 ;;
 12016                           
 12017                           	psect	text49
 12018  004BEA                     __ptext49:
 12019                           	callstack 0
 12020  004BEA                     i2_UART_Wrrite_Chr:
 12021                           	callstack 20
 12022                           
 12023                           ;incstack = 0
 12024                           ;i2UART_Wrrite_Chr@letra stored from wreg
 12025  004BEA  6E01               	movwf	i2UART_Wrrite_Chr@letra^0,c
 12026  004BEC                     
 12027                           ;UART_LIB.c: 22:     TXREG = letra;
 12028  004BEC  C001  FFAD         	movff	i2UART_Wrrite_Chr@letra,4013	;volatile
 12029  004BF0                     i2l198:
 12030  004BF0  A89E               	btfss	158,4,c	;volatile
 12031  004BF2  EFFD  F025         	goto	i2u600_41
 12032  004BF6  EFFF  F025         	goto	i2u600_40
 12033  004BFA                     i2u600_41:
 12034  004BFA  EFF8  F025         	goto	i2l198
 12035  004BFE                     i2u600_40:
 12036  004BFE  0012               	return		;funcret
 12037  004C00                     __end_ofi2_UART_Wrrite_Chr:
 12038                           	callstack 0
 12039                           
 12040 ;; *************** function _UART_Read *****************
 12041 ;; Defined at:
 12042 ;;		line 26 in file "UART_LIB.c"
 12043 ;; Parameters:    Size  Location     Type
 12044 ;;		None
 12045 ;; Auto vars:     Size  Location     Type
 12046 ;;		None
 12047 ;; Return value:  Size  Location     Type
 12048 ;;                  1    wreg      unsigned char 
 12049 ;; Registers used:
 12050 ;;		wreg, status,2
 12051 ;; Tracked objects:
 12052 ;;		On entry : 0/0
 12053 ;;		On exit  : 0/0
 12054 ;;		Unchanged: 0/0
 12055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12056 ;;      Params:         0       0       0       0       0       0       0       0       0
 12057 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12058 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12059 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12060 ;;Total ram usage:        0 bytes
 12061 ;; Hardware stack levels used:    1
 12062 ;; This function calls:
 12063 ;;		Nothing
 12064 ;; This function is called by:
 12065 ;;		_nombre
 12066 ;; This function uses a non-reentrant model
 12067 ;;
 12068                           
 12069                           	psect	text50
 12070  004BBC                     __ptext50:
 12071                           	callstack 0
 12072  004BBC                     _UART_Read:
 12073                           	callstack 20
 12074  004BBC                     
 12075                           ;UART_LIB.c: 27:     if(RCSTAbits.OERR==0){
 12076  004BBC  B2AB               	btfsc	171,1,c	;volatile
 12077  004BBE  EFE3  F025         	goto	i2u296_41
 12078  004BC2  EFE5  F025         	goto	i2u296_40
 12079  004BC6                     i2u296_41:
 12080  004BC6  EFE8  F025         	goto	i2l2996
 12081  004BCA                     i2u296_40:
 12082  004BCA                     
 12083                           ;UART_LIB.c: 28:         CREN=0;
 12084  004BCA  98AB               	bcf	4011,4,c	;volatile
 12085                           
 12086                           ;UART_LIB.c: 29:         __nop();
 12087  004BCC  F000               	nop	
 12088                           
 12089                           ;UART_LIB.c: 30:         CREN=1;
 12090  004BCE  88AB               	bsf	4011,4,c	;volatile
 12091  004BD0                     i2l2996:
 12092                           
 12093                           ;UART_LIB.c: 32:     return(RCREG);
 12094  004BD0  50AE               	movf	174,w,c	;volatile
 12095  004BD2  0012               	return		;funcret
 12096  004BD4                     __end_of_UART_Read:
 12097                           	callstack 0
 12098                           
 12099                           	psect	rparam
 12100  0000                     
 12101                           	psect	temp
 12102  00005D                     btemp:
 12103                           	callstack 0
 12104  00005D                     	ds	1
 12105  0000                     int$flags	set	btemp
 12106  0000                     wtemp8	set	btemp+1
 12107  0000                     ttemp5	set	btemp+1
 12108  0000                     ttemp6	set	btemp+4
 12109  0000                     ttemp7	set	btemp+8
 12110                           
 12111                           	psect	idloc
 12112                           
 12113                           ;Config register IDLOC0 @ 0x200000
 12114                           ;	unspecified, using default values
 12115  200000                     	org	2097152
 12116  200000  FF                 	db	255
 12117                           
 12118                           ;Config register IDLOC1 @ 0x200001
 12119                           ;	unspecified, using default values
 12120  200001                     	org	2097153
 12121  200001  FF                 	db	255
 12122                           
 12123                           ;Config register IDLOC2 @ 0x200002
 12124                           ;	unspecified, using default values
 12125  200002                     	org	2097154
 12126  200002  FF                 	db	255
 12127                           
 12128                           ;Config register IDLOC3 @ 0x200003
 12129                           ;	unspecified, using default values
 12130  200003                     	org	2097155
 12131  200003  FF                 	db	255
 12132                           
 12133                           ;Config register IDLOC4 @ 0x200004
 12134                           ;	unspecified, using default values
 12135  200004                     	org	2097156
 12136  200004  FF                 	db	255
 12137                           
 12138                           ;Config register IDLOC5 @ 0x200005
 12139                           ;	unspecified, using default values
 12140  200005                     	org	2097157
 12141  200005  FF                 	db	255
 12142                           
 12143                           ;Config register IDLOC6 @ 0x200006
 12144                           ;	unspecified, using default values
 12145  200006                     	org	2097158
 12146  200006  FF                 	db	255
 12147                           
 12148                           ;Config register IDLOC7 @ 0x200007
 12149                           ;	unspecified, using default values
 12150  200007                     	org	2097159
 12151  200007  FF                 	db	255
 12152                           
 12153                           	psect	config
 12154                           
 12155                           ;Config register CONFIG1L @ 0x300000
 12156                           ;	PLL Prescaler Selection bits
 12157                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
 12158                           ;	System Clock Postscaler Selection bits
 12159                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
 12160                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 12161                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
 12162  300000                     	org	3145728
 12163  300000  00                 	db	0
 12164                           
 12165                           ;Config register CONFIG1H @ 0x300001
 12166                           ;	Oscillator Selection bits
 12167                           ;	FOSC = XT_XT, XT oscillator (XT)
 12168                           ;	Fail-Safe Clock Monitor Enable bit
 12169                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 12170                           ;	Internal/External Oscillator Switchover bit
 12171                           ;	IESO = OFF, Oscillator Switchover mode disabled
 12172  300001                     	org	3145729
 12173  300001  00                 	db	0
 12174                           
 12175                           ;Config register CONFIG2L @ 0x300002
 12176                           ;	Power-up Timer Enable bit
 12177                           ;	PWRT = OFF, PWRT disabled
 12178                           ;	Brown-out Reset Enable bits
 12179                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
 12180                           ;	Brown-out Reset Voltage bits
 12181                           ;	BORV = 3, Minimum setting 2.05V
 12182                           ;	USB Voltage Regulator Enable bit
 12183                           ;	VREGEN = OFF, USB voltage regulator disabled
 12184  300002                     	org	3145730
 12185  300002  19                 	db	25
 12186                           
 12187                           ;Config register CONFIG2H @ 0x300003
 12188                           ;	Watchdog Timer Enable bit
 12189                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 12190                           ;	Watchdog Timer Postscale Select bits
 12191                           ;	WDTPS = 32768, 1:32768
 12192  300003                     	org	3145731
 12193  300003  1E                 	db	30
 12194                           
 12195                           ; Padding undefined space
 12196  300004                     	org	3145732
 12197  300004  FF                 	db	255
 12198                           
 12199                           ;Config register CONFIG3H @ 0x300005
 12200                           ;	CCP2 MUX bit
 12201                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
 12202                           ;	PORTB A/D Enable bit
 12203                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 12204                           ;	Low-Power Timer 1 Oscillator Enable bit
 12205                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 12206                           ;	MCLR Pin Enable bit
 12207                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 12208  300005                     	org	3145733
 12209  300005  81                 	db	129
 12210                           
 12211                           ;Config register CONFIG4L @ 0x300006
 12212                           ;	Stack Full/Underflow Reset Enable bit
 12213                           ;	STVREN = ON, Stack full/underflow will cause Reset
 12214                           ;	Single-Supply ICSP Enable bit
 12215                           ;	LVP = OFF, Single-Supply ICSP disabled
 12216                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 12217                           ;	ICPRT = OFF, ICPORT disabled
 12218                           ;	Extended Instruction Set Enable bit
 12219                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 12220                           ;	Background Debugger Enable bit
 12221                           ;	DEBUG = 0x1, unprogrammed default
 12222  300006                     	org	3145734
 12223  300006  81                 	db	129
 12224                           
 12225                           ; Padding undefined space
 12226  300007                     	org	3145735
 12227  300007  FF                 	db	255
 12228                           
 12229                           ;Config register CONFIG5L @ 0x300008
 12230                           ;	Code Protection bit
 12231                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
 12232                           ;	Code Protection bit
 12233                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
 12234                           ;	Code Protection bit
 12235                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
 12236                           ;	Code Protection bit
 12237                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
 12238  300008                     	org	3145736
 12239  300008  0F                 	db	15
 12240                           
 12241                           ;Config register CONFIG5H @ 0x300009
 12242                           ;	Boot Block Code Protection bit
 12243                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
 12244                           ;	Data EEPROM Code Protection bit
 12245                           ;	CPD = OFF, Data EEPROM is not code-protected
 12246  300009                     	org	3145737
 12247  300009  C0                 	db	192
 12248                           
 12249                           ;Config register CONFIG6L @ 0x30000A
 12250                           ;	Write Protection bit
 12251                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
 12252                           ;	Write Protection bit
 12253                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
 12254                           ;	Write Protection bit
 12255                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
 12256                           ;	Write Protection bit
 12257                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
 12258  30000A                     	org	3145738
 12259  30000A  0F                 	db	15
 12260                           
 12261                           ;Config register CONFIG6H @ 0x30000B
 12262                           ;	Configuration Register Write Protection bit
 12263                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 12264                           ;	Boot Block Write Protection bit
 12265                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
 12266                           ;	Data EEPROM Write Protection bit
 12267                           ;	WRTD = OFF, Data EEPROM is not write-protected
 12268  30000B                     	org	3145739
 12269  30000B  E0                 	db	224
 12270                           
 12271                           ;Config register CONFIG7L @ 0x30000C
 12272                           ;	Table Read Protection bit
 12273                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
 12274                           ;	Table Read Protection bit
 12275                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
 12276                           ;	Table Read Protection bit
 12277                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
 12278                           ;	Table Read Protection bit
 12279                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
 12280  30000C                     	org	3145740
 12281  30000C  0F                 	db	15
 12282                           
 12283                           ;Config register CONFIG7H @ 0x30000D
 12284                           ;	Boot Block Table Read Protection bit
 12285                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
 12286  30000D                     	org	3145741
 12287  30000D  40                 	db	64
 12288                           tosu	equ	0xFFF
 12289                           tosh	equ	0xFFE
 12290                           tosl	equ	0xFFD
 12291                           stkptr	equ	0xFFC
 12292                           pclatu	equ	0xFFB
 12293                           pclath	equ	0xFFA
 12294                           pcl	equ	0xFF9
 12295                           tblptru	equ	0xFF8
 12296                           tblptrh	equ	0xFF7
 12297                           tblptrl	equ	0xFF6
 12298                           tablat	equ	0xFF5
 12299                           prodh	equ	0xFF4
 12300                           prodl	equ	0xFF3
 12301                           indf0	equ	0xFEF
 12302                           postinc0	equ	0xFEE
 12303                           postdec0	equ	0xFED
 12304                           preinc0	equ	0xFEC
 12305                           plusw0	equ	0xFEB
 12306                           fsr0h	equ	0xFEA
 12307                           fsr0l	equ	0xFE9
 12308                           wreg	equ	0xFE8
 12309                           indf1	equ	0xFE7
 12310                           postinc1	equ	0xFE6
 12311                           postdec1	equ	0xFE5
 12312                           preinc1	equ	0xFE4
 12313                           plusw1	equ	0xFE3
 12314                           fsr1h	equ	0xFE2
 12315                           fsr1l	equ	0xFE1
 12316                           bsr	equ	0xFE0
 12317                           indf2	equ	0xFDF
 12318                           postinc2	equ	0xFDE
 12319                           postdec2	equ	0xFDD
 12320                           preinc2	equ	0xFDC
 12321                           plusw2	equ	0xFDB
 12322                           fsr2h	equ	0xFDA
 12323                           fsr2l	equ	0xFD9
 12324                           status	equ	0xFD8

Data Sizes:
    Strings     214
    Constant    0
    Data        32
    BSS         121
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     91      92
    BANK0           160    126     160
    BANK1           256      2     120
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_35(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_35(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_30(CODE[4]), STR_29(CODE[4]), STR_26(CODE[4]), STR_25(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_30(CODE[4]), STR_29(CODE[4]), STR_26(CODE[4]), STR_25(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> aux(BANK1[20]), txt(BANK1[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_23(CODE[15]), STR_22(CODE[3]), STR_18(CODE[10]), STR_17(CODE[3]), 
		 -> STR_13(CODE[16]), STR_12(CODE[16]), STR_11(CODE[3]), STR_7(CODE[3]), 
		 -> STR_6(CODE[3]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_23(CODE[15]), STR_22(CODE[3]), STR_18(CODE[10]), STR_17(CODE[3]), 
		 -> STR_13(CODE[16]), STR_12(CODE[16]), STR_11(CODE[3]), STR_7(CODE[3]), 
		 -> STR_6(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_23(CODE[15]), STR_22(CODE[3]), STR_18(CODE[10]), STR_17(CODE[3]), 
		 -> STR_13(CODE[16]), STR_12(CODE[16]), STR_11(CODE[3]), STR_7(CODE[3]), 
		 -> STR_6(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_23(CODE[15]), STR_22(CODE[3]), STR_18(CODE[10]), STR_17(CODE[3]), 
		 -> STR_13(CODE[16]), STR_12(CODE[16]), STR_11(CODE[3]), STR_7(CODE[3]), 
		 -> STR_6(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> aux(BANK1[20]), txt(BANK1[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1175_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> aux(BANK1[20]), txt(BANK1[10]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> aux(BANK1[20]), txt(BANK1[10]), 

    LCD_Out@text	PTR unsigned char  size(2) Largest target is 21
		 -> STR_24(CODE[21]), STR_21(CODE[9]), STR_20(CODE[9]), STR_19(CODE[18]), 
		 -> STR_16(CODE[9]), STR_15(CODE[9]), STR_14(CODE[18]), aux(BANK1[20]), 
		 -> STR_10(CODE[9]), STR_9(CODE[9]), STR_8(CODE[21]), txt(BANK1[10]), 
		 -> STR_5(CODE[9]), STR_4(CODE[11]), STR_3(CODE[11]), STR_2(CODE[17]), 
		 -> STR_1(CODE[18]), 


Critical Paths under _main in COMRAM

    _serial->_UART_Wrrite_Chr
    _UART_Init->___fltol
    _efgtoa->___fltol
    _tolower->_isupper
    _floorf->___fldiv
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _LCD_Out->_LCD_XY
    _LCD_Chr_Cp->_enviar_dato
    _LCD_Chr->_LCD_XY
    _LCD_XY->_LCD_Cmd
    _LCD_Cmd->_enviar_dato
    _LCD_Init->_enviar_dato

Critical Paths under _nombre in COMRAM

    _nombre->i2_UART_Wrrite_Chr

Critical Paths under _main in BANK0

    _MenuP->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _nombre in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_MenuP

Critical Paths under _nombre in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _nombre in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _nombre in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _nombre in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _nombre in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _nombre in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _nombre in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   75790
                           _ADC_Init
                            _LCD_Cmd
                           _LCD_Init
                              _MenuP
                          _UART_Init
                             _serial
 ---------------------------------------------------------------------------------
 (1) _serial                                               0     0      0      15
                    _UART_Wrrite_Chr
 ---------------------------------------------------------------------------------
 (2) _UART_Wrrite_Chr                                      1     1      0      15
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            4     0      4   12825
                                              0 BANK0      4     0      4
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _MenuP                                                2     2      0   62380
                                              0 BANK1      2     2      0
                           _ADC_Read
                            _LCD_Chr
                            _LCD_Cmd
                            _LCD_Out
                             ___flge
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   49551
                                            108 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   47595
                                            100 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           50    44      6   47032
                                             68 BANK0     32    26      6
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     595
                                              1 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   32917
                                              0 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1142
                                              7 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     551
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4    1037
                                              1 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             65 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              1 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     697
                                             81 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    4367
                                             81 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    3802
                                             65 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     155
                                              1 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    4313
                                             15 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    2246
                                             40 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              1 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    3083
                                             40 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                              1 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6493
                                             28 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4227
                                             17 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                             10 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1037
                                              1 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             19 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              1 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              1 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1795
                                              8 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              1 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     371
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     512
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     778
                                              1 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) _LCD_Out                                              4     1      3    4395
                                              9 COMRAM     4     1      3
                         _LCD_Chr_Cp
                             _LCD_XY
 ---------------------------------------------------------------------------------
 (3) _LCD_Chr_Cp                                           1     1      0     198
                                              4 COMRAM     1     1      0
                        _enviar_dato
 ---------------------------------------------------------------------------------
 (2) _LCD_Chr                                              3     1      2     854
                                              9 COMRAM     3     1      2
                             _LCD_XY
                        _enviar_dato
 ---------------------------------------------------------------------------------
 (3) _LCD_XY                                               4     3      1     460
                                              5 COMRAM     4     3      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (4) _LCD_Cmd                                              1     1      0     198
                                              4 COMRAM     1     1      0
                        _enviar_dato
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             7     5      2      45
                                              1 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0     176
                                              4 COMRAM     1     1      0
                        _enviar_dato
 ---------------------------------------------------------------------------------
 (5) _enviar_dato                                          3     3      0     176
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             5     1      4     196
                                              1 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _nombre                                              0     0      0      22
                          _UART_Read
                  i2_UART_Wrrite_Chr
 ---------------------------------------------------------------------------------
 (11) i2_UART_Wrrite_Chr                                   1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _UART_Read                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _LCD_Cmd
     _enviar_dato
   _LCD_Init
     _enviar_dato
   _MenuP
     _ADC_Read
     _LCD_Chr
       _LCD_XY
         _LCD_Cmd
           _enviar_dato
       _enviar_dato
     _LCD_Cmd
       _enviar_dato
     _LCD_Out
       _LCD_Chr_Cp
         _enviar_dato
       _LCD_XY
         _LCD_Cmd
           _enviar_dato
     ___flge
       ___flmul (ARG)
         ___xxtofl (ARG)
     ___flmul
       ___xxtofl (ARG)
     ___xxtofl
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
   _UART_Init
     ___fladd
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       ___xxtofl (ARG)
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _serial
     _UART_Wrrite_Chr

 _nombre (ROOT)
   _UART_Read
   i2_UART_Wrrite_Chr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      2      78       7       46.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     7E      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5B      5C       1       97.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     174      20        0.0%
DATA                 0      0     174       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Mon Nov 30 14:18:40 2020

               ?_LCD_Chr_Cp 0001                ___fldiv@aexp 0041                ___fldiv@bexp 0040  
                         _t 005C                ___fldiv@sign 0039                          l51 49DA  
                        l45 4B84                          l48 49AE                          l81 1550  
              ___awdiv@sign 0007         ___wmul@multiplicand 0004                         l102 1C06  
                       l201 4BE8                         l115 3C2C                         l140 4C0C  
                       l134 4494                         l143 4C1A                         l152 4668  
                       l208 4B62                         l137 3B10                         l322 3880  
                       l155 4BBA                         l167 46D4                         l335 39E4  
                       l505 3D32                         l195 45E6                         l452 43E8  
                       l198 4BDA                         l439 4338                         l801 2D64  
                       l473 3DF0                         l482 4ACE                         l803 2DDC  
                       l467 453E                         l804 2DCA                         l478 3E36  
                       l822 27C0                         l831 2A2E                         l832 2A1C  
                       l736 242A                         l753 2544                         l745 26FA  
                       l737 2418                         l826 2B24                         l762 2614  
                       l738 23DE                         l763 2602                         l932 4238  
                       l940 2F60                         l829 29B6                         l870 34A4  
                       l934 4274                         l942 2F68                         l790 2EBE  
                       l863 340C                         l839 2AE6                         l960 31A2  
                       l792 2D1E                         l929 41F6                         l866 3568  
                       l778 4994                         l795 2CE2                         l877 3500  
                       l886 48FC                         l978 1486                         l996 0CC4  
                       _abs 4A20                         _aux 0158                         _pad 41B0  
                       _hum 00EA                         _txt 016C                ___awmod@sign 0007  
                       wreg 000FE8                ___flmul@aexp 001D                ___flmul@bexp 0022  
              ___flmul@sign 001C                ___flmul@temp 0027                ___flmul@prod 0023  
           __end_of_LCD_Cmd 4C1C             __end_of_LCD_Chr 4BBC             __end_of_LCD_Out 46D6  
              ___fltol@exp1 005B                        l1110 4A56                        l1022 105C  
                      l1200 4C1E                        l1113 4A5E                        l1105 3F34  
                      ?_abs 0014                        l1212 4B3C                        l1141 36F0  
                      l1150 33B4                        l1206 4852                        l1231 47F6  
                      l1160 4B06                        l1144 36F8                        l1216 40E4  
                      l1080 223A                        l3000 3B12                        l1153 32F8  
                      l1226 47EE                        l1174 4A96                        l1094 472E  
                      l1095 4736                        l1168 494E                        l1088 2180  
                      l1189 41AE                        l1197 4A1E                        l4040 39FA  
                      l4050 3A80                        l4042 3A02                        l4060 3ABA  
                      l4052 3A82                        l4044 3A1C                        l5100 2258  
                      l4070 3B08                        l4062 3ADA                        l4054 3A8A  
                      l4046 3A40                        l4038 39E8                        l5102 2268  
                      l5110 2292                        l4072 3B0A                        l4064 3AFC  
                      l4056 3A8C                        l4048 3A66                        l6000 312E  
                      l5200 245C                        l5120 22C2                        l5112 22A2  
                      l5104 2278                        l4074 3B0C                        l4066 3AFE  
                      l4058 3AA0                        l6010 316A                        l6002 313E  
                      l5210 2498                        l5202 246C                        l5130 2302  
                      l5122 22D0                        l5114 22A8                        l5106 2288  
                      l4076 3B0E                        l4068 3B06                        l5300 49FA  
                      l6004 3144                        l6012 317A                        l5220 24DE  
                      l5212 24A6                        l5204 247A                        l5140 233C  
                      l5132 2304                        l5124 22D2                        l5116 22BA  
                      l5108 228A                        l6100 0C5E                        l6020 08F2  
                      l4502 4C10                        l5302 49FE                        l5310 4B30  
                      l6006 3156                        l5230 255A                        l5222 2512  
                      l5214 24A8                        l5206 2488                        l5150 2350  
                      l5142 2340                        l5126 22E2                        l5134 230C  
                      l5118 22BC                        l6110 0C9E                        l6102 0C6E  
                      l6030 093E                        l6022 0900                        l4504 4C12  
                      l5320 4B5A                        l5400 39C4                        l5080 40E6  
                      l5304 4B08                        l6008 3162                        l5240 2596  
                      l5232 256A                        l5224 2514                        l5216 24B2  
                      l5208 2494                        l5160 2364                        l5152 2354  
                      l5144 2344                        l5136 231C                        l5128 22F2  
                      l6200 1126                        l6120 0CE2                        l6112 0CB8  
                      l6104 0C72                        l6040 0984                        l6032 0950  
                      l6024 0908                        l6016 08D8                        l4506 4C18  
                      l5330 372C                        l5090 4168                        l5082 40F8  
                      l5306 4B14                        l5410 2B42                        l5250 25C2  
                      l5242 2598                        l5226 2524                        l5218 24B8  
                      l5170 2378                        l5162 2368                        l5154 2358  
                      l5146 2348                        l5138 232E                        l5314 4A60  
                      l6210 1160                        l6202 1138                        l6122 0CF4  
                      l6130 0D52                        l6106 0C84                        l6114 0CD0  
                      l6042 0988                        l6034 095E                        l6026 092C  
                      l6018 08E2                        l5340 376E                        l5332 3730  
                      l5324 36FA                        l5084 410A                        l5308 4B18  
                      l5500 2D82                        l5412 2B52                        l5420 2B7C  
                      l5404 2B26                        l5260 25FA                        l5244 25A6  
                      l5236 257E                        l5252 25C4                        l5228 2534  
                      l5180 23D6                        l5164 236C                        l5156 235C  
                      l5148 234C                        l5172 237C                        l6300 143C  
                      l6212 116C                        l6204 1146                        l6220 118C  
                      l6140 0D90                        l6132 0D5A                        l6124 0D10  
                      l6108 0C96                        l6060 0A3E                        l6052 09EE  
                      l6044 098C                        l6036 0970                        l6028 0936  
                      l4702 4BA6                        l4630 4C04                        l4710 33B8  
                      l5318 4B3E                        l5350 37C8                        l5342 378C  
                      l5334 373E                        l5326 36FE                        l5086 4114  
                      l5510 2DEC                        l5502 2D86                        l5430 2BA8  
                      l5422 2B8C                        l5414 2B62                        l5406 2B32  
                      l5270 2678                        l5246 25AE                        l5238 2588  
                      l5254 25D2                        l5190 240C                        l5182 23EC  
                      l5174 2380                        l5166 2370                        l5158 2360  
                      l5094 223C                        l6302 1448                        l6230 1212  
                      l6222 119E                        l6214 117C                        l6206 1156  
                      l6142 0DA2                        l6150 0DE2                        l6134 0D6C  
                      l6126 0D46                        l6070 0AC2                        l6054 0A00  
                      l6038 097C                        l6046 0992                        l2782 4BD6  
                      ?_pad 0012                        l4640 45FA                        l4704 4BB0  
                      l4632 4C0A                        l4712 33C8                        l6320 3586  
                      l5352 37F6                        l5344 3794                        l5360 3830  
                      l5336 375E                        l5328 370C                        l5088 4132  
                      l5520 2E4E                        l5512 2DF8                        l5504 2D94  
                      l5432 2BB8                        l5440 2BE2                        l5424 2B92  
                      l5416 2B72                        l5408 2B40                        l5600 2876  
                      l5280 26BE                        l5264 2624                        l5272 267A  
                      l5256 25D6                        l5248 25B2                        l5192 2416  
                      l5184 23F8                        l5176 23AA                        l5168 2374  
                      l5096 2248                        l6304 1450                        l6240 128C  
                      l6232 1246                        l6224 11B0                        l6216 1180  
                      l6208 115A                        l6160 0ECA                        l6152 0DEA  
                      l6144 0DB0                        l6136 0D7E                        l6128 0D4E  
                      l6072 0AD4                        l6056 0A1C                        l6048 09B8  
                      l6064 0A66                        l6400 1D3C                        l4642 4606  
                      l4650 4658                        l4706 4BB8                        l4730 348E  
                      l4722 3446                        l4714 33D6                        l6330 35E2  
                      l6322 35A2                        l6314 356A                        l5362 3840  
                      l5354 3816                        l5346 37A8                        l5338 3762  
                      l5370 3886                        l5530 2EAC                        l5522 2E64  
                      l5514 2E06                        l5506 2DC2                        l5450 2C24  
                      l5442 2BF2                        l5434 2BC8                        l5426 2B98  
                      l5418 2B74                        l5610 28CC                        l5602 2886  
                      l5290 26E8                        l5282 26CC                        l5274 268A  
                      l5266 2630                        l5258 25E4                        l5194 2438  
                      l5186 23FC                        l5178 23C6                        l5098 2256  
                      l6306 1460                        l6250 12D0                        l6242 129E  
                      l6234 124E                        l6226 11B4                        l6218 1186  
                      l6170 0F88                        l6162 0EFE                        l6154 0DFA  
                      l6146 0DC8                        l6138 0D8C                        l6090 0B90  
                      l6074 0AF0                        l6066 0A8C                        l6082 0B0C  
                      l6058 0A34                        l6410 1DAC                        l6402 1D4E  
                      l4652 4666                        l4644 4612                        l4636 45EA  
                      l4628 4C02                        l4740 350E                        l4732 349A  
                      l4724 344E                        l4716 341C                        l6332 35F8  
                      l6324 35D8                        l6316 357E                        l5364 3860  
                      l5356 3818                        l5348 37B6                        l5380 38E6  
                      l5372 3894                        l5700 42D8                        l5532 2EB2  
                      l5524 2E7E                        l5516 2E30                        l5444 2C08  
                      l5436 2BD8                        l5428 2BA6                        l5620 2970  
                      l5612 28E8                        l5604 2892                        l5292 26EA  
                      l5284 26D2                        l5276 269A                        l5268 263E  
                      l5196 2448                        l5188 240A                        l6308 1466  
                      l6260 1310                        l6252 12E2                        l6244 12AC  
                      l6228 11BA                        l6236 1252                        l6180 1024  
                      l6172 0F9E                        l6156 0E0E                        l6164 0F04  
                      l6148 0DDA                        l6092 0B96                        l6084 0B26  
                      l6420 1E5C                        l6412 1DE6                        l6404 1D72  
                      l6500 4712                        l4670 49AA                        l4638 45EE  
                      l4750 3556                        l4742 3510                        l4734 34D6  
                      l4726 345A                        l4718 3432                        l6350 36D4  
                      l6342 3672                        l6334 3600                        l6326 35DC  
                      l6318 3582                        l5358 382A                        l5390 395C  
                      l5382 3904                        l5374 38B4                        l5710 430C  
                      l5702 42E6                        l5534 2EB4                        l5526 2E9A  
                      l5518 2E34                        l5470 2CA6                        l5462 2C5C  
                      l5446 2C18                        l5454 2C38                        l5438 2BDA  
                      l5630 29C6                        l5622 297E                        l5614 28F4  
                      l5606 28A2                        l5550 2728                        l5542 26FC  
                      l5286 26D4                        l5278 26BA                        l6270 1358  
                      l6262 1318                        l6254 12EA                        l6246 12BC  
                      l6238 1270                        l6190 10DC                        l6182 1034  
                      l6174 0FD0                        l6166 0F22                        l6158 0E72  
                      l6094 0BF0                        l6430 1EE2                        l6414 1E06  
                      l6406 1D7A                        l6422 1E6E                        l6510 48EA  
                      l6502 48AC                        l4920 43F8                        l4672 49AC  
                      l4648 461E                        l4680 466C                        l4752 3558  
                      l4744 3514                        l4736 34E2                        l4728 348C  
                      l6336 3608                        l5392 397C                        l5384 390C  
                      l5376 38B8                        l5368 3882                        l5296 49DC  
                      l5712 4312                        l5704 42EC                        l5528 2E9E  
                      l5480 2CEC                        l5472 2CAE                        l5464 2C76  
                      l5456 2C48                        l5448 2C20                        l5632 29D4  
                      l5624 299C                        l5616 2910                        l5608 28BC  
                      l5560 2764                        l5552 2738                        l5544 2708  
                      l5800 4ABE                        l5288 26DA                        l6280 13AE  
                      l6272 1374                        l6264 1320                        l6256 12FA  
                      l6248 12C0                        l6192 10EC                        l6184 1048  
                      l6176 0FE0                        l6168 0F56                        l6096 0C24  
                      l6088 0B5C                        l6432 1F14                        l6424 1E90  
                      l6416 1E14                        l6408 1D88                        l6504 48BE  
                      l6600 18C4                        l6520 14B2                        l4930 4440  
                      l4922 4406                        l4674 49BC                        l4682 4676  
                      l4746 3538                        l4738 34F0                        l6346 36B0  
                      l6338 363C                        l5394 398E                        l5386 3920  
                      l5378 38C6                        l5298 49E8                        l5706 4302  
                      l5714 4318                        l5730 4358                        l5722 433A  
                      l5490 2D44                        l5482 2D0A                        l5474 2CBE  
                      l5466 2C86                        l5458 2C48                        l5642 2A3E  
                      l5650 2A86                        l5634 29D8                        l5626 29A6  
                      l5618 293A                        l5570 279A                        l5562 276A  
                      l5554 2748                        l5546 2716                        l5810 3C58  
                      l6290 13EA                        l6282 13B4                        l6274 137C  
                      l6266 132C                        l6258 1302                        l6194 10FE  
                      l6186 1054                        l6178 0FF0                        l6098 0C2C  
                      l6370 409A                        l6362 4046                        l6450 2042  
                      l6442 1FDC                        l6434 1F38                        l6426 1EA0  
                      l6506 48C6                        l6602 18F6                        l6610 1952  
                      l6530 1518                        l6522 14C4                        l6514 1488  
                      l4756 4B64                        l4940 4470                        l4932 4446  
                      l4924 440C                        l4676 49D2                        l4668 4998  
                      l4684 467C                        l4748 3548                        l6348 36C2  
                      l5388 392E                        l5396 3994                        l5716 4328  
                      l5708 430A                        l5740 4390                        l5732 4366  
                      l5724 433E                        l5492 2D4A                        l5484 2D0C  
                      l5476 2CD2                        l5468 2C96                        l5660 2AFA  
                      l5652 2AA0                        l5644 2A4A                        l5636 29E6  
                      l5628 29B4                        l5572 27AA                        l5564 2778  
                      l5556 274E                        l5548 2718                        l5820 3CA6  
                      l5812 3C82                        l5804 3C2E                        l5900 4798  
                      l6292 13F0                        l6284 13C6                        l6268 1332  
                      l6276 1382                        l6196 1110                        l6188 1078  
                      l6372 40C2                        l6364 4054                        l6356 4010  
                      l6460 210A                        l6444 1FEE                        l6436 1F5C  
                      l6428 1ED2                        l6380 1C3A                        l6508 48CE  
                      l6620 19A8                        l6612 1984                        l6604 1928  
                      l6540 157C                        l6532 1526                        l6524 14D6  
                      l6516 148E                        l6700 4880                        l4758 4B82  
                      l4942 447E                        l4934 4454                        l4926 4422  
                      l4918 43EA                        l4686 46A0                        l5398 39A4  
                      l5718 4330                        l5742 439E                        l5750 43C8  
                      l5734 436E                        l5726 434C                        l5494 2D54  
                      l5486 2D1C                        l5478 2CE0                        l5662 2B08  
                      l5654 2AB4                        l5646 2A58                        l5638 2A14  
                      l5590 282C                        l5582 27F4                        l5574 27B0  
                      l5566 277A                        l5558 275E                        l5830 3CD2  
                      l5814 3C84                        l5806 3C44                        l5910 31A4  
                      l6294 13F6                        l6286 13D2                        l6278 1394  
                      l6198 111E                        l6366 406C                        l6358 403A  
                      l6462 211C                        l6470 2194                        l6446 2004  
                      l6454 206E                        l6438 1FA4                        l6390 1CB8  
                      l6382 1C4C                        l6630 1A0E                        l6622 19BA  
                      l6614 198C                        l6606 192C                        l6550 15CA  
                      l6542 158E                        l6534 152C                        l6526 14E8  
                      l6518 14A0                        l6710 48A0                        l6702 4882  
                      l4944 4486                        l4936 445C                        l4928 442A  
                      l4688 46A4                        l5680 427A                        l5752 43D8  
                      l5744 43B4                        l5736 4380                        l5728 4354  
                      l5496 2D62                        l5488 2D2E                        l5760 44C4  
                      l5664 2B0A                        l5656 2ACE                        l5648 2A82  
                      l5592 2844                        l5584 2800                        l5576 27D0  
                      l5568 278A                        l5672 4950                        l5840 3D02  
                      l5816 3C94                        l5912 31C4                        l5904 47CE  
                      l6288 13DA                        l6368 4088                        l6472 21B8  
                      l6480 21E8                        l6464 2150                        l6456 209C  
                      l6448 2012                        l6392 1CC6                        l6384 1C50  
                      l6376 1C08                        l6640 1AAE                        l6632 1A1C  
                      l6624 19CC                        l6616 1990                        l6608 1934  
                      l6560 1666                        l6552 15DC                        l6544 15A0  
                      l6536 1548                        l6528 1506                        l6704 4884  
                      l4938 446A                        l5850 41C0                        l5690 42AA  
                      l5682 4288                        l5754 43E0                        l5746 43BC  
                      l5738 4388                        l5498 2D74                        l5770 453C  
                      l5762 44D4                        l5658 2AEA                        l5666 2B10  
                      l5594 2850                        l5586 280A                        l5578 27E0  
                      l5674 4960                        l5842 3D12                        l5826 3CBE  
                      l5818 3C98                        l5930 336C                        l5922 32AC  
                      l5914 321A                        l5906 47E0                        l6298 142A  
                      l6482 21F6                        l6474 21C6                        l6394 1CE6  
                      l6386 1C74                        l6378 1C2C                        l6650 1AFC  
                      l6642 1AC0                        l6634 1A68                        l6626 19DE  
                      l6618 19A2                        l6570 171E                        l6562 168C  
                      l6554 15FA                        l6546 15A6                        l6538 155E  
                      l6706 4886                        l5860 4216                        l5852 41D4  
                      l5692 42AE                        l5684 4290                        l5748 43C2  
                      l5764 4502                        l5780 3DA0                        l5668 2B14  
                      l5596 285C                        l5588 2820                        l5844 3D22  
                      l5836 3CE6                        l5828 3CC8                        l5932 3394  
                      l5924 32E8                        l5916 322E                        l6476 21DA  
                      l6396 1CF4                        l6388 1CAA                        l6660 1BAC  
                      l6652 1B1A                        l6644 1AC6                        l6636 1A8E  
                      l6628 19FC                        l6580 1796                        l6572 1730  
                      l6564 169E                        l6556 160C                        l6548 15B8  
                      l6708 489C                        l5950 4948                        l5942 48FE  
                      l5870 4A20                        l5862 421A                        l5854 41E2  
                      l5694 42B6                        l5686 4294                        l5678 4276  
                      l5766 4512                        l5758 4496                        l5790 3E2E  
                      l5782 3DB0                        l5774 3D34                        l5598 286A  
                      l5838 3CF2                        l5934 33A4                        l5918 323C  
                      l5926 331C                        l6486 2204                        l6494 46D6  
                      l6662 1BBE                        l6654 1B2C                        l6646 1AD8  
                      l6638 1AA0                        l6582 17C8                        l6590 182C  
                      l6574 1762                        l6566 16AC                        l6558 161A  
                      l5944 4902                        l5872 4A3A                        l5864 4248  
                      l5856 41EE                        l5848 41B0                        l5960 2F28  
                      l5696 42C8                        l5688 42A2                        l5768 4536  
                      l5792 3E34                        l5784 3DBE                        l5776 3D62  
                      l5880 3EBE                        l5928 3358                        l6488 2228  
                      l6496 46DE                        l6656 1B3A                        l6648 1AEA  
                      l6592 185E                        l6584 17FA                        l6576 1766  
                      l6568 16F8                        l5938 4AD0                        l5946 4916  
                      l5866 425C                        l5858 4202                        l5970 2F82  
                      l5962 2F38                        l5954 2EC0                        l5698 42D0  
                      l5786 3DD0                        l5778 3D72                        l5882 3ECA  
                      l5874 3E38                        l6498 46EC                        l6658 1B86  
                      l6594 1890                        l6586 17FE                        l6578 1778  
                      l6666 1BD0                        l6674 4540                        l6690 485E  
                      l5948 4944                        l5980 2FAE                        l5972 2F90  
                      l5964 2F3A                        l5956 2EE0                        l5788 3DDE  
                      l5796 4A98                        l5892 3F2C                        l5876 3E58  
                      l6596 1894                        l6588 180E                        l6684 45E2  
                      l6676 4544                        l6692 4860                        l5990 30BA  
                      l5982 3030                        l5974 2F96                        l5966 2F54  
                      l5958 2F08                        l5798 4AAE                        l5878 3E96  
                      l5886 3ED6                        l6782 1BE8                        l6598 18A6  
                      l6678 45DE                        l6694 4864                        l6686 4854  
                      l6784 3626                        l5992 30D8                        l5984 3036  
                      l5976 2F9E                        l5968 2F70                        l5888 3EE8  
                      l5896 47F8                        l6696 486A                        l6688 485C  
                      l6786 4632                        l5994 30F2                        l5986 303C  
                      l5978 2FA8                        l5898 4808                        l6698 487E  
                      l5996 310C                        l5988 30A0                        l5998 311C  
                      STR_1 082B                        STR_2 083D                        STR_3 0888  
                      STR_4 087D                        STR_5 089D                        STR_6 08D4  
                      STR_7 08D4                        STR_8 0816                        STR_9 08A6  
                      _CREN 007D5C                        u2700 4BE8                        u2701 4BE4  
                      u6100 410A                        u6101 4106                        u6110 4132  
                      u6111 412E                        u6120 4168                        u7000 295A  
                      u6200 232E                        u6121 4164                        u6201 232A  
                      u7010 29B4                        u6210 233C                        u6130 2256  
                      u7011 29B0                        u6211 2338                        u6131 2252  
                      u7100 2B08                        u7020 29D4                        u6300 247A  
                      u6220 23AA                        u6140 2268                        u7101 2B04  
                      u7021 29D0                        u7005 2950                        u6301 2476  
                      u6221 23A6                        u6141 2264                        u7110 4288  
                      u7030 29E6                        u6310 2488                        u6230 23C2  
                      u6150 2278                        u7111 4284                        u7031 29E2  
                      u6311 2484                        u6231 23BC                        u6151 2274  
                      u7120 42A2                        u7200 439E                        u7040 2A14  
                      u6400 25D2                        u6320 24A6                        u6240 23C4  
                      u6160 22BA                        u8000 0C84                        u7121 429E  
                      u7201 439A                        u7041 2A10                        u6401 25CE  
                      u6321 24A2                        u6161 22B6                        u8001 0C80  
                      u6090 40F8                        u7130 42C8                        u7210 43B4  
                      u7050 2A2A                        u6410 25E4                        u6330 24DE  
                      u6250 23EC                        u6170 22D0                        u8010 0C96  
                      u6091 40F4                        u7131 42C4                        u7211 43B0  
                      u7051 2A26                        u6411 25E0                        u6331 24DA  
                      u6251 23E8                        u6171 22CC                        u8011 0C92  
                      u7140 42E6                        u7220 43D8                        u7300 3E2E  
                      u7060 2A3E                        u6500 26CC                        u6420 25FA  
                      u6340 2524                        u6260 240A                        u6180 22E2  
                      u8100 0DA2                        u8020 0CB8                        u7141 42E2  
                      u7221 43D4                        u7301 3E2A                        u7061 2A3A  
                      u6501 26C8                        u6421 25F6                        u6341 2520  
                      u6261 2406                        u6181 22DE                        u8101 0D9E  
                      u8021 0CB4                        u5710 49BC                        u7150 4302  
                      u7230 44C4                        u7070 2A58                        u7310 4AAE  
                      u6510 26E8                        u6430 2610                        u6350 255A  
                      u6270 242A                        u6190 22F2                        u8110 0DB0  
                      u8030 0CDE                        u5711 49B8                        u7151 42FE  
                      u7231 44C0                        u7071 2A54                        u7311 4AAA  
                      u6511 26E4                        u6431 260C                        u6351 2556  
                      u6271 2426                        u6191 22EE                        u8111 0DAC  
                      u8031 0CDA                        u5720 469C                        u5800 34F0  
                      u6600 37B6                        u6520 4A1E                        u7400 41E2  
                      u7160 4328                        u7240 4502                        u7080 2AA0  
                      u6440 2624                        u6360 256A                        u6280 2438  
                      u7320 3C44                        u8200 1110                        u8120 0DDA  
                      u8040 0CF4                        u5801 34EC                        u6601 37B2  
                      u6521 4A1A                        u7401 41DE                        u7161 4324  
                      u7241 44FE                        u7081 2A9C                        u6441 2620  
                      u6361 2566                        u6281 2434                        u7321 3C40  
                      u8201 110C                        u8121 0DD6                        u8041 0CF0  
                      u5730 46C4                        u5810 3500                        u6610 37F6  
                      u6530 4B30                        u7410 4238                        u7170 434C  
                      u7250 4536                        u7090 2ACE                        u6450 263E  
                      u6370 2596                        u6290 2448                        u7330 3C78  
                      u8210 111E                        u8130 0F22                        u8050 0D10  
                      u4675 3A24                        u5811 34FC                        u6611 37F2  
                      u6531 4B2C                        u7411 4234                        u7171 4348  
                      u7251 4532                        u7091 2ACA                        u6451 263A  
                      u6371 2592                        u6291 2444                        u8211 111A  
                      u8131 0F1E                        u8051 0D0C                        u5740 46D4  
                      u5820 350E                        u6620 3840                        u7420 4248  
                      u7180 4366                        u6700 2B52                        u7260 3D62  
                      u6460 2678                        u6380 25A6                        u7340 3CA6  
                      u7500 3F24                        u6540 4A90                        u8300 1310  
                      u8220 1138                        u8140 0F88                        u8060 0D46  
                      u4685 3A48                        u5741 46D0                        u5821 350A  
                      u6621 383C                        u7421 4244                        u7181 4362  
                      u6701 2B4E                        u7261 3D5E                        u6461 2674  
                      u6381 25A2                        u7341 3CA2                        u6541 4A8A  
                      u8301 130C                        u8221 1134                        u8141 0F84  
                      u8061 0D42                        u5830 3548                        u5750 33C8  
                      u6630 3894                        u7430 4A3A                        u7190 4380  
                      u6710 2B62                        u7270 3DA0                        u6470 268A  
                      u6390 25C2                        u7350 3CBA                        u7510 4840  
                      u6550 4A92                        u8310 1394                        u8230 1146  
                      u8150 0FD0                        u8070 0D6C                        u4695 3A6E  
                      u9007 4448                        u5727 4692                        u5831 3544  
                      u5751 33C4                        u6631 3890                        u7431 4A36  
                      u7191 437C                        u6711 2B5E                        u7271 3D9C  
                      u6471 2686                        u6391 25BE                        u7351 3CB6  
                      u7335 3C6E                        u8311 1390                        u8231 1142  
                      u8151 0FCC                        u8071 0D68                        u5840 3556  
                      u5760 33D6                        u8400 36AA                        u6560 370C  
                      u6640 38C6                        u6800 2D2E                        u6720 2BA6  
                      u7280 3DBE                        u6480 269A                        u7360 3CE2  
                      u7440 3E78                        u7600 32A8                        u7520 4852  
                      u8320 13AE                        u8240 119E                        u8160 0FE0  
                      u8080 0D7E                        u9017 4456                        u5737 46BA  
                      u5841 3552                        u5761 33D2                        u8401 36A4  
                      u6561 3708                        u6641 38C2                        u6801 2D2A  
                      u6721 2BA2                        u7281 3DBA                        u6481 2696  
                      u7361 3CDE                        u7601 32A4                        u7521 484E  
                      u8321 13AA                        u8241 119A                        u8161 0FDC  
                      u8081 0D7A                        u5770 3432                        u8410 36AC  
                      u6570 373E                        u6650 3904                        u6810 2D44  
                      u6730 2BB8                        u7290 3DDE                        u6490 26BA  
                      u7370 3D02                        u7450 3E96                        u7610 32CC  
                      u7530 47C8                        u8330 13C6                        u8250 1270  
                      u8170 1048                        u8090 0D8C                        u9027 4464  
                      u5771 342E                        u6571 373A                        u6651 3900  
                      u6811 2D40                        u6731 2BB4                        u7291 3DDA  
                      u6491 26B6                        u7371 3CFE                        u7451 3E92  
                      u7531 47C2                        u8331 13C2                        u8251 126C  
                      u8171 1044                        u8091 0D88                        u5780 3488  
                      u8420 36C2                        u6660 392E                        u7700 2EF0  
                      u6900 2E7E                        u6820 2D62                        u6740 2BC8  
                      u7380 3D12                        u7460 3EBE                        u7620 32E8  
                      u7540 47CA                        u8340 1424                        u8260 128C  
                      u8180 10EC                        u8500 1C74                        u9037 4472  
                      u5781 3484                        u8421 36BE                        u6581 3768  
                      u6661 392A                        u7701 2EEA                        u6901 2E7A  
                      u6821 2D5E                        u6741 2BC4                        u7381 3D0E  
                      u7461 3EBA                        u7445 3E6E                        u7621 32E4  
                      u7517 4836                        u8341 141E                        u8261 1288  
                      u8181 10E8                        u8501 1C70                        u5790 34D2  
                      u8430 36D4                        u6590 378C                        u6670 395C  
                      u7390 41C0                        u7710 2EF2                        u6910 2EAC  
                      u6830 2D82                        u6750 2C08                        u7470 3EE8  
                      u7630 333C                        u7550 47E0                        u8350 1426  
                      u8270 129E                        u8190 10FE                        u8510 1CB8  
                      u9047 4480                        u5791 34CE                        u8431 36D0  
                      u6591 3788                        u6671 3958                        u7391 41BC  
                      u6911 2EA8                        u6831 2D7E                        u6751 2C04  
                      u7471 3EE4                        u7615 32C2                        u7551 47DC  
                      u8271 129A                        u8191 10FA                        u8511 1CB4  
                      u6680 39A4                        u7800 310C                        u7720 2F08  
                      u6840 2D94                        u6760 2C48                        u6920 2716  
                      u7640 3358                        u7560 31EC                        u8360 143C  
                      u8280 12AC                        u8440 403A                        u8600 1EA0  
                      u8520 1D36                        u9057 448E                        u6681 39A0  
                      u7801 3108                        u7721 2F04                        u6841 2D90  
                      u6761 2C44                        u6921 2712                        u7641 3354  
                      u8361 1438                        u8281 12A8                        u8441 4036  
                      u8601 1E9C                        u8521 1D30                        u8370 35A2  
                      u7810 311C                        u7730 2F38                        u6850 2DC2  
                      u6770 2CBE                        u6690 2B40                        u6930 2728  
                      u7490 3F22                        u7650 3394                        u7570 321A  
                      u8290 12E2                        u8450 406C                        u8610 1EE2  
                      u8530 1D38                        u9067 39FC                        u8371 359E  
                      u7811 3118                        u7731 2F34                        u6851 2DBE  
                      u6771 2CBA                        u6691 2B3C                        u6931 2724  
                      u7491 3F1C                        u7651 3390                        u7635 3332  
                      u7571 3216                        u8291 12DE                        u8451 4068  
                      u8611 1EDE                        u7660 4B00                        u8380 35D8  
                      u7820 312E                        u7740 2F54                        u6860 2DD8  
                      u6780 2CE0                        u6940 2738                        u7580 323C  
                      u7900 09E8                        u8460 4088                        u8620 1F38  
                      u8540 1D4E                        u8700 472E                        u9077 3A84  
                      u7661 4AFA                        u8381 35D4                        u7821 312A  
                      u7741 2F50                        u6861 2DD4                        u6781 2CDC  
                      u6941 2734                        u7485 3EFA                        u7581 3238  
                      u7565 31E2                        u7901 09E2                        u8461 4084  
                      u8621 1F34                        u8541 1D4A                        u8701 472A  
                      u7670 4B02                        u8390 35F4                        u7830 313E  
                      u7750 2F82                        u6870 2DEC                        u6790 2D0A  
                      u6950 2778                        u7910 09EA                        u8470 409A  
                      u8630 1F5C                        u8550 1D72                        u8710 1526  
                      u9087 3B00                        u8391 35F0                        u7831 313A  
                      u7751 2F7E                        u6871 2DE8                        u6791 2D06  
                      u6951 2774                        u8471 4096                        u8631 1F58  
                      u8551 1D6E                        u8711 1522                        u7680 4916  
                      u7840 3156                        u7760 2F90                        u6880 2E06  
                      u6960 278A                        u7920 0A00                        u8480 40C2  
                      u8640 1FEE                        u8560 1DAC                        u8800 18F6  
                      u8720 1548                        u7681 4912                        u7841 3152  
                      u7761 2F8C                        u6881 2E02                        u6961 2786  
                      u7921 09FC                        u8481 40BE                        u8641 1FEA  
                      u8561 1DA8                        u8801 18F2                        u8721 1544  
                      u7690 4944                        u7770 30BA                        u6890 2E4E  
                      u6970 279A                        u7930 0A8C                        u7850 0900  
                      u8650 209C                        u8570 1E56                        u8490 1C2C  
                      u8810 1928                        u8730 155E                        u7691 4940  
                      u7771 30B6                        u6891 2E4A                        u6971 2796  
                      u7595 3250                        u7931 0A88                        u7851 08FC  
                      u8651 2098                        u8571 1E50                        u8491 1C28  
                      u8811 1924                        u8731 155A                        u7780 30D8  
                      u6980 27D0                        u7596 325A                        u7940 0ABC  
                      u7860 0950                        u8660 2104                        u8580 1E58  
                      u8820 1984                        u8740 159C                        u7781 30D4  
                      u6981 27CC                        u7597 326A                        u7941 0AB6  
                      u7861 094C                        u8661 20FE                        u8821 1980  
                      u8741 1598                        u7790 30F2                        u6990 27E0  
                      u7950 0ABE                        u7870 095E                        u8670 2106  
                      u8590 1E6E                        u8830 199E                        u8750 1762  
                      u7791 30EE                        u6991 27DC                        u7871 095A  
                      u8591 1E6A                        u8831 199A                        u8751 175E  
                      u7960 0AD4                        u7880 0970                        u8680 211C  
                      u8840 1ABC                        u8760 17C8                        u7961 0AD0  
                      u7881 096C                        u8681 2118                        u8841 1AB8  
                      u8761 17C4                        u7970 0B58                        u7890 09B8  
                      u8690 21B8                        u8850 1BCC                        u8770 17FA  
                      u7971 0B54                        u7891 09B4                        u8691 21B4  
                      u8851 1BC8                        u8907 189C                        u8771 17F6  
                      u7980 0BEC                        u8780 185E                        u7981 0BE8  
                      u8917 18B6                        u8781 185A                        u7990 0C5E  
                      u8790 1890                        u7991 0C5A                        u8927 192E  
                      u8791 188C                        u8937 1944                        u8947 465E  
                      u8867 176E                        u8957 43FE                        u8877 1788  
                      u8967 4412                        u8887 1806                        u8977 4424  
                      u8897 181E                        u8987 4432                        u8997 443A  
                      abs@a 0014                        _dbuf 0108                        _atoi 356A  
                      _main 4854                        _dtoa 2EC0                        _peso 00DE  
                      _prec 00F2                        _temp 00E6                        _nout 00EE  
                      pad@i 0019                        pad@p 0016                        fsr1h 000FE2  
                      fsr2h 000FDA                        indf1 000FE7                        indf2 000FDF  
                      fsr1l 000FE1                        pad@w 001B                        fsr2l 000FD9  
                      btemp 005D            __end_of_ADC_Init 4B86            __end_of_ADC_Read 49DC  
             ___fpclassifyf 3E38                        prodh 000FF4                        prodl 000FF3  
              ?_enviar_dato 0001                        start 000E             ___fldiv@new_exp 003A  
              _tolower$1477 000E                ___param_bank 000000                       ??_abs 0016  
                     ??_pad 0018            __end_of_LCD_Init 4496                 LCD_Out@text 000B  
              LCD_Chr@letra 000B               ___fltol@sign1 005A             __end_of___aodiv 3882  
                     ?_atoi 0009             __end_of___fladd 26FC                       ?_main 0001  
                     ?_dtoa 001D             __end_of___aomod 39E6             __end_of___fldiv 2EC0  
           __end_of___awdiv 433A             __end_of___flneg 4AD0                       STR_10 089D  
                     STR_11 08D4                       STR_20 08B8                       STR_12 084E  
                     STR_21 089D                       STR_13 085E                       STR_14 082B  
                     STR_22 08D4                       STR_30 08CD                       STR_15 08AF  
                     STR_23 086E                       STR_16 089D                       STR_24 0801  
                     STR_17 08D4                       STR_33 08D1                       STR_25 08C1  
                     STR_26 08C9                       STR_18 0893                       STR_19 082B  
                     STR_35 08D1             __end_of___awmod 43EA                       STR_29 08C5  
           __end_of___flmul 2B26             __end_of___flsub 4996             __end_of___fltol 3D34  
   __end_of_UART_Wrrite_Chr 4BEA             ___awdiv@divisor 0004                       i2l112 400C  
                     i2l201 4BFE                       i2l205 4BD2                       i2l198 4BF0  
           ___awdiv@counter 0006                       _RCREG 000FAE                       _RCSTA 000FAB  
              vfpfcnvrt@fmt 00A6                       _SPBRG 000FAF                       _PORTD 000F83  
                     _TRISC 000F94                       _TXREG 000FAD                       _TXSTA 000FAC  
                     _MenuP 1488          __size_of_UART_Init 00A8          __size_of_UART_Read 0018  
                     _flags 00F4                       _fputc 40E6         __size_of_LCD_Chr_Cp 000E  
                     _fputs 49DC             __end_of_isdigit 4B08                       _tempi 00E2  
                     atoi@n 0016                       pad@fp 0012                       atoi@s 0009  
                     _width 00F0                       _putch 4C1E                       dtoa@d 001F  
                     dtoa@i 003F                       dtoa@n 0037                       dtoa@p 0031  
                     dtoa@s 0035                       dtoa@w 0033             __end_of_isspace 4950  
           __end_of_isupper 4A98                       tablat 000FF5                       ttemp5 005E  
                     ttemp6 0061                       ttemp7 0065                       status 000FD8  
                     wtemp8 005E             __end_of_sprintf 48FE              ?___fpclassifyf 0002  
           __end_of_tolower 47F8             __end_of_strncmp 40E6             __initialization 4738  
              __end_of_atoi 36FA                __end_of_main 48AC                __end_of_dtoa 31A4  
                    ??_atoi 000B                      ??_main 005C                      ??_dtoa 0027  
             __activetblptr 000002                   ??_LCD_Cmd 0005                   ??_LCD_Chr 000C  
                 ??_LCD_Out 000D                      ?_MenuP 0001                      _ADCON1 000FC1  
                    ?_fputc 0002                      ?_fputs 000B                      _ADRESH 000FC4  
                    _ADRESL 000FC3            ___awdiv@dividend 0002                      ?_putch 0001  
                    _LCD_XY 45E8                      i2l2992 4BBC                      i2l2994 4BCA  
                    i2l2996 4BD0                      i2l4960 4BEC                      i2l4970 3F60  
                    i2l4962 3F38                      i2l4972 3F72                      i2l4980 3FBA  
                    i2l4964 3F46                      i2l4982 3FDC                      i2l4974 3F84  
                    i2l4966 3F4C                      i2l4976 3F96                      i2l4968 3F4E  
                    i2l4978 3FA8            __end_of___xxtofl 356A                vfprintf@cfmt 00CA  
         __end_of_UART_Init 45E8           __end_of_UART_Read 4BD4                      ___flge 3D34  
                    ___fleq 4496                   ??___aodiv 0012                   ??___fladd 004A  
                 ??___aomod 0012                      ___wmul 4B3E                   ??___fldiv 0031  
                 ??___awdiv 0006                   ??___flneg 0006                   ??___awmod 0006  
                 ??___flmul 0018                   ??___flsub 005A                   ??___fltol 0056  
                    _efgtoa 08D8                      _conver 00FC                      _floorf 31A4  
           ADC_Read@miCanal 0008                      clear_0 4776                      clear_1 4782  
          ___awdiv@quotient 0008             ___awmod@divisor 0004                      _opcion 00FE  
                    _nombre 0008                      _serial 3B12             ___awmod@counter 0006  
                    pad@buf 0014                      dtoa@fp 001D                      _strcpy 47F8  
                    _strlen 4B08            ?_UART_Wrrite_Chr 0001                      fputc@c 0002  
                    fputs@c 000F                      fputs@i 0010                      fputs@s 000B  
                 ??_isdigit 0004             ___fpclassifyf@e 000A                   ?_ADC_Init 0002  
           ___fpclassifyf@u 000C                   ?_ADC_Read 0002             ___fpclassifyf@x 0002  
              __mediumconst 0000                   ??_isspace 0004              enviar_dato@cmd 0004  
                    tblptrh 000FF7                   ??_isupper 0004                      tblptrl 000FF6  
                    tblptru 000FF8                      putch@c 0001            __end_of_vfprintf 4738  
                 ??_sprintf 005C                   ??_tolower 000A                   ??_strncmp 0008  
                ___flge@ff1 0029                  ___flge@ff2 002D             ??___fpclassifyf 0006  
              ___xxtofl@arg 000C                ___xxtofl@exp 000B                ___xxtofl@val 0002  
                ___fleq@ff1 0002                  ___fleq@ff2 0006                  __accesstop 0060  
   __end_of__initialization 478A                   ?_LCD_Init 0001                  ___flneg@f1 0002  
             ___rparam_used 000001                  ___fltol@f1 0052                ??_LCD_Chr_Cp 0005  
             __end_of_MenuP 1C08              __pcstackCOMRAM 0001        __size_of_enviar_dato 012C  
              __pidataBANK0 4C1C                __pidataBANK1 4B86               __end_of_fputc 41B0  
             __end_of_fputs 4A20               __end_of_putch 4C20                  ??_ADC_Init 0006  
                ??_ADC_Read 0004      i2UART_Wrrite_Chr@letra 0001                     ??_MenuP 0176  
                   ??_fputc 0006                     ??_fputs 000F                     ??_putch 0002  
        __end_of_LCD_Chr_Cp 4C0E                  __pbssBANK0 00DE                  __pbssBANK1 0100  
                   ?_LCD_XY 0006                     LCD_XY@x 0006                     LCD_XY@y 0009  
                ??_LCD_Init 0005                     ?___flge 0029                     ?___fleq 0002  
                   ?___wmul 0002                     ?_efgtoa 0060                     ?_floorf 0042  
                   ?_nombre 0001                     ?_serial 0001                     ?_strcpy 0002  
                   ?_strlen 0002                     _LCD_Cmd 4C0E                     _LCD_Chr 4BA4  
                   _LCD_Out 466A                   ?___xxtofl 0002          __size_of_vfpfcnvrt 0634  
           __size_of_LCD_XY 0082                     __Hparam 0000                     __Lparam 0000  
              ADC_Init@kTad 0002             __size_of___flge 0104             __size_of___fleq 00AA  
                   ___aodiv 36FA                     ___fladd 223C                     ___aomod 3882  
                   ___fldiv 2B26                     ___awdiv 4276                     ___flneg 4A98  
                   ___awmod 433A                     ___flmul 26FC                     ___flsub 4950  
                   ___fltol 3C2E             __size_of___wmul 0026                   ?_vfprintf 00C4  
              __psmallconst 0800             __size_of_efgtoa 0BB0             __size_of_floorf 0212  
                   __pcinit 4738                     __ramtop 0800             __size_of_nombre 4008  
                   __ptext0 4854                     __ptext1 3B12                     __ptext2 4BD4  
                   __ptext3 4540             __size_of_serial 011C                     __ptext4 1488  
                   __ptext5 48AC                     __ptext6 46D6                     __ptext7 1C08  
                   __ptext8 4010                     __ptext9 08D8                     _conver1 00FA  
                   _conver2 00F8                     _conver3 00F6             __size_of_strcpy 005C  
           __size_of_strlen 0036                __size_of_abs 0040                __size_of_pad 00C6  
                   _isdigit 4AD0                  ??___xxtofl 0006            ___awmod@dividend 0002  
          ADC_Read@miConver 0006                     _isspace 48FE                     _isupper 4A60  
                   efgtoa@c 0066                     efgtoa@d 0084                     efgtoa@e 009C  
                   efgtoa@f 0062                     efgtoa@g 0098                     efgtoa@h 008E  
                   efgtoa@i 0096                     efgtoa@l 0092                     efgtoa@m 0080  
                   efgtoa@n 009E                     efgtoa@p 0088                     efgtoa@t 007C  
                   efgtoa@u 00A0                     efgtoa@w 008B                     atoi@neg 000F  
                   _sprintf 48AC                     _tolower 4798                     _strncmp 4010  
            __pintcode_body 3F36        end_of_initialization 478A                     floorf@e 0050  
                   floorf@m 004C                     floorf@u 0052                     floorf@x 0042  
                   fputc@fp 0004               __Lmediumconst 0000                     int_func 3F36  
                   fputs@fp 000D           __end_of_vfpfcnvrt 223C                  efgtoa@mode 008D  
                efgtoa@sign 0086                   _RCSTAbits 000FAB                     postdec1 000FE5  
                   postdec2 000FDD                     postinc0 000FEE                     postinc1 000FE6  
                   postinc2 000FDE                  ??_vfprintf 005C                     strcpy@d 000A  
                   strlen@a 0004                     strcpy@s 0008                     strlen@s 0002  
                 _UART_Init 4540                   _UART_Read 4BBC                   _PORTCbits 000F82  
               ___fladd@grs 0051               ___xxtofl@sign 000A                   _TRISCbits 000F94  
                 _TRISDbits 000F95                 ___fldiv@grs 003C                 ___fldiv@rem 0035  
         __size_of_ADC_Init 0022           __size_of_ADC_Read 0046                 ___flmul@grs 001E  
                LCD_Cmd@cmd 0005              __end_of_LCD_XY 466A           __size_of_LCD_Init 00AC  
            __end_of___flge 3E38              __end_of___fleq 4540                 vfpfcnvrt@ap 00A8  
               vfpfcnvrt@ct 00C0                 vfpfcnvrt@fp 00A4                 vfpfcnvrt@ll 00AE  
            __end_of___wmul 4B64                  ?_UART_Init 0060                  ?_UART_Read 0001  
            __end_of_efgtoa 1488              __end_of_floorf 33B6                  floorf@F524 0100  
            __end_of_nombre 4010              __end_of_serial 3C2E              __end_of_strcpy 4854  
            __end_of_strlen 4B3E         start_initialization 4738                 __end_of_abs 4A60  
               __end_of_pad 4276    __size_of_UART_Wrrite_Chr 0016                    ??_LCD_XY 0007  
     __end_of___fpclassifyf 3F36               ??_enviar_dato 0002                 vfprintf@fmt 00C6  
                  ??___flge 0031                    ??___fleq 000A                    ??___wmul 0006  
                  ??_efgtoa 0067                 __pdataBANK0 00FE                 __pdataBANK1 0158  
                  ??_floorf 0046           UART_Init@BAUDRATE 0060                    ??_nombre 0002  
                  ??_serial 0003                    ??_strcpy 0006                    ??_strlen 0004  
                 ___fladd@a 0046                   ___fladd@b 0042                    ?_LCD_Cmd 0001  
                  ?_LCD_Chr 000A                   ___fldiv@a 002D                   ___fldiv@b 0029  
                  ?_LCD_Out 000A                   ___flmul@a 0014                   ___flmul@b 0010  
               __pbssCOMRAM 005C                   ___flsub@a 0056                   ___flsub@b 0052  
                  LCD_Chr@x 000A                    LCD_Chr@y 000C               __pcstackBANK0 0060  
             __pcstackBANK1 0176            ___aodiv@dividend 0002                    LCD_Out@x 000A  
                  LCD_Out@y 000D           __size_of___xxtofl 01B4           i2_UART_Wrrite_Chr 4BEA  
        ?i2_UART_Wrrite_Chr 0001                   _atoi$1382 0011                   _atoi$1383 0015  
                 _atoi$1384 0013                 _efgtoa$1320 0074                 _efgtoa$1315 0070  
               _efgtoa$1324 0076                 _efgtoa$1316 0072                 _efgtoa$1325 0078  
               _efgtoa$1326 007A                   _dtoa$1291 002F         ??i2_UART_Wrrite_Chr 0001  
                 __pintcode 0008                    ?___aodiv 0002                    ?___fladd 0042  
                  ?___aomod 0002                    ?___fldiv 0029                    ?___awdiv 0002  
          ___aodiv@quotient 0014                    ?___flneg 0002                    ?___awmod 0002  
                  ?___flmul 0010                    ?___flsub 0052                    ?___fltol 0052  
       __end_of_enviar_dato 3B12                 ??_UART_Init 005C                 ??_UART_Read 0001  
         __size_of_vfprintf 0062                 __smallconst 0800                    ?_isdigit 0002  
                  _ADC_Init 4B64                    _ADC_Read 4996                    ?_isspace 0002  
            __size_of_MenuP 0780                    ?_isupper 0002        UART_Wrrite_Chr@letra 0002  
           LCD_Chr_Cp@letra 0005   __end_ofi2_UART_Wrrite_Chr 4C00                    ?_sprintf 00CC  
                  ?_tolower 0008              __size_of_fputc 00CA              __size_of_fputs 0044  
                  ?_strncmp 0002              __size_of_putch 0002                    _LCD_Init 43EA  
            ___wmul@product 0006                    _LATDbits 000F8C                    _PIE1bits 000F9D  
         ??_UART_Wrrite_Chr 0002                    i2u600_40 4BFE                    i2u600_41 4BFA  
                  i2u601_40 3F46                    i2u601_41 3F42                    _PIR1bits 000F9E  
                  i2u602_40 3F60                    i2u602_41 3F5C                    i2u603_40 3F72  
                  i2u603_41 3F6E                    i2u604_40 3F84                    i2u604_41 3F80  
                  i2u605_40 3F96                    i2u605_41 3F92                    i2u606_40 3FA8  
                  i2u606_41 3FA4                    i2u607_40 3FBA                    i2u607_41 3FB6  
                  i2u296_40 4BCA                    i2u296_41 4BC6                   _vfpfcnvrt 1C08  
                _ADCON0bits 000FC2                  _ADCON2bits 000FC0           ___wmul@multiplier 0002  
          __size_of_LCD_Cmd 000E            __size_of_LCD_Chr 0018            __size_of_LCD_Out 006C  
              _isspace$1413 0008                  vfpfcnvrt@c 00C3                  vfpfcnvrt@f 00BC  
                 copy_data0 474C                 _enviar_dato 39E6                    __Hrparam 0000  
             ADC_Init@kTosc 0004                  vfprintf@ap 00C8                    __Lrparam 0000  
                vfprintf@fp 00C4            __size_of___aodiv 0188            __size_of___fladd 04C0  
          __size_of___aomod 0164            __size_of___fldiv 039A            __size_of___awdiv 00C4  
          __size_of___flneg 0038            __size_of___awmod 00B0            __size_of___flmul 042A  
          __size_of___flsub 0046            __size_of___fltol 0106                  ?_vfpfcnvrt 00A4  
           ___aodiv@divisor 000A             ___aodiv@counter 0012          ___fpclassifyf@F463 0104  
                sprintf@fmt 00CE                    ___xxtofl 33B6            __size_of_isdigit 0038  
          __size_of_isspace 0052                    __ptext10 4798                    __ptext11 4A60  
                  __ptext20 3D34                    __ptext12 47F8                    __ptext21 4496  
                  __ptext13 31A4                    __ptext30 4C1E                    __ptext22 2B26  
                  __ptext14 3E38                    __ptext31 4A20                    __ptext23 433A  
                  __ptext15 3C2E                    __ptext40 4C00                    __ptext32 3882  
                  __ptext24 4276                    __ptext16 4950                    __ptext41 4BA4  
                  __ptext33 36FA                    __ptext25 2EC0                    __ptext17 223C  
                  __ptext50 4BBC                    __ptext42 45E8                    __ptext34 356A  
                  __ptext26 41B0                    __ptext18 4A98                    __ptext43 4C0E  
                  __ptext35 48FE                    __ptext27 4B08                    __ptext19 26FC  
                  __ptext44 4996                    __ptext36 4AD0                    __ptext28 49DC  
                  __ptext45 43EA                    __ptext37 4B3E                    __ptext29 40E6  
                  __ptext46 39E6                    __ptext38 33B6                    __ptext47 4B64  
                  __ptext39 466A                    __ptext49 4BEA  __size_ofi2_UART_Wrrite_Chr 0016  
          __size_of_isupper 0038            __size_of_sprintf 0052            __size_of_tolower 0060  
                strcpy@dest 0002            __size_of_strncmp 00D6               __size_of_atoi 0190  
             __size_of_main 0058               __size_of_dtoa 02E4                    efgtoa@fp 0060  
                  efgtoa@ne 0082                    efgtoa@pp 007E                    efgtoa@ou 006C  
                _LCD_Chr_Cp 4C00                    int$flags 005D                    _vfprintf 46D6  
          ___aomod@dividend 0002              _vfpfcnvrt$1340 00B6              _vfpfcnvrt$1341 00B8  
            _vfpfcnvrt$1346 00BA                  _INTCONbits 000FF2                    isdigit@c 0002  
                  intlevel2 0000                   sprintf@ap 00D6                    isspace@c 0002  
                 strcpy@src 0004                    isupper@c 0002                   strncmp@_l 0002  
                 strncmp@_r 0004                 efgtoa@nmode 008A             ___aomod@divisor 000A  
               ??_vfpfcnvrt 00AA             ___aomod@counter 0012                    sprintf@f 00D8  
                  tolower@c 0008                    sprintf@s 00CC      __size_of___fpclassifyf 00FE  
                  strncmp@l 0009                    strncmp@n 0006                    strncmp@r 000B  
           _UART_Wrrite_Chr 4BD4               ___fladd@signs 004E                ___aodiv@sign 0013  
              ___fladd@aexp 004F                ___fladd@bexp 0050                ___aomod@sign 0013  
